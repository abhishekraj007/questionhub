{"version":3,"sources":["src/data-contracts/index.tsx","src/stores/authStore.ts","src/stores/menuStore.ts","src/firebase-config.js","src/apis/index.ts","src/stores/questionsStore.ts","src/stores/index.ts","src/components/Icons/Icons.tsx","src/components/Sidebar.tsx","src/utils.ts","src/components/Loader.tsx","src/components/QuestionDetail.tsx","src/components/QuestionItem.tsx","src/components/QuestionList.tsx","src/components/QuestionContainer.tsx","src/components/Header.tsx","src/components/LoginModal.tsx","src/screens/Dashboard.tsx","src/Main.tsx","App.tsx"],"names":["SidebarItem","AuthStore","isLoggedIn","user","undefined","showLoginModal","checkUserLoggedInStatus","a","async","AsyncStorage","getItem","setUser","JSON","parse","setIsLoggedIn","console","log","setItem","stringify","clearUser","removeItem","login","logout","window","location","reload","setShowLoginModal","value","makeAutoObservable","this","AppTheme","getCategory","indexPath","row","section","JAVASCRIPT_FAVORITE","REACT","REACT_FAVORITE","ALL_FAVORITES","JAVASCRIPT","getCategoryKey","category","getMenuKey","setMenuKey","MenuStore","selectedMenu","IndexPath","showSidebar","theme","LIGHT","loadTheme","userTheme","setTheme","setSelectedMenu","setShowSidebar","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","googleAuthProvider","GoogleAuthProvider","URLS","apiGetQuestions","url","fetch","res","json","data","apiLogInWithGoogle","signInWithPopup","result","Error","apiAddUser","payload","doc","id","setDoc","response","apiGetUserData","userId","userRef","getDoc","userSnap","QuestionStore","isLoading","filteredList","allFavorites","userFavs","javascript","favs","react","questionsMap","setJavascript","setReact","setFilteredList","setAllFavorites","setIsLoading","setUserFavs","updateFavs","favList","showBookmarkedOnTop","map","item","type","bookmarked","filter","dataWithFavsOnTop","includeFavorites","setFavsForAllCategories","excludeCurrentCategory","forEach","fav","founded","findIndex","splice","getQuestions","length","searchQuestion","text","filtered","q","title","toLocaleLowerCase","includes","toLowerCase","clearFilter","toggleFavorite","foundedIndex","foundedEle","newList","newFavList","ele","question","allFavs","updateDoc","apiUpdateUser","Store","menuStore","questionStore","authStore","BookOpen","props","style","width","height","name","StarIcon","GoogleIcon","Sidebar","observer","store","useContext","StoreContext","useTheme","selectedIndex","onSelect","index","accessoryLeft","accessoryRight","FavCount","paddingRight","View","backgroundColor","display","alignItems","justifyContent","borderRadius","fontSize","appearance","status","isItMobile","Dimensions","get","Loader","screenHeight","useWindowDimensions","styles","loaderContainer","size","StyleSheet","create","paddingBottom","memo","selected","screenWidth","content","join","contentWidth","source","html","baseStyle","letterSpacing","lineHeight","tagsStyles","body","color","padding","img","maxWidth","pre","position","left","top","transform","translateX","translateY","setSlected","selectedItem","useState","showDetail","setShowDetail","useEffect","paddingLeft","onPress","searchTimer","listData","setSelectedQuestion","selectedQuestion","ItemSeparatorComponent","Divider","renderItem","borderLeftWidth","borderRightWidth","borderColor","QuestionContainer","setValue","onFavToggle","selectedCategory","onSearch","clearTimeout","setTimeout","panel","panelLeft","placeholder","onChangeText","panelRight","flexDirection","overflow","showLoginMenu","setShowLoginMenu","iconColor","fill","DARK","onItemSelect","onLogin","onLogout","ToggleIcon","renderLoginMenu","icon","HamBurgerIcon","marginLeft","anchor","visible","onBackdropPress","displayName","disabled","isMakingCall","setIsMakingCall","CloseIcon","minHeight","header","paddingTop","newUser","uid","email","exists","container","questionContainerWidth","level","zIndex","eva","createContext","Provider","icons","EvaIconsPack"],"mappings":"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","file":"static/js/app.26d17dcd.chunk.js","sourcesContent":["import { IndexPath } from \"@ui-kitten/components\";\n\nexport interface Question {\n  id?: string;\n  title: string;\n  content: string[];\n  bookmarked?: boolean;\n  type?: string;\n}\nexport interface User {\n  id: string;\n  displayName?: string;\n  email?: string;\n}\n\nexport interface Favorites {\n  id: string;\n  type: string;\n}\n\nexport interface QuestionMap {\n  id: string;\n  question: Question;\n}\n\nexport const questionCategoriesList = [\"javascript\", \"react\"];\n\nexport enum SidebarItem {\n  JAVASCRIPT = \"JAVASCRIPT\",\n  JAVASCRIPT_FAVORITE = \"JAVASCRIPT_FAVORITE\",\n  REACT = \"REACT\",\n  REACT_FAVORITE = \"REACT_FAVORITE\",\n  ALL_FAVORITES = \"ALL_FAVORITES\",\n}\n\nexport const getCategory = (indexPath: IndexPath) => {\n  if (indexPath.row === 1 && indexPath.section === 0) {\n    return SidebarItem.JAVASCRIPT_FAVORITE;\n  } else if (\n    indexPath.row === 0 &&\n    (indexPath.section === 0 || indexPath.section === undefined)\n  ) {\n    return SidebarItem.JAVASCRIPT;\n  } else if (\n    (indexPath.row === 1 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 1)\n  ) {\n    return SidebarItem.REACT;\n  } else if (indexPath.row === 1 && indexPath.section === 1) {\n    return SidebarItem.REACT_FAVORITE;\n  } else if (indexPath.row === 2 && indexPath.section === undefined) {\n    return SidebarItem.ALL_FAVORITES;\n  }\n};\n\nexport const getCategoryKey = (category: SidebarItem) => {\n  // If item is present in fav list remove it\n  let getMenuKey = \"javascript\";\n  let setMenuKey = \"setJavascript\";\n\n  if (\n    category === SidebarItem.REACT ||\n    category === SidebarItem.REACT_FAVORITE\n  ) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n\n  return { getMenuKey, setMenuKey };\n};\n\nexport enum AppTheme {\n  LIGHT = \"LIGHT\",\n  DARK = \"DARK\",\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { User } from \"../data-contracts\";\n\nexport interface IAuthStore {\n  isLoggedIn: boolean;\n  setIsLoggedIn: (login: boolean) => void;\n  user: User;\n  setUser: (user: User) => void;\n  logout: () => void;\n  clearUser: () => void;\n  showLoginModal: boolean;\n  setShowLoginModal: (value: boolean) => void;\n  checkUserLoggedInStatus: () => void;\n}\n\nexport class AuthStore implements IAuthStore {\n  isLoggedIn: boolean = false;\n  user: User = undefined;\n  showLoginModal: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  checkUserLoggedInStatus = async () => {\n    try {\n      const user = await AsyncStorage.getItem(\"user\");\n      if (user) {\n        this.setUser(JSON.parse(user));\n        this.setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setUser = async (user: User) => {\n    this.user = user;\n    try {\n      await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  clearUser = async () => {\n    this.user = undefined;\n    try {\n      await AsyncStorage.removeItem(\"user\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setIsLoggedIn = (login: boolean) => {\n    this.isLoggedIn = login;\n  };\n\n  logout = () => {\n    this.setIsLoggedIn(false);\n    this.clearUser();\n    window.location.reload();\n  };\n\n  setShowLoginModal = (value: boolean) => {\n    this.showLoginModal = value;\n  };\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { Platform } from \"react-native\";\nimport { AppTheme } from \"../data-contracts\";\n\nexport interface IMenuStore {\n  selectedMenu: IndexPath;\n  setSelectedMenu: (selectedMenu: IndexPath) => void;\n  showSidebar: boolean;\n  setShowSidebar: (show: boolean) => void;\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  loadTheme: () => void;\n}\n\nexport class MenuStore implements IMenuStore {\n  selectedMenu: IndexPath = new IndexPath(0);\n  showSidebar: boolean = false;\n  theme: AppTheme = AppTheme.LIGHT;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  loadTheme = async () => {\n    try {\n      const userTheme = await AsyncStorage?.getItem(\"theme\");\n      if (userTheme) {\n        this.setTheme(userTheme as AppTheme);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setSelectedMenu = (selectedMenu) => {\n    this.selectedMenu = selectedMenu;\n  };\n\n  setShowSidebar = (value: boolean) => {\n    this.showSidebar = value;\n  };\n\n  setTheme = async (value: AppTheme) => {\n    this.theme = value;\n    try {\n      await AsyncStorage.setItem(\"theme\", value);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore/lite\"\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"\n\nimport {\n  FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGIN_SENDER_ID,\n  FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID,\n} from \"@env\"\n\n// console.log(FIREBASE_API_KEY);\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: FIREBASE_API_KEY,\n  authDomain: FIREBASE_AUTH_DOMAIN,\n  projectId: FIREBASE_PROJECT_ID,\n  storageBucket: FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: FIREBASE_MESSAGIN_SENDER_ID,\n  appId: FIREBASE_APP_ID,\n  measurementId: FIREBASE_MEASUREMENT_ID,\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig)\nexport const db = getFirestore(app)\n\nconst auth = getAuth(app)\n\nconst googleAuthProvider = new GoogleAuthProvider()\n\nexport const signInWithGoogle = () => signInWithPopup(auth, googleAuthProvider)\n","import {\n  addDoc,\n  collection,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  getDoc,\n} from \"firebase/firestore/lite\";\nimport { User } from \"../data-contracts\";\nimport { db, signInWithGoogle } from \"../firebase-config\";\n\nexport const URLS = {\n  js: \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/js-v1.json\",\n  react:\n    \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/react-v1.json\",\n};\n\nexport const apiGetQuestions = async (url: string = URLS.js) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const apiLogInWithGoogle = async () => {\n  try {\n    const result = await signInWithGoogle();\n    return result;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get a list of cities from your database\nexport const apiGetJavascriptQuestions = async () => {\n  const jsCol = collection(db, \"javascript\");\n  const jsSnapshot = await getDocs(jsCol);\n  const jsList = jsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  return jsList;\n};\n\n// Add a question\nexport const apiAddJavascriptQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  console.log(response);\n};\n\n// Add a question\nexport const apiAddReactQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  return response;\n};\n\n// Add user\nexport const apiAddUser = async (payload: User) => {\n  const user = doc(db, \"users\", payload.id);\n  try {\n    const response = await setDoc(user, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Update User\nexport const apiUpdateUser = async (payload: any) => {\n  const userRef = doc(db, \"users\", payload.id);\n\n  try {\n    const response = await updateDoc(userRef, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get user data\nexport const apiGetUserData = async (userId) => {\n  try {\n    // Get This user from databse\n    const userRef = doc(db, \"users\", userId);\n    const userSnap = await getDoc(userRef);\n    return userSnap;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { apiGetQuestions, URLS, apiUpdateUser, apiGetUserData } from \"../apis\";\nimport { getCategoryKey, Question, SidebarItem } from \"../data-contracts\";\n\ninterface IQModel {\n  data: Question[];\n  favs: Question[];\n}\n\nexport interface IQuestionStore {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  javascript: IQModel;\n  // javascript: Question[];\n  setJavascript: (questions: IQModel) => void;\n  // javascriptFavorites: Question[];\n  // setJavascriptFavorites: (questions: Question[]) => void;\n  react: IQModel;\n  setReact: (data: IQModel) => void;\n  filteredList: Question[];\n  setFilteredList: (questions: Question[]) => void;\n  allFavorites: Question[];\n  setAllFavorites: (questions: Question[]) => void;\n  getQuestions: (type: SidebarItem, userId?: string) => void;\n  toggleFavorite: (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => void;\n  searchQuestion: (text: string, category?: string) => void;\n  clearFilter: (selectedCategory) => void;\n  questions?: {\n    js: IQModel;\n    react: IQModel;\n  };\n  userFavs: Question[];\n  setUserFavs: (data: Question[]) => void;\n  questionsMap: any;\n}\n\nexport class QuestionStore implements IQuestionStore {\n  isLoading: boolean = false;\n  filteredList: Question[] = [];\n  allFavorites: Question[] = [];\n  userFavs: Question[] = [];\n  javascript: IQModel = {\n    data: [],\n    favs: [],\n  };\n  react: IQModel = {\n    data: [],\n    favs: [],\n  };\n\n  questionsMap = {};\n\n  setJavascript = (data: IQModel) => {\n    this.javascript = data;\n  };\n\n  setReact = (data: IQModel) => {\n    this.react = data;\n  };\n\n  setFilteredList = (data: Question[]) => {\n    this.filteredList = data;\n  };\n\n  setAllFavorites = (data: Question[]) => {\n    this.allFavorites = data;\n  };\n\n  setIsLoading = (isLoading: boolean) => {\n    this.isLoading = isLoading;\n  };\n\n  setUserFavs = (data: Question[]) => {\n    this.userFavs = data;\n  };\n\n  // This is when user loads the page\n  updateFavs = (\n    favList: Question[],\n    category?: SidebarItem,\n    showBookmarkedOnTop?: boolean\n  ) => {\n    // Add user bookmarked list\n    this.userFavs = favList;\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    // Filter bookmarked items by category\n    const favs = (favList ?? [])\n      .map((item) => {\n        if (item.type === category) {\n          return { ...item, bookmarked: true };\n        }\n      })\n      .filter((item) => item);\n\n    const dataWithFavsOnTop = this.includeFavorites(\n      this[getMenuKey].data,\n      favs\n    );\n\n    const data = showBookmarkedOnTop\n      ? dataWithFavsOnTop\n      : this[getMenuKey].data;\n\n    this[setMenuKey]({\n      favs,\n      data,\n    });\n    this.setFilteredList(data);\n    this.setFavsForAllCategories(favList, category);\n\n    // Set Favs for all categories\n  };\n\n  setFavsForAllCategories = (favList, excludeCurrentCategory) => {\n    const categories = [SidebarItem.JAVASCRIPT, SidebarItem.REACT].filter(\n      (item) => item !== excludeCurrentCategory\n    );\n\n    categories.forEach((category) => {\n      const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n      this[setMenuKey]({\n        data: this[getMenuKey].data,\n        favs: favList\n          ?.map((item) => {\n            if (item.type === category) {\n              return item;\n            }\n          })\n          .filter((item) => item),\n      });\n    });\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  includeFavorites = (data: Question[], favs: Question[]) => {\n    favs.forEach((fav) => {\n      const founded = data.findIndex((item) => item.id === fav.id);\n      data.splice(founded, 1);\n    });\n\n    return [...favs, ...data];\n  };\n\n  getQuestions = async (category: SidebarItem, userId?: string) => {\n    try {\n      console.log(\"made fresh api call\");\n      this.setIsLoading(true);\n      let data = [];\n\n      switch (category) {\n        case SidebarItem.JAVASCRIPT:\n          // Get js questions and set to store\n          data = await apiGetQuestions(URLS.js);\n          this.setJavascript({\n            ...this.javascript,\n            data,\n          });\n\n          // Add data to questionMap\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          // If user is loged in get bookmarked Item\n          // Otherwise there is no bookmared\n\n          if (userId) {\n            const userSnap = await apiGetUserData(userId);\n            this.updateFavs(userSnap.data().favs, category, true);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        case SidebarItem.REACT:\n          data = await apiGetQuestions(URLS.react);\n\n          this.setReact({\n            ...this.react,\n            data,\n          });\n\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          if (this.userFavs?.length) {\n            this.updateFavs(this.userFavs, category, true);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        default:\n          console.log(\"Made no call\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoading(false);\n    }\n  };\n\n  searchQuestion = (text: string, category: SidebarItem) => {\n    let filtered = [];\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        filtered = this[getMenuKey].data.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        filtered = this.userFavs.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      default:\n        filtered = this[getMenuKey].favs?.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLocaleLowerCase());\n        });\n    }\n\n    this.setFilteredList(filtered);\n  };\n\n  clearFilter = (category: SidebarItem) => {\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(this[getMenuKey].data);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(this.userFavs);\n        break;\n      default:\n        this.setFilteredList(this[getMenuKey].favs);\n    }\n  };\n\n  toggleFavorite = (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => {\n    // If item is present in fav list remove it\n\n    const { getMenuKey, setMenuKey } = getCategoryKey(item.type as SidebarItem);\n\n    const foundedIndex = this[getMenuKey].favs?.findIndex(\n      (fav) => fav.id === item.id\n    );\n\n    let foundedEle = this[getMenuKey].favs[foundedIndex];\n    let newList = [];\n    let newFavList = [];\n\n    // debugger;\n    if (foundedIndex >= 0) {\n      // Remove from fav\n\n      newList = this[getMenuKey].data.map((ele) => {\n        if (ele.id === foundedEle.id) {\n          return {\n            ...ele,\n            bookmarked: false,\n          };\n        }\n        return ele;\n      });\n\n      newFavList = this[getMenuKey].favs.filter(\n        (item) => item.id !== foundedEle.id\n      );\n\n      this[setMenuKey]({ data: newList, favs: newFavList });\n    } else {\n      // Add to fav\n      newList = this[getMenuKey].data.map((question) => {\n        if (question.id === item.id) {\n          return {\n            ...item,\n            bookmarked: true,\n          };\n        }\n        return question;\n      });\n\n      newFavList = [{ ...item, bookmarked: true }, ...this[getMenuKey].favs];\n\n      this[setMenuKey]({ data: newList, favs: newFavList });\n    }\n\n    const allFavs = [...this.javascript.favs, ...this.react.favs];\n    this.setUserFavs(allFavs);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(newList);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(allFavs);\n        break;\n      default:\n        this.setFilteredList(newFavList);\n    }\n\n    apiUpdateUser({\n      id: userId,\n      favs: allFavs,\n    });\n  };\n}\n","import { AuthStore, IAuthStore } from \"./authStore\";\nimport { IMenuStore, MenuStore } from \"./menuStore\";\nimport { IQuestionStore, QuestionStore } from \"./questionsStore\";\n\nexport interface IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n}\n\nexport class Store implements IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n\n  constructor() {\n    this.menuStore = new MenuStore();\n    this.questionStore = new QuestionStore();\n    this.authStore = new AuthStore();\n  }\n}\n","import { Icon } from \"@ui-kitten/components\";\n\nexport const BookOpen = (props) => (\n  <Icon {...props} style={{ width: 16, height: 16 }} name=\"book-open-outline\" />\n);\n\nexport const StarIcon = (props) => (\n  <Icon {...props} style={{ width: 16, height: 16 }} name=\"star-outline\" />\n);\n\nexport const HamBurgerIcon = (props) => (\n  <Icon {...props} style={{ width: 28, height: 28 }} name=\"menu-2-outline\" />\n);\n\nexport const CloseIcon = (props) => (\n  <Icon {...props} style={{ width: 28, height: 28 }} name=\"close-outline\" />\n);\n\nexport const Ellipsis = (props) => (\n  <Icon\n    {...props}\n    name=\"more-vertical-outline\"\n    style={{ width: 24, height: 24 }}\n  />\n);\nexport const GoogleIcon = (props) => (\n  <Icon {...props} name=\"google\" style={{ width: 16, height: 16 }} />\n);\n","import {\n  Menu,\n  MenuGroup,\n  MenuItem,\n  Icon,\n  Text,\n  useTheme,\n} from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { StoreContext } from \"../../App\";\nimport { getCategory } from \"../data-contracts\";\nimport { IStore } from \"../stores\";\nimport { isItMobile } from \"../utils\";\nimport { BookOpen, StarIcon } from \"./Icons/Icons\";\n\ninterface Props {\n  store: IStore;\n}\n\nexport const Sidebar = observer(() => {\n  const store = useContext(StoreContext);\n  const { questionStore, menuStore } = store;\n  const { selectedMenu, setSelectedMenu, setShowSidebar } = menuStore;\n\n  const { javascript, react, userFavs } = questionStore;\n  const theme = useTheme();\n\n  return (\n    <Menu\n      selectedIndex={selectedMenu}\n      onSelect={(index) => {\n        setSelectedMenu(index);\n        questionStore.clearFilter(getCategory(index));\n      }}\n    >\n      {javascript?.favs?.length ? (\n        <MenuGroup title=\"Javascript\">\n          <MenuItem\n            title=\"All\"\n            accessoryLeft={BookOpen}\n            accessoryRight={FavCount(theme, javascript.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n          <MenuItem\n            title=\"Favorites\"\n            accessoryLeft={StarIcon}\n            accessoryRight={FavCount(theme, javascript.favs)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        </MenuGroup>\n      ) : (\n        <MenuItem\n          title=\"Javascript\"\n          accessoryRight={FavCount(theme, javascript.data)}\n          style={{\n            paddingRight: 24,\n          }}\n        />\n      )}\n\n      {react?.favs?.length ? (\n        <MenuGroup title=\"React\">\n          <MenuItem\n            title=\"All\"\n            accessoryLeft={BookOpen}\n            accessoryRight={FavCount(theme, react.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n          <MenuItem\n            title=\"Favorites\"\n            accessoryLeft={StarIcon}\n            accessoryRight={FavCount(theme, react.favs)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        </MenuGroup>\n      ) : (\n        <MenuItem\n          title=\"React\"\n          accessoryRight={FavCount(theme, react.data)}\n          style={{\n            paddingRight: 24,\n          }}\n        />\n      )}\n\n      <MenuItem\n        title=\"All Favorites\"\n        accessoryRight={FavCount(theme, userFavs)}\n        style={{\n          paddingRight: 24,\n        }}\n      ></MenuItem>\n      {/* <MenuItem title=\"CSS\"></MenuItem>\n        <MenuItem title=\"Accessibility\"></MenuItem> */}\n    </Menu>\n  );\n});\n\nconst FavCount = (theme, data) => {\n  if (data?.length) {\n    return (\n      <View>\n        <Text\n          style={{\n            backgroundColor: theme[\"color-primary-transparent-200\"],\n            width: 40,\n            height: 20,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: 20,\n            fontSize: 10,\n          }}\n          category=\"label\"\n          appearance=\"hint\"\n          status=\"primary\"\n        >\n          {data?.length}\n        </Text>\n      </View>\n    );\n  }\n\n  return null;\n};\n","import { Dimensions } from \"react-native\";\n\nconst { width } = Dimensions.get(\"window\");\n\nexport const isItMobile = width < 769;\n","import { Spinner } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { isItMobile } from \"../utils\";\n\nexport default function Loader() {\n  const { height: screenHeight } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        styles.loaderContainer,\n        {\n          height: `${screenHeight - 90}px`,\n        },\n      ]}\n    >\n      <Spinner size=\"giant\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loaderContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingRight: `${isItMobile ? \"0\" : \"200\"}px`,\n    paddingBottom: `${isItMobile ? \"0\" : \"100\"}px`,\n  },\n});\n","import React, { memo } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport RenderHTML from \"react-native-render-html\";\nimport { useTheme, Text } from \"@ui-kitten/components\";\nimport { Question } from \"../data-contracts\";\nimport { Editor } from \"./Editor\";\n\ninterface QuestionDetailProps {\n  selected: Question | undefined;\n}\n\nconst QuestionDetail = ({ selected }: QuestionDetailProps) => {\n  const theme = useTheme();\n  const { width: screenWidth } = useWindowDimensions();\n  const content = selected?.content?.join(\"\");\n\n  if (selected) {\n    return (\n      <RenderHTML\n        contentWidth={screenWidth / 2}\n        source={{\n          html: content,\n        }}\n        baseStyle={{\n          fontSize: 18,\n          letterSpacing: 1,\n          lineHeight: 24,\n        }}\n        tagsStyles={{\n          body: {\n            color: theme[\"text-basic-color\"],\n            padding: 16,\n          },\n          img: {\n            maxWidth: \"100\",\n          },\n          pre: {\n            backgroundColor: theme[\"color-basic-transparent-200\"],\n            padding: 16,\n          },\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: [\n          {\n            translateX: -60,\n            translateY: -20,\n          },\n        ],\n      }}\n    >\n      {/* <Editor /> */}\n      <Text>Select a Question</Text>\n    </View>\n  );\n};\n\nexport default memo(QuestionDetail);\n","import React, { memo, useEffect, useState } from \"react\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { Button, Icon, IndexPath, ListItem, Text } from \"@ui-kitten/components\";\nimport { View } from \"react-native\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { isItMobile } from \"../utils\";\n\ninterface QuestionItemProps {\n  item: Question;\n  selectedItem: Question;\n  index: number;\n  setSlected: (item: Question) => void;\n  toggleFavorite: (item: Question, category: SidebarItem) => void;\n  selectedMenu: IndexPath;\n}\n\nconst QuestionItem = ({\n  item,\n  setSlected,\n  index,\n  toggleFavorite,\n  selectedItem,\n  selectedMenu,\n}: QuestionItemProps) => {\n  const [showDetail, setShowDetail] = useState(\n    item?.id === selectedItem?.id || false\n  );\n\n  useEffect(() => {\n    if (item?.id === selectedItem?.id && !showDetail) {\n      setShowDetail(true);\n    } else {\n      setShowDetail(false);\n    }\n  }, [item, selectedItem]);\n\n  const onItemClick = () => {\n    setSlected(item);\n  };\n\n  const StarIcon = (props) => (\n    <Icon {...props} name={item?.bookmarked ? \"star\" : \"star-outline\"} />\n  );\n\n  const favButton = () => {\n    return (\n      <Button\n        size=\"tiny\"\n        appearance=\"ghost\"\n        onPress={() => toggleFavorite(item, getCategory(selectedMenu))}\n        status={item?.bookmarked ? \"danger\" : \"basic\"}\n        accessoryLeft={StarIcon}\n      />\n    );\n  };\n\n  const Title = () => {\n    return (\n      <Text\n        category=\"s1\"\n        style={{\n          fontSize: 16,\n          paddingLeft: 8,\n        }}\n      >{`${index + 1}. ${item?.title}`}</Text>\n    );\n  };\n\n  return (\n    <View>\n      <ListItem\n        title={Title}\n        onPress={onItemClick}\n        accessoryRight={favButton}\n        style={{\n          backgroundColor:\n            item?.id === selectedItem?.id ? \"rgba(51, 102, 255, 0.08)\" : null,\n        }}\n      />\n\n      {showDetail && isItMobile && <QuestionDetail selected={selectedItem} />}\n    </View>\n  );\n};\n\nexport default memo(QuestionItem);\n","import { Divider, List } from \"@ui-kitten/components\";\nimport React, { memo } from \"react\";\nimport QuestionItem from \"./QuestionItem\";\n\nfunction QuestionList({\n  listData,\n  toggleFavorite,\n  setSelectedQuestion,\n  selectedQuestion,\n  selectedMenu,\n}) {\n  const renderQuestion = ({ item, index }) => {\n    return (\n      <QuestionItem\n        key={item?.id}\n        item={item}\n        index={index}\n        setSlected={setSelectedQuestion}\n        selectedItem={selectedQuestion}\n        toggleFavorite={toggleFavorite}\n        selectedMenu={selectedMenu}\n      />\n    );\n  };\n\n  return (\n    <List\n      data={listData}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderQuestion}\n      style={{\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: \"rgba(0,0,0,0.1)\",\n      }}\n    />\n  );\n}\n\nexport default memo(QuestionList);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { View, StyleSheet, useWindowDimensions } from \"react-native\";\nimport Loader from \"./Loader\";\nimport { Input } from \"@ui-kitten/components\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { observer } from \"mobx-react-lite\";\nimport QuestionList from \"./QuestionList\";\nimport { isItMobile } from \"../utils\";\nimport { StoreContext } from \"../../App\";\n\nlet searchTimer;\n\nexport const QuestionContainer = observer(() => {\n  const store = useContext(StoreContext);\n\n  const {\n    menuStore: { selectedMenu },\n    authStore: { user, setShowLoginModal },\n    questionStore: {\n      isLoading,\n      getQuestions,\n      toggleFavorite,\n      searchQuestion,\n      filteredList,\n      setFilteredList,\n      react,\n      javascript,\n    },\n  } = store;\n\n  const [selectedQuestion, setSelectedQuestion] = useState<Question>();\n  const { height: screenHeight, width } = useWindowDimensions();\n\n  const [value, setValue] = useState(\"\");\n\n  // On Load\n  useEffect(() => {\n    (async () => {\n      getQuestions(SidebarItem.JAVASCRIPT, user?.id);\n    })();\n  }, [user?.id]);\n\n  const onFavToggle = (item: Question, category: SidebarItem) => {\n    // Allow fav only if user is loggedIn\n    if (user) {\n      toggleFavorite(item, category, user?.id);\n      // Otherwise show login modal\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  // On Menu change\n  useEffect(() => {\n    // set list data based on menu selection\n    const selectedCategory = getCategory(selectedMenu);\n    console.log(\"selectedCategory => \", selectedCategory);\n    if (selectedCategory === SidebarItem.JAVASCRIPT) {\n      setFilteredList(javascript.data);\n    } else if (selectedCategory === SidebarItem.JAVASCRIPT_FAVORITE) {\n      setFilteredList(javascript.favs);\n    } else if (selectedCategory === SidebarItem.REACT) {\n      if (react.data.length) {\n        setFilteredList(react.data);\n      } else {\n        getQuestions(SidebarItem.REACT);\n      }\n    } else if (selectedCategory === SidebarItem.REACT_FAVORITE) {\n      setFilteredList(react.favs);\n    }\n  }, [selectedMenu]);\n\n  const onSearch = (value: string) => {\n    setValue(value);\n\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      searchQuestion(value, getCategory(selectedMenu));\n    }, 300);\n  };\n\n  const renderList = () => {\n    return (\n      <>\n        {isLoading && <Loader />}\n        <View style={styles.panel}>\n          <View\n            style={[\n              styles.panelLeft,\n              {\n                height: `${screenHeight - 90}px`,\n              },\n            ]}\n          >\n            <Input\n              placeholder=\"Search\"\n              size=\"small\"\n              value={value}\n              onChangeText={onSearch}\n            />\n\n            <QuestionList\n              listData={filteredList}\n              toggleFavorite={onFavToggle}\n              selectedQuestion={selectedQuestion}\n              setSelectedQuestion={setSelectedQuestion}\n              selectedMenu={selectedMenu}\n            />\n          </View>\n          {!isItMobile && (\n            <View\n              style={[\n                styles.panelRight,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <QuestionDetail selected={selectedQuestion} />\n            </View>\n          )}\n        </View>\n      </>\n    );\n  };\n\n  return renderList();\n});\n\nconst styles = StyleSheet.create({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  panelLeft: {\n    width: `${isItMobile ? \"100%\" : \"40%\"}`,\n    overflow: \"scroll\",\n  },\n  panelRight: {\n    width: `60%`,\n    overflow: \"scroll\",\n    padding: 16,\n    paddingRight: 32,\n  },\n});\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n  OverflowMenu,\n  MenuItem,\n  Text,\n} from \"@ui-kitten/components\";\nimport { AppTheme } from \"../data-contracts\";\nimport { View } from \"react-native\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\nimport { StoreContext } from \"../../App\";\nimport { isItMobile } from \"../utils\";\nimport { CloseIcon, Ellipsis, GoogleIcon, HamBurgerIcon } from \"./Icons/Icons\";\n\nfunction Header() {\n  const { menuStore, authStore } = useContext(StoreContext);\n\n  const { setShowSidebar, showSidebar, theme, setTheme } = menuStore;\n\n  const { user, isLoggedIn, setShowLoginModal } = authStore;\n  const [showLoginMenu, setShowLoginMenu] = useState(false);\n\n  const iconColor = {\n    fill: theme === AppTheme.DARK ? \"#ffffff\" : \"#222b45\",\n  };\n\n  const onItemSelect = () => {\n    setShowLoginMenu(false);\n  };\n\n  const onLogin = () => {\n    setShowLoginModal(true);\n  };\n\n  const onLogout = () => {\n    authStore.logout();\n  };\n\n  const ToggleIcon = (props) => (\n    <Icon {...props} name={theme === AppTheme.LIGHT ? \"moon\" : \"sun\"} />\n  );\n\n  const renderLoginMenu = () => (\n    <TopNavigationAction\n      onPress={() => setShowLoginMenu(true)}\n      icon={() => Ellipsis(iconColor)}\n    />\n  );\n\n  const renderOverflowMenu = () => {\n    return (\n      <OverflowMenu\n        anchor={renderLoginMenu}\n        visible={showLoginMenu}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setShowLoginMenu(false)}\n      >\n        {isLoggedIn && <MenuItem title={user?.displayName} disabled={true} />}\n\n        {isLoggedIn && (\n          <MenuItem\n            onPress={onLogout}\n            title=\"Logout\"\n            accessoryLeft={() => GoogleIcon(iconColor)}\n          />\n        )}\n\n        {!isLoggedIn && (\n          <MenuItem\n            onPress={onLogin}\n            title=\"Login\"\n            accessoryLeft={() => GoogleIcon(iconColor)}\n          />\n        )}\n      </OverflowMenu>\n    );\n  };\n\n  const renderHamburger = () => {\n    if (isItMobile) {\n      return (\n        <TopNavigationAction\n          onPress={() => setShowSidebar(!showSidebar)}\n          icon={() =>\n            showSidebar ? CloseIcon(iconColor) : HamBurgerIcon(iconColor)\n          }\n          style={{\n            marginLeft: 16,\n          }}\n        />\n      );\n    }\n    return null;\n  };\n\n  const renderRightNav = () => {\n    return (\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <TopNavigationAction\n          onPress={() => {\n            setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n          }}\n          icon={ToggleIcon}\n          style={{\n            marginLeft: 16,\n          }}\n        />\n        {!isLoggedIn && (\n          <Button\n            appearance=\"outline\"\n            status=\"primary\"\n            // status=\"success\"\n            onPress={onLogin}\n            size=\"tiny\"\n            style={{\n              marginLeft: 16,\n            }}\n          >\n            Login\n          </Button>\n        )}\n        {isLoggedIn && renderOverflowMenu()}\n      </View>\n    );\n  };\n\n  return (\n    <TopNavigation\n      style={{\n        paddingLeft: 16,\n        paddingRight: 16,\n      }}\n      title={\"Interview Questions\"}\n      accessoryLeft={renderHamburger}\n      accessoryRight={renderRightNav}\n    ></TopNavigation>\n  );\n}\n\nexport default observer(Header);\n","import React, { useContext, useState } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport { Button, Card, Icon, Spinner, Text } from \"@ui-kitten/components\";\nimport { apiAddUser, apiGetUserData, apiLogInWithGoogle } from \"../apis\";\nimport { observer } from \"mobx-react-lite\";\nimport { StoreContext } from \"../../App\";\n\nconst LoginModal = () => {\n  const { authStore, menuStore, questionStore } = useContext(StoreContext);\n\n  const { setUser, setIsLoggedIn, showLoginModal, setShowLoginModal } =\n    authStore;\n  const { setUserFavs } = questionStore;\n  const { selectedMenu } = menuStore;\n  const { width } = useWindowDimensions();\n  const [isMakingCall, setIsMakingCall] = useState(false);\n\n  const onLogin = async () => {\n    try {\n      setIsMakingCall(true);\n      // Authenticate using Google\n      const res = await apiLogInWithGoogle();\n      const newUser = {\n        id: res.user.uid,\n        displayName: res.user.displayName,\n        email: res.user.email,\n      };\n\n      // Update state\n      setUser(newUser);\n      setIsLoggedIn(true);\n\n      const userSnap = await apiGetUserData(newUser.id);\n\n      // Check if this user exist\n      if (userSnap.exists()) {\n        // TODO: Can we use to reload page\n        // setUserFavs(userSnap?.data()?.favs, getCategory(selectedMenu));\n        window.location.reload();\n      } else {\n        // Add this user to database\n        await apiAddUser(newUser);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsMakingCall(false);\n      setShowLoginModal(false);\n    }\n  };\n\n  const LoadingIndicator = () => (\n    <View>\n      <Spinner size=\"small\" />\n    </View>\n  );\n\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n  const CloseIcon = (props) => <Icon {...props} name=\"close\" />;\n\n  const Header = (props) => (\n    <View\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        paddingTop: 12,\n        paddingBottom: 12,\n        paddingLeft: 24,\n        paddingRight: 24,\n        alignItems: \"center\",\n      }}\n    >\n      <Text category=\"h5\">Login</Text>\n      <Button\n        onPress={() => setShowLoginModal(false)}\n        size=\"large\"\n        appearance=\"ghost\"\n        accessoryLeft={CloseIcon}\n      />\n    </View>\n  );\n\n  if (!showLoginModal) {\n    return <View />;\n  }\n\n  return (\n    <View\n      style={{\n        minHeight: 220,\n        position: \"absolute\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        style={{\n          maxWidth: width,\n          width: 420,\n        }}\n        disabled={true}\n        header={Header}\n      >\n        <View\n          style={{\n            paddingTop: 32,\n            paddingBottom: 32,\n          }}\n        >\n          <Button\n            disabled={isMakingCall}\n            size=\"giant\"\n            accessoryLeft={isMakingCall ? LoadingIndicator : GoogleIcon}\n            onPress={onLogin}\n          >\n            Login with Google\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n};\n\nexport default observer(LoginModal);\n","import React, { useContext, useEffect } from \"react\";\nimport { Divider, Layout } from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { QuestionContainer } from \"../components/QuestionContainer\";\nimport Header from \"../components/Header\";\nimport { IStore } from \"../stores\";\nimport LoginModal from \"../components/LoginModal\";\nimport { StoreContext } from \"../../App\";\nimport { isItMobile } from \"../utils\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface HomeProps {\n  store?: IStore;\n}\n\nfunction Home({}: HomeProps) {\n  const { menuStore, authStore } = useContext(StoreContext);\n  console.log(authStore);\n\n  const { showSidebar } = menuStore;\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  useEffect(() => {\n    authStore.checkUserLoggedInStatus();\n    menuStore.loadTheme();\n  }, []);\n\n  const renderSidebar = () => {\n    if (!isItMobile) {\n      return (\n        <View\n          style={{\n            width: \"280px\",\n          }}\n        >\n          <Sidebar />\n        </View>\n      );\n    }\n\n    if (showSidebar) {\n      return (\n        <View\n          style={{\n            width: \"280px\",\n            position: \"absolute\",\n            zIndex: 11,\n            height: \"100%\",\n          }}\n        >\n          <Sidebar />\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const questionContainerWidth = isItMobile ? \"100%\" : `${screenWidth - 280}px`;\n\n  return (\n    <View>\n      <Header />\n      <Divider />\n      <Layout style={styles.container} level=\"3\">\n        {renderSidebar()}\n\n        <View\n          style={{\n            width: questionContainerWidth,\n          }}\n        >\n          <QuestionContainer />\n        </View>\n      </Layout>\n      <LoginModal />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nexport default observer(Home);\n","import React, { useContext } from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport { ApplicationProvider } from \"@ui-kitten/components\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport Home from \"./screens/Dashboard\";\nimport { StoreContext } from \"../App\";\nimport { AppTheme } from \"./data-contracts\";\nimport { observer } from \"mobx-react-lite\";\n\nfunction Main() {\n  const {\n    menuStore: { theme },\n  } = useContext(StoreContext);\n\n  return (\n    <ApplicationProvider\n      {...eva}\n      theme={theme === AppTheme.LIGHT ? eva.light : eva.dark}\n    >\n      <SafeAreaProvider>\n        <Home />\n      </SafeAreaProvider>\n    </ApplicationProvider>\n  );\n}\n\nexport default observer(Main);\n","import React, { createContext, useContext } from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport {\n  ApplicationProvider,\n  Divider,\n  Layout,\n  IconRegistry,\n  Card,\n} from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"./src/components/Sidebar\";\nimport { QuestionContainer } from \"./src/components/QuestionContainer\";\nimport { useState } from \"react\";\nimport { AppTheme } from \"./src/data-contracts\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport Header from \"./src/components/Header\";\nimport { useEffect } from \"react\";\nimport { IStore, Store } from \"./src/stores\";\nimport LoginModal from \"./src/components/LoginModal\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport Home from \"./src/screens/Dashboard\";\nimport { AppNavigator } from \"./src/components/navigation/AppNavigator\";\nimport Main from \"./src/Main\";\n\nconst store = new Store();\n\nexport const StoreContext = createContext<IStore>(undefined);\n\nexport default () => {\n  return (\n    <StoreContext.Provider value={store}>\n      <IconRegistry icons={EvaIconsPack} />\n      <Main />\n    </StoreContext.Provider>\n  );\n};\n"],"sourceRoot":""}