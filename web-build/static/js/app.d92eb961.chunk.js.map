{"version":3,"sources":["src/data-contracts/index.tsx","src/components/Sidebar.tsx","src/components/Loader.tsx","src/components/QuestionDetail.tsx","src/components/QuestionItem.tsx","src/components/QuestionItemWeb.tsx","src/components/QuestionList.tsx","src/components/QuestionContainer.tsx","src/components/Header.tsx","src/stores/menuStore.ts","src/apis/index.ts","src/stores/questionsStore.ts","App.tsx","src/stores/index.ts"],"names":["SidebarItem","AppTheme","getCategory","indexPath","row","section","JAVASCRIPT_FAVORITE","undefined","REACT","REACT_FAVORITE","ALL_FAVORITES","JAVASCRIPT","getCategoryKey","category","getMenuKey","setMenuKey","Sidebar","observer","store","menuStore","questionStore","javascript","react","theme","allFavorites","useTheme","StarIcon","props","style","width","height","name","FavCount","data","View","backgroundColor","display","alignItems","justifyContent","borderRadius","appearance","status","length","BookOpen","selectedIndex","selectedMenu","onSelect","index","console","log","setSelectedMenu","clearFilter","fav","title","accessoryLeft","accessoryRight","Loader","screenHeight","useWindowDimensions","styles","loaderContainer","size","StyleSheet","create","paddingRight","paddingBottom","memo","selected","screenWidth","contentWidth","source","html","content","tagsStyles","body","color","position","left","top","transform","translateX","translateY","accordionItem","borderWidth","borderColor","marginBottom","item","useState","setSlected","toggleFavorite","selectedItem","bookmarked","onPress","id","searchTimer","listData","setSelectedQuestion","selectedQuestion","ItemSeparatorComponent","Divider","renderItem","Platform","OS","borderLeftWidth","borderRightWidth","QuestionContainer","isLoading","getQuestions","searchQuestion","filteredList","setFilteredList","value","setValue","useEffect","a","async","selectedCategory","onSearch","clearTimeout","setTimeout","panel","panelLeft","placeholder","onChangeText","panelRight","nextValue","flexDirection","overflow","padding","Header","setTheme","ToggleIcon","LIGHT","paddingLeft","DARK","icon","MenuStore","IndexPath","makeAutoObservable","this","URLS","apiGetQuestions","url","fetch","res","json","QuestionStore","includeFavorites","favs","forEach","founded","findIndex","splice","type","setIsLoading","currentJsListIncludingFavs","setJavascript","currentDataIncludingFavs","setReact","setAllFavorites","text","filtered","filter","q","toLocaleLowerCase","includes","toLowerCase","foundedIndex","foundedEle","newList","newFavList","map","ele","question","localStorage","setItem","JSON","stringify","jsFavString","getItem","reactFavString","parse","userTheme","icons","EvaIconsPack","eva","container"],"mappings":"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","file":"static/js/app.d92eb961.chunk.js","sourcesContent":["import { IndexPath } from \"@ui-kitten/components\";\n\nexport interface Question {\n  id?: string;\n  title: string;\n  content: string[];\n  bookmarked?: boolean;\n  category?: string;\n}\n\nexport enum SidebarItem {\n  JAVASCRIPT = \"JAVASCRIPT\",\n  JAVASCRIPT_FAVORITE = \"JAVASCRIPT_FAVORITE\",\n  REACT = \"REACT\",\n  REACT_FAVORITE = \"REACT_FAVORITE\",\n  ALL_FAVORITES = \"ALL_FAVORITES\",\n}\n\nexport const getCategory = (indexPath: IndexPath) => {\n  if (indexPath.row === 1 && indexPath.section === 0) {\n    return SidebarItem.JAVASCRIPT_FAVORITE;\n  } else if (\n    indexPath.row === 0 &&\n    (indexPath.section === 0 || indexPath.section === undefined)\n  ) {\n    return SidebarItem.JAVASCRIPT;\n  } else if (\n    (indexPath.row === 1 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 1)\n  ) {\n    return SidebarItem.REACT;\n  } else if (indexPath.row === 1 && indexPath.section === 1) {\n    return SidebarItem.REACT_FAVORITE;\n  } else if (indexPath.row === 2 && indexPath.section === undefined) {\n    return SidebarItem.ALL_FAVORITES;\n  }\n};\n\nexport const getCategoryKey = (category: SidebarItem) => {\n  // If item is present in fav list remove it\n  let getMenuKey = \"javascript\";\n  let setMenuKey = \"setJavascript\";\n\n  if (category === SidebarItem.JAVASCRIPT_FAVORITE) {\n    getMenuKey = \"javascript\";\n    setMenuKey = \"setJavascript\";\n  }\n\n  if (category === SidebarItem.REACT) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n  if (category === SidebarItem.REACT_FAVORITE) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n\n  return { getMenuKey, setMenuKey };\n};\n\nexport enum AppTheme {\n  LIGHT = \"LIGHT\",\n  DARK = \"DARK\",\n}\n","import {\n  Menu,\n  MenuGroup,\n  MenuItem,\n  Icon,\n  Text,\n  useTheme,\n} from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { View } from \"react-native\";\nimport { getCategory } from \"../data-contracts\";\nimport { IStore } from \"../stores\";\n\ninterface Props {\n  store: IStore;\n}\n\nexport const Sidebar = observer(\n  ({ store: { menuStore, questionStore } }: Props) => {\n    const { javascript, react, allFavorites } = questionStore;\n    const theme = useTheme();\n\n    const StarIcon = (props) => (\n      <Icon {...props} style={{ width: 16, height: 16 }} name=\"star-outline\" />\n    );\n\n    const FavCount = (data) => (\n      <View\n        style={{\n          backgroundColor: theme[\"border-basic-color-4\"],\n          width: 20,\n          height: 20,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          borderRadius: 20,\n        }}\n      >\n        <Text category=\"label\" appearance=\"hint\" status=\"primary\">\n          {data.length}\n        </Text>\n      </View>\n    );\n\n    const BookOpen = (props) => (\n      <Icon\n        {...props}\n        style={{ width: 16, height: 16 }}\n        name=\"book-open-outline\"\n      />\n    );\n\n    return (\n      <Menu\n        selectedIndex={menuStore.selectedMenu}\n        onSelect={(index) => {\n          console.log(index);\n          menuStore.setSelectedMenu(index);\n          questionStore.clearFilter(getCategory(index));\n        }}\n      >\n        {javascript?.fav.length ? (\n          <MenuGroup title=\"Javascript\">\n            <MenuItem title=\"All\" accessoryLeft={BookOpen} />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(javascript.fav)}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem title=\"Javascript\" />\n        )}\n\n        {react?.fav.length ? (\n          <MenuGroup title=\"React\">\n            <MenuItem title=\"All\" accessoryLeft={BookOpen} />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(react.fav)}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem title=\"React\" />\n        )}\n\n        <MenuItem title=\"HTML\"></MenuItem>\n        <MenuItem title=\"CSS\"></MenuItem>\n        <MenuItem title=\"Accessibility\"></MenuItem>\n      </Menu>\n    );\n  }\n);\n","import { Spinner } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\n\nexport default function Loader() {\n  const { height: screenHeight } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        styles.loaderContainer,\n        {\n          height: `${screenHeight - 90}px`,\n        },\n      ]}\n    >\n      <Spinner size=\"giant\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loaderContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingRight: 200,\n    paddingBottom: 100,\n  },\n});\n","import React, { memo } from \"react\";\nimport { useWindowDimensions, StyleSheet, View } from \"react-native\";\nimport RenderHTML from \"react-native-render-html\";\nimport { Layout, styled, useTheme, Text } from \"@ui-kitten/components\";\nimport { Question } from \"../data-contracts\";\n\ninterface QuestionDetailProps {\n  selected: Question | undefined;\n}\n\nconst QuestionDetail = ({ selected }: QuestionDetailProps) => {\n  const theme = useTheme();\n  const { width: screenWidth, height: screenHeight } = useWindowDimensions();\n\n  if (selected) {\n    return (\n      <RenderHTML\n        contentWidth={screenWidth / 2}\n        source={{\n          html: `${selected?.content}`,\n        }}\n        tagsStyles={{\n          body: {\n            color: theme[\"text-basic-color\"],\n          },\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: [\n          {\n            translateX: -60,\n            translateY: -20,\n          },\n        ],\n      }}\n    >\n      <Text>Select a Question</Text>\n    </View>\n  );\n};\n\nexport default memo(QuestionDetail);\n","import React, { memo } from \"react\";\nimport { useState } from \"react\";\nimport { Question } from \"../data-contracts\";\nimport { StyleSheet, useWindowDimensions } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\nimport RenderHTML from \"react-native-render-html\";\n\ninterface QuestionItemProps {\n  item: Question;\n}\n\nconst QuestionItem = ({ item }: QuestionItemProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const { title, content } = item;\n  const wrappedContent = `<div>${content}</div>`;\n  const { width } = useWindowDimensions();\n\n  return <Text>{item.title}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  accordionItem: {\n    borderWidth: 1,\n    borderColor: \"rgba(0,0,0,0.1)\",\n    borderRadius: 2,\n    marginBottom: 8,\n  },\n});\n\nexport default memo(QuestionItem);\n","import React, { memo } from \"react\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { Button, Icon, IndexPath, ListItem } from \"@ui-kitten/components\";\n\ninterface QuestionItemWebProps {\n  item: Question;\n  selectedItem: Question;\n  index: number;\n  setSlected: (item: Question) => void;\n  toggleFavorite: (item: Question, category: SidebarItem) => void;\n  selectedMenu: IndexPath;\n}\n\nconst QuestionItemWeb = ({\n  item,\n  setSlected,\n  index,\n  toggleFavorite,\n  selectedItem,\n  selectedMenu,\n}: QuestionItemWebProps) => {\n  const onItemClick = () => {\n    setSlected(item);\n  };\n\n  const StarIcon = (props) => (\n    <Icon {...props} name={item?.bookmarked ? \"star\" : \"star-outline\"} />\n  );\n\n  const favButton = () => {\n    return (\n      <Button\n        size=\"tiny\"\n        appearance=\"ghost\"\n        onPress={() => toggleFavorite(item, getCategory(selectedMenu))}\n        status={item?.bookmarked ? \"danger\" : \"basic\"}\n        accessoryLeft={StarIcon}\n      />\n    );\n  };\n\n  return (\n    <ListItem\n      title={`${index + 1}. ${item?.title}`}\n      onPress={onItemClick}\n      accessoryRight={favButton}\n      style={{\n        backgroundColor:\n          item?.id === selectedItem?.id ? \"rgba(51, 102, 255, 0.08)\" : null,\n      }}\n    />\n  );\n};\n\nexport default memo(QuestionItemWeb);\n","import { Divider, List } from \"@ui-kitten/components\";\nimport React, { memo } from \"react\";\nimport { Platform } from \"react-native\";\nimport QuestionItem from \"./QuestionItem\";\nimport QuestionItemWeb from \"./QuestionItemWeb\";\n\nfunction QuestionList({\n  listData,\n  toggleFavorite,\n  setSelectedQuestion,\n  selectedQuestion,\n  selectedMenu,\n}) {\n  const renderQuestion = ({ item, index }) => {\n    if (Platform.OS === \"web\") {\n      return (\n        <QuestionItemWeb\n          key={item?.id}\n          item={item}\n          index={index}\n          setSlected={setSelectedQuestion}\n          selectedItem={selectedQuestion}\n          toggleFavorite={toggleFavorite}\n          selectedMenu={selectedMenu}\n        />\n      );\n    }\n    return <QuestionItem key={item?.title} item={item} />;\n  };\n\n  return (\n    <List\n      data={listData}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderQuestion}\n      style={{\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: \"rgba(0,0,0,0.1)\",\n      }}\n    />\n  );\n}\n\nexport default memo(QuestionList);\n","import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Platform, useWindowDimensions } from \"react-native\";\nimport Loader from \"./Loader\";\nimport { Input } from \"@ui-kitten/components\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { observer } from \"mobx-react-lite\";\nimport { IStore } from \"../stores\";\nimport QuestionList from \"./QuestionList\";\n\ninterface Props {\n  store: IStore;\n}\n\nlet searchTimer;\n\nexport const QuestionContainer = observer(({ store }: Props) => {\n  const {\n    menuStore: { selectedMenu },\n    questionStore: {\n      isLoading,\n      getQuestions,\n      toggleFavorite,\n      searchQuestion,\n      filteredList,\n      setFilteredList,\n      react,\n      javascript,\n    },\n  } = store;\n\n  console.log(filteredList);\n\n  const [selectedQuestion, setSelectedQuestion] = useState<Question>();\n  const { height: screenHeight } = useWindowDimensions();\n\n  const [value, setValue] = useState(\"\");\n\n  // On Load\n  useEffect(() => {\n    (async () => {\n      getQuestions(SidebarItem.JAVASCRIPT);\n    })();\n  }, []);\n\n  // On Menu change\n  useEffect(() => {\n    // set list data based on menu selection\n    const selectedCategory = getCategory(selectedMenu);\n    console.log(selectedCategory);\n    if (selectedCategory === SidebarItem.JAVASCRIPT) {\n      console.log(\"set js\");\n      setFilteredList(javascript.data);\n    } else if (selectedCategory === SidebarItem.JAVASCRIPT_FAVORITE) {\n      setFilteredList(javascript.fav);\n    } else if (selectedCategory === SidebarItem.REACT) {\n      if (react.data.length) {\n        setFilteredList(react.data);\n      } else {\n        getQuestions(SidebarItem.REACT);\n      }\n    } else if (selectedCategory === SidebarItem.REACT_FAVORITE) {\n      setFilteredList(react.fav);\n    }\n  }, [selectedMenu]);\n\n  const onSearch = (value: string) => {\n    setValue(value);\n\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      searchQuestion(value, getCategory(selectedMenu));\n    }, 300);\n  };\n\n  const renderList = () => {\n    if (Platform.OS === \"web\") {\n      return (\n        <>\n          {isLoading && <Loader />}\n          <View style={styles.panel}>\n            <View\n              style={[\n                styles.panelLeft,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Search\"\n                size=\"small\"\n                value={value}\n                onChangeText={onSearch}\n              />\n\n              <QuestionList\n                listData={filteredList}\n                toggleFavorite={toggleFavorite}\n                selectedQuestion={selectedQuestion}\n                setSelectedQuestion={setSelectedQuestion}\n                selectedMenu={selectedMenu}\n              />\n            </View>\n            <View\n              style={[\n                styles.panelRight,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <QuestionDetail selected={selectedQuestion} />\n            </View>\n          </View>\n        </>\n      );\n    }\n    return (\n      <>\n        {isLoading && <Loader />}\n        <Input\n          placeholder=\"Search\"\n          value={value}\n          onChangeText={(nextValue) => setValue(nextValue)}\n        />\n        <QuestionList\n          listData={filteredList}\n          toggleFavorite={toggleFavorite}\n          selectedQuestion={selectedQuestion}\n          setSelectedQuestion={setSelectedQuestion}\n          selectedMenu={selectedMenu}\n        />\n      </>\n    );\n  };\n\n  return renderList();\n});\n\nconst styles = StyleSheet.create({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  panelLeft: {\n    width: `40%`,\n    overflow: \"scroll\",\n  },\n  panelRight: {\n    width: `60%`,\n    overflow: \"scroll\",\n    padding: 16,\n    paddingRight: 32,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Icon,\n  Input,\n  TopNavigation,\n  TopNavigationAction,\n} from \"@ui-kitten/components\";\nimport { AppTheme } from \"../data-contracts\";\nimport { useWindowDimensions, View } from \"react-native\";\n\ninterface Props {\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n}\n\nfunction Header({ theme, setTheme }: Props) {\n  const [value, setValue] = useState(\"\");\n  const { width } = useWindowDimensions();\n\n  const ToggleIcon = (props) => (\n    <Icon {...props} name={theme === AppTheme.LIGHT ? \"moon\" : \"sun\"} />\n  );\n\n  const SearchBar = () => (\n    <View\n      style={{\n        width: width - 440,\n        maxWidth: 600,\n        marginRight: width / 8,\n      }}\n    >\n      <Input\n        placeholder=\"Search\"\n        value={value}\n        onChangeText={(nextValue) => setValue(nextValue)}\n      />\n    </View>\n  );\n\n  const renderRightNav = () => {\n    return (\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          // width: \"80%\",\n        }}\n      >\n        {/* <SearchBar /> */}\n        <TopNavigationAction\n          onPress={() => {\n            setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n          }}\n          icon={ToggleIcon}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <TopNavigation\n      style={{\n        paddingLeft: 16,\n        paddingRight: 16,\n      }}\n      title={\"Interview Questions\"}\n      // accessoryLeft={SearchBar}\n      accessoryRight={renderRightNav}\n    ></TopNavigation>\n  );\n}\n\nexport default Header;\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\n\nexport interface IMenuStore {\n  selectedMenu: IndexPath;\n  setSelectedMenu: (selectedMenu: IndexPath) => void;\n}\n\nexport class MenuStore implements IMenuStore {\n  selectedMenu: IndexPath = new IndexPath(0);\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setSelectedMenu(selectedMenu) {\n    this.selectedMenu = selectedMenu;\n  }\n}\n","export const URLS = {\n  js: \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/js-v1.json\",\n  react:\n    \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/react-v1.json\",\n};\n\nexport const apiGetQuestions = async (url: string = URLS.js) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { apiGetQuestions, URLS } from \"../apis\";\nimport { getCategoryKey, Question, SidebarItem } from \"../data-contracts\";\n\ninterface IQModel {\n  data: Question[];\n  fav: Question[];\n}\n\nexport interface IQuestionStore {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  javascript: IQModel;\n  // javascript: Question[];\n  setJavascript: (questions: IQModel) => void;\n  // javascriptFavorites: Question[];\n  // setJavascriptFavorites: (questions: Question[]) => void;\n  react: IQModel;\n  setReact: (data: IQModel) => void;\n  filteredList: Question[];\n  setFilteredList: (questions: Question[]) => void;\n  allFavorites: Question[];\n  setAllFavorites: (questions: Question[]) => void;\n  getQuestions: (type: SidebarItem) => void;\n  toggleFavorite: (item: Question, category?: SidebarItem) => void;\n  searchQuestion: (text: string, category?: string) => void;\n  clearFilter: (selectedCategory) => void;\n  questions?: {\n    js: IQModel;\n    react: IQModel;\n  };\n}\n\nexport class QuestionStore implements IQuestionStore {\n  isLoading: boolean = false;\n  filteredList: Question[] = [];\n  allFavorites: Question[] = [];\n  javascript: IQModel = {\n    data: [],\n    fav: [],\n  };\n\n  react: IQModel = {\n    data: [],\n    fav: [],\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n\n    // Get favorites from localstore\n    const jsFavString = localStorage.getItem(\"javascript\");\n    const reactFavString = localStorage.getItem(\"react\");\n\n    if (jsFavString) {\n      this.setJavascript({\n        ...this.javascript,\n        fav: JSON.parse(jsFavString),\n      });\n      this.setAllFavorites([...this.allFavorites, JSON.parse(jsFavString)]);\n    }\n\n    if (reactFavString) {\n      this.setReact({\n        ...this.react,\n        fav: JSON.parse(reactFavString),\n      });\n      this.setAllFavorites([...this.allFavorites, JSON.parse(reactFavString)]);\n    }\n  }\n\n  includeFavorites = (data: Question[], favs: Question[]) => {\n    favs.forEach((fav) => {\n      const founded = data.findIndex((item) => item.id === fav.id);\n      data.splice(founded, 1);\n    });\n\n    return [...favs, ...data];\n  };\n\n  getQuestions = async (type: SidebarItem) => {\n    try {\n      console.log(\"made fresh api call\");\n      this.setIsLoading(true);\n      let data = [];\n\n      switch (type) {\n        case SidebarItem.JAVASCRIPT:\n          data = await apiGetQuestions(URLS.js);\n          const currentJsListIncludingFavs = this.includeFavorites(\n            data,\n            this.javascript.fav\n          );\n          this.setJavascript({\n            ...this.javascript,\n            data: currentJsListIncludingFavs,\n          });\n          this.setFilteredList(currentJsListIncludingFavs);\n          // console.log(\"Made js call\", currentJsListIncludingFavs);\n          break;\n        case SidebarItem.REACT:\n          data = await apiGetQuestions(URLS.react);\n          const currentDataIncludingFavs = this.includeFavorites(\n            data,\n            this.react.fav\n          );\n          this.setReact({\n            ...this.react,\n            data: currentDataIncludingFavs,\n          });\n          this.setFilteredList(currentDataIncludingFavs);\n          // console.log(\"made react call\", currentDataIncludingFavs);\n          break;\n        default:\n          console.log(\"Made no call\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoading(false);\n    }\n  };\n\n  setJavascript = (data: IQModel) => {\n    this.javascript = data;\n  };\n\n  setReact = (data: IQModel) => {\n    this.react = data;\n  };\n\n  setFilteredList = (data: Question[]) => {\n    this.filteredList = data;\n  };\n\n  setAllFavorites = (data: Question[]) => {\n    this.allFavorites = data;\n  };\n\n  setIsLoading = (isLoading: boolean) => {\n    this.isLoading = isLoading;\n  };\n\n  searchQuestion = (text: string, category: SidebarItem) => {\n    let filtered = [];\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        filtered = this[getMenuKey].data.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        filtered = this.allFavorites.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      default:\n        filtered = this[getMenuKey].fav?.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLocaleLowerCase());\n        });\n    }\n\n    this.setFilteredList(filtered);\n  };\n\n  clearFilter = (category: SidebarItem) => {\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(this[getMenuKey].data);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(this.allFavorites);\n        break;\n      default:\n        this.setFilteredList(this[getMenuKey].fav);\n    }\n  };\n\n  toggleFavorite = (item: Question, category?: SidebarItem) => {\n    // If item is present in fav list remove it\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    const foundedIndex = this[getMenuKey].fav.findIndex(\n      (fav) => fav.id === item.id\n    );\n\n    let foundedEle = this[getMenuKey].fav[foundedIndex];\n    let newList = [];\n    let newFavList = [];\n\n    if (foundedIndex >= 0) {\n      // Remove from fav\n\n      newList = this[getMenuKey].data.map((ele) => {\n        if (ele.id === foundedEle.id) {\n          return {\n            ...ele,\n            bookmarked: false,\n          };\n        }\n        return ele;\n      });\n\n      newFavList = this[getMenuKey].fav.filter(\n        (item) => item.id !== foundedEle.id\n      );\n\n      this[setMenuKey]({ data: newList, fav: newFavList });\n    } else {\n      // Add to fav\n      newList = this[getMenuKey].data.map((question) => {\n        if (question.id === item.id) {\n          return {\n            ...item,\n            bookmarked: true,\n          };\n        }\n        return question;\n      });\n\n      newFavList = [{ ...item, bookmarked: true }, ...this[getMenuKey].fav];\n\n      this[setMenuKey]({ data: newList, fav: newFavList });\n    }\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(newList);\n        break;\n      default:\n        this.setFilteredList(newFavList);\n    }\n    this.setAllFavorites([...this.javascript.fav, ...this.react.fav]);\n    localStorage.setItem(getMenuKey, JSON.stringify(newFavList));\n  };\n}\n","import React from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport {\n  ApplicationProvider,\n  Divider,\n  Layout,\n  IconRegistry,\n} from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"./src/components/Sidebar\";\nimport { QuestionContainer } from \"./src/components/QuestionContainer\";\nimport { useState } from \"react\";\nimport { AppTheme } from \"./src/data-contracts\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport Header from \"./src/components/Header\";\nimport { useEffect } from \"react\";\nimport { Store } from \"./src/stores\";\n\nconst store = new Store();\n\nexport default () => {\n  const { width: screenWidth } = useWindowDimensions();\n  const userTheme = localStorage.getItem(\"theme\");\n  const [theme, setTheme] = useState<AppTheme>(\n    (userTheme as AppTheme) ?? AppTheme.LIGHT\n  );\n\n  console.log(store);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <>\n      <IconRegistry icons={EvaIconsPack} />\n      <ApplicationProvider\n        {...eva}\n        theme={theme === AppTheme.LIGHT ? eva.light : eva.dark}\n      >\n        <Header theme={theme} setTheme={setTheme} />\n        <Divider />\n        <Layout style={styles.container}>\n          <View\n            style={{\n              width: \"280px\",\n            }}\n          >\n            <Sidebar store={store} />\n          </View>\n          <View\n            style={{\n              width: `${screenWidth - 280}px`,\n            }}\n          >\n            <QuestionContainer store={store} />\n          </View>\n        </Layout>\n      </ApplicationProvider>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n","import { IMenuStore, MenuStore } from \"./menuStore\";\nimport { IQuestionStore, QuestionStore } from \"./questionsStore\";\n\nexport interface IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n}\n\nexport class Store implements IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n\n  constructor() {\n    this.menuStore = new MenuStore();\n    this.questionStore = new QuestionStore();\n  }\n}\n"],"sourceRoot":""}