{"version":3,"sources":["src/data-contracts/index.tsx","src/components/Sidebar.tsx","src/components/Loader.tsx","src/components/QuestionDetail.tsx","src/components/QuestionItem.tsx","src/components/QuestionItemWeb.tsx","src/components/QuestionList.tsx","src/components/QuestionContainer.tsx","src/components/Header.tsx","src/stores/authStore.ts","src/stores/menuStore.ts","src/firebase-config.js","src/apis/index.ts","src/stores/questionsStore.ts","src/stores/index.ts","src/components/LoginModal.tsx","App.tsx"],"names":["SidebarItem","AppTheme","getCategory","indexPath","row","section","JAVASCRIPT_FAVORITE","undefined","REACT","REACT_FAVORITE","ALL_FAVORITES","JAVASCRIPT","getCategoryKey","category","getMenuKey","setMenuKey","Sidebar","observer","store","menuStore","questionStore","javascript","react","theme","allFavorites","useTheme","StarIcon","props","style","width","height","name","FavCount","data","View","backgroundColor","display","alignItems","justifyContent","borderRadius","appearance","status","length","BookOpen","selectedIndex","selectedMenu","onSelect","index","console","log","setSelectedMenu","clearFilter","fav","title","accessoryLeft","accessoryRight","Loader","screenHeight","useWindowDimensions","styles","loaderContainer","size","StyleSheet","create","paddingRight","paddingBottom","memo","selected","screenWidth","contentWidth","source","html","content","tagsStyles","body","color","position","left","top","transform","translateX","translateY","accordionItem","borderWidth","borderColor","marginBottom","item","useState","setSlected","toggleFavorite","selectedItem","bookmarked","onPress","id","searchTimer","listData","setSelectedQuestion","selectedQuestion","ItemSeparatorComponent","Divider","renderItem","Platform","OS","borderLeftWidth","borderRightWidth","QuestionContainer","authStore","user","setShowLoginModal","isLoading","getQuestions","searchQuestion","filteredList","setFilteredList","setUserFavs","value","setValue","useEffect","a","async","onFavToggle","selectedCategory","onSearch","clearTimeout","setTimeout","panel","panelLeft","placeholder","onChangeText","panelRight","nextValue","flexDirection","overflow","padding","setTheme","isLoggedIn","visible","setVisible","onItemSelect","onLogin","onLogout","logout","ToggleIcon","LIGHT","Ellipsis","GoogleIcon","renderToggleButton","paddingLeft","DARK","icon","marginLeft","anchor","onBackdropPress","displayName","disabled","AuthStore","showLoginModal","setUser","localStorage","setItem","JSON","stringify","clearUser","removeItem","setIsLoggedIn","login","makeAutoObservable","this","getItem","parse","MenuStore","IndexPath","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","googleAuthProvider","GoogleAuthProvider","URLS","apiGetQuestions","url","fetch","res","json","apiLogInWithGoogle","signInWithPopup","result","Error","apiAddUser","payload","doc","setDoc","response","apiGetUserData","userId","userRef","getDoc","userSnap","QuestionStore","questionsMap","userFavs","favList","favs","map","type","filter","currentListIncludingFav","includeFavorites","forEach","founded","findIndex","splice","setIsLoading","setJavascript","setReact","setAllFavorites","text","filtered","q","toLocaleLowerCase","includes","toLowerCase","foundedIndex","foundedEle","newList","newFavList","ele","question","updateDoc","apiUpdateUser","Store","CloseIcon","minHeight","maxWidth","header","paddingTop","newUser","uid","email","exists","userTheme","icons","EvaIconsPack","eva","container","level"],"mappings":"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","file":"static/js/app.7499844f.chunk.js","sourcesContent":["import { IndexPath } from \"@ui-kitten/components\";\n\nexport interface Question {\n  id?: string;\n  title: string;\n  content: string[];\n  bookmarked?: boolean;\n  type?: string;\n}\nexport interface User {\n  id: string;\n  displayName?: string;\n  email?: string;\n}\n\nexport interface Favorites {\n  id: string;\n  type: string;\n}\n\nexport interface QuestionMap {\n  id: string;\n  question: Question;\n}\n\nexport const questionCategoriesList = [\"javascript\", \"react\"];\n\nexport enum SidebarItem {\n  JAVASCRIPT = \"JAVASCRIPT\",\n  JAVASCRIPT_FAVORITE = \"JAVASCRIPT_FAVORITE\",\n  REACT = \"REACT\",\n  REACT_FAVORITE = \"REACT_FAVORITE\",\n  ALL_FAVORITES = \"ALL_FAVORITES\",\n}\n\nexport const getCategory = (indexPath: IndexPath) => {\n  if (indexPath.row === 1 && indexPath.section === 0) {\n    return SidebarItem.JAVASCRIPT_FAVORITE;\n  } else if (\n    indexPath.row === 0 &&\n    (indexPath.section === 0 || indexPath.section === undefined)\n  ) {\n    return SidebarItem.JAVASCRIPT;\n  } else if (\n    (indexPath.row === 1 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 1)\n  ) {\n    return SidebarItem.REACT;\n  } else if (indexPath.row === 1 && indexPath.section === 1) {\n    return SidebarItem.REACT_FAVORITE;\n  } else if (indexPath.row === 2 && indexPath.section === undefined) {\n    return SidebarItem.ALL_FAVORITES;\n  }\n};\n\nexport const getCategoryKey = (category: SidebarItem) => {\n  // If item is present in fav list remove it\n  let getMenuKey = \"javascript\";\n  let setMenuKey = \"setJavascript\";\n\n  if (category === SidebarItem.JAVASCRIPT_FAVORITE) {\n    getMenuKey = \"javascript\";\n    setMenuKey = \"setJavascript\";\n  }\n\n  if (category === SidebarItem.REACT) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n  if (category === SidebarItem.REACT_FAVORITE) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n\n  return { getMenuKey, setMenuKey };\n};\n\nexport enum AppTheme {\n  LIGHT = \"LIGHT\",\n  DARK = \"DARK\",\n}\n","import {\n  Menu,\n  MenuGroup,\n  MenuItem,\n  Icon,\n  Text,\n  useTheme,\n} from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { View } from \"react-native\";\nimport { getCategory } from \"../data-contracts\";\nimport { IStore } from \"../stores\";\n\ninterface Props {\n  store: IStore;\n}\n\nexport const Sidebar = observer(\n  ({ store: { menuStore, questionStore } }: Props) => {\n    const { javascript, react, allFavorites } = questionStore;\n    const theme = useTheme();\n\n    const StarIcon = (props) => (\n      <Icon {...props} style={{ width: 16, height: 16 }} name=\"star-outline\" />\n    );\n\n    const FavCount = (data) => (\n      <View\n        style={{\n          backgroundColor: theme[\"border-basic-color-4\"],\n          width: 20,\n          height: 20,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          borderRadius: 20,\n        }}\n      >\n        <Text category=\"label\" appearance=\"hint\" status=\"primary\">\n          {data.length}\n        </Text>\n      </View>\n    );\n\n    const BookOpen = (props) => (\n      <Icon\n        {...props}\n        style={{ width: 16, height: 16 }}\n        name=\"book-open-outline\"\n      />\n    );\n\n    return (\n      <Menu\n        selectedIndex={menuStore.selectedMenu}\n        onSelect={(index) => {\n          console.log(index);\n          menuStore.setSelectedMenu(index);\n          questionStore.clearFilter(getCategory(index));\n        }}\n      >\n        {javascript?.fav.length ? (\n          <MenuGroup title=\"Javascript\">\n            <MenuItem title=\"All\" accessoryLeft={BookOpen} />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(javascript.fav)}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem title=\"Javascript\" />\n        )}\n\n        {react?.fav.length ? (\n          <MenuGroup title=\"React\">\n            <MenuItem title=\"All\" accessoryLeft={BookOpen} />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(react.fav)}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem title=\"React\" />\n        )}\n\n        <MenuItem title=\"HTML\"></MenuItem>\n        <MenuItem title=\"CSS\"></MenuItem>\n        <MenuItem title=\"Accessibility\"></MenuItem>\n      </Menu>\n    );\n  }\n);\n","import { Spinner } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\n\nexport default function Loader() {\n  const { height: screenHeight } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        styles.loaderContainer,\n        {\n          height: `${screenHeight - 90}px`,\n        },\n      ]}\n    >\n      <Spinner size=\"giant\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loaderContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingRight: 200,\n    paddingBottom: 100,\n  },\n});\n","import React, { memo } from \"react\";\nimport { useWindowDimensions, StyleSheet, View } from \"react-native\";\nimport RenderHTML from \"react-native-render-html\";\nimport { Layout, styled, useTheme, Text } from \"@ui-kitten/components\";\nimport { Question } from \"../data-contracts\";\n\ninterface QuestionDetailProps {\n  selected: Question | undefined;\n}\n\nconst QuestionDetail = ({ selected }: QuestionDetailProps) => {\n  const theme = useTheme();\n  const { width: screenWidth, height: screenHeight } = useWindowDimensions();\n\n  if (selected) {\n    return (\n      <RenderHTML\n        contentWidth={screenWidth / 2}\n        source={{\n          html: `${selected?.content}`,\n        }}\n        tagsStyles={{\n          body: {\n            color: theme[\"text-basic-color\"],\n          },\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: [\n          {\n            translateX: -60,\n            translateY: -20,\n          },\n        ],\n      }}\n    >\n      <Text>Select a Question</Text>\n    </View>\n  );\n};\n\nexport default memo(QuestionDetail);\n","import React, { memo } from \"react\";\nimport { useState } from \"react\";\nimport { Question } from \"../data-contracts\";\nimport { StyleSheet, useWindowDimensions } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\nimport RenderHTML from \"react-native-render-html\";\n\ninterface QuestionItemProps {\n  item: Question;\n}\n\nconst QuestionItem = ({ item }: QuestionItemProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const { title, content } = item;\n  const wrappedContent = `<div>${content}</div>`;\n  const { width } = useWindowDimensions();\n\n  return <Text>{item.title}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  accordionItem: {\n    borderWidth: 1,\n    borderColor: \"rgba(0,0,0,0.1)\",\n    borderRadius: 2,\n    marginBottom: 8,\n  },\n});\n\nexport default memo(QuestionItem);\n","import React, { memo } from \"react\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { Button, Icon, IndexPath, ListItem } from \"@ui-kitten/components\";\n\ninterface QuestionItemWebProps {\n  item: Question;\n  selectedItem: Question;\n  index: number;\n  setSlected: (item: Question) => void;\n  toggleFavorite: (item: Question, category: SidebarItem) => void;\n  selectedMenu: IndexPath;\n}\n\nconst QuestionItemWeb = ({\n  item,\n  setSlected,\n  index,\n  toggleFavorite,\n  selectedItem,\n  selectedMenu,\n}: QuestionItemWebProps) => {\n  const onItemClick = () => {\n    setSlected(item);\n  };\n\n  const StarIcon = (props) => (\n    <Icon {...props} name={item?.bookmarked ? \"star\" : \"star-outline\"} />\n  );\n\n  const favButton = () => {\n    return (\n      <Button\n        size=\"tiny\"\n        appearance=\"ghost\"\n        onPress={() => toggleFavorite(item, getCategory(selectedMenu))}\n        status={item?.bookmarked ? \"danger\" : \"basic\"}\n        accessoryLeft={StarIcon}\n      />\n    );\n  };\n\n  return (\n    <ListItem\n      title={`${index + 1}. ${item?.title}`}\n      onPress={onItemClick}\n      accessoryRight={favButton}\n      style={{\n        backgroundColor:\n          item?.id === selectedItem?.id ? \"rgba(51, 102, 255, 0.08)\" : null,\n      }}\n    />\n  );\n};\n\nexport default memo(QuestionItemWeb);\n","import { Divider, List } from \"@ui-kitten/components\";\nimport React, { memo } from \"react\";\nimport { Platform } from \"react-native\";\nimport QuestionItem from \"./QuestionItem\";\nimport QuestionItemWeb from \"./QuestionItemWeb\";\n\nfunction QuestionList({\n  listData,\n  toggleFavorite,\n  setSelectedQuestion,\n  selectedQuestion,\n  selectedMenu,\n}) {\n  const renderQuestion = ({ item, index }) => {\n    if (Platform.OS === \"web\") {\n      return (\n        <QuestionItemWeb\n          key={item?.id}\n          item={item}\n          index={index}\n          setSlected={setSelectedQuestion}\n          selectedItem={selectedQuestion}\n          toggleFavorite={toggleFavorite}\n          selectedMenu={selectedMenu}\n        />\n      );\n    }\n    return <QuestionItem key={item?.title} item={item} />;\n  };\n\n  return (\n    <List\n      data={listData}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderQuestion}\n      style={{\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: \"rgba(0,0,0,0.1)\",\n      }}\n    />\n  );\n}\n\nexport default memo(QuestionList);\n","import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Platform, useWindowDimensions } from \"react-native\";\nimport Loader from \"./Loader\";\nimport { Input } from \"@ui-kitten/components\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { observer } from \"mobx-react-lite\";\nimport { IStore } from \"../stores\";\nimport QuestionList from \"./QuestionList\";\nimport { apiGetUserData } from \"../apis\";\n\ninterface Props {\n  store: IStore;\n}\n\nlet searchTimer;\n\nexport const QuestionContainer = observer(({ store }: Props) => {\n  const {\n    menuStore: { selectedMenu },\n    authStore: { user, setShowLoginModal },\n    questionStore: {\n      isLoading,\n      getQuestions,\n      toggleFavorite,\n      searchQuestion,\n      filteredList,\n      setFilteredList,\n      react,\n      javascript,\n      setUserFavs,\n    },\n  } = store;\n\n  const [selectedQuestion, setSelectedQuestion] = useState<Question>();\n  const { height: screenHeight } = useWindowDimensions();\n\n  const [value, setValue] = useState(\"\");\n\n  // On Load\n  useEffect(() => {\n    (async () => {\n      getQuestions(SidebarItem.JAVASCRIPT, user?.id);\n    })();\n  }, []);\n\n  const onFavToggle = (item: Question, category: SidebarItem) => {\n    // Allow fav only if user is loggedIn\n    if (user) {\n      toggleFavorite(item, category, user?.id);\n      // Otherwise show login modal\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  // On Menu change\n  useEffect(() => {\n    // set list data based on menu selection\n    const selectedCategory = getCategory(selectedMenu);\n    if (selectedCategory === SidebarItem.JAVASCRIPT) {\n      setFilteredList(javascript.data);\n    } else if (selectedCategory === SidebarItem.JAVASCRIPT_FAVORITE) {\n      setFilteredList(javascript.fav);\n    } else if (selectedCategory === SidebarItem.REACT) {\n      if (react.data.length) {\n        setFilteredList(react.data);\n      } else {\n        getQuestions(SidebarItem.REACT);\n      }\n    } else if (selectedCategory === SidebarItem.REACT_FAVORITE) {\n      setFilteredList(react.fav);\n    }\n  }, [selectedMenu]);\n\n  const onSearch = (value: string) => {\n    setValue(value);\n\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      searchQuestion(value, getCategory(selectedMenu));\n    }, 300);\n  };\n\n  const renderList = () => {\n    if (Platform.OS === \"web\") {\n      return (\n        <>\n          {isLoading && <Loader />}\n          <View style={styles.panel}>\n            <View\n              style={[\n                styles.panelLeft,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Search\"\n                size=\"small\"\n                value={value}\n                onChangeText={onSearch}\n              />\n\n              <QuestionList\n                listData={filteredList}\n                toggleFavorite={onFavToggle}\n                selectedQuestion={selectedQuestion}\n                setSelectedQuestion={setSelectedQuestion}\n                selectedMenu={selectedMenu}\n              />\n            </View>\n            <View\n              style={[\n                styles.panelRight,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <QuestionDetail selected={selectedQuestion} />\n            </View>\n          </View>\n        </>\n      );\n    }\n\n    // Work For mobile here\n    return (\n      <>\n        {isLoading && <Loader />}\n        <Input\n          placeholder=\"Search\"\n          value={value}\n          onChangeText={(nextValue) => setValue(nextValue)}\n        />\n        <QuestionList\n          listData={filteredList}\n          toggleFavorite={toggleFavorite}\n          selectedQuestion={selectedQuestion}\n          setSelectedQuestion={setSelectedQuestion}\n          selectedMenu={selectedMenu}\n        />\n      </>\n    );\n  };\n\n  return renderList();\n});\n\nconst styles = StyleSheet.create({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  panelLeft: {\n    width: `40%`,\n    overflow: \"scroll\",\n  },\n  panelRight: {\n    width: `60%`,\n    overflow: \"scroll\",\n    padding: 16,\n    paddingRight: 32,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n  OverflowMenu,\n  MenuItem,\n  Text,\n} from \"@ui-kitten/components\";\nimport { AppTheme } from \"../data-contracts\";\nimport { View } from \"react-native\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface Props {\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  store: IStore;\n}\n\nfunction Header({\n  theme,\n  setTheme,\n  store: { authStore, questionStore },\n}: Props) {\n  const { user, isLoggedIn, setShowLoginModal } = authStore;\n  const [visible, setVisible] = useState(false);\n\n  const onItemSelect = () => {\n    setVisible(false);\n  };\n\n  const onLogin = () => {\n    setShowLoginModal(true);\n  };\n\n  const onLogout = () => {\n    authStore.logout();\n  };\n\n  const ToggleIcon = (props) => (\n    <Icon {...props} name={theme === AppTheme.LIGHT ? \"moon\" : \"sun\"} />\n  );\n\n  const Ellipsis = (props) => <Icon {...props} name=\"more-vertical-outline\" />;\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n\n  const renderToggleButton = () => (\n    <Button\n      onPress={() => setVisible(true)}\n      appearance=\"ghost\"\n      size=\"small\"\n      accessoryLeft={Ellipsis}\n    />\n  );\n\n  const renderOverflowMenu = () => {\n    return (\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}\n      >\n        {isLoggedIn && <MenuItem title={user?.displayName} disabled={true} />}\n\n        {isLoggedIn && (\n          <MenuItem\n            onPress={onLogout}\n            title=\"Logout\"\n            accessoryLeft={GoogleIcon}\n          />\n        )}\n\n        {!isLoggedIn && (\n          <MenuItem\n            onPress={onLogin}\n            title=\"Login\"\n            accessoryLeft={GoogleIcon}\n          />\n        )}\n      </OverflowMenu>\n    );\n  };\n\n  const renderRightNav = () => {\n    return (\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <TopNavigationAction\n          onPress={() => {\n            setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n          }}\n          icon={ToggleIcon}\n          style={{\n            marginLeft: 16,\n          }}\n        />\n        {renderOverflowMenu()}\n      </View>\n    );\n  };\n\n  return (\n    <TopNavigation\n      style={{\n        paddingLeft: 16,\n        paddingRight: 16,\n      }}\n      title={\"Interview Questions\"}\n      accessoryRight={renderRightNav}\n    ></TopNavigation>\n  );\n}\n\nexport default observer(Header);\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { User } from \"../data-contracts\";\n\nexport interface IAuthStore {\n  isLoggedIn: boolean;\n  setIsLoggedIn: (login: boolean) => void;\n  user: User;\n  setUser: (user: User) => void;\n  logout: () => void;\n  clearUser: () => void;\n  showLoginModal: boolean;\n  setShowLoginModal: (value: boolean) => void;\n}\n\nexport class AuthStore implements IAuthStore {\n  isLoggedIn: boolean = false;\n  user: User = undefined;\n  showLoginModal: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    // If user is already logged in\n    // For now use localstorage later can be change with cookies\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      this.setUser(JSON.parse(user));\n      this.setIsLoggedIn(true);\n    }\n  }\n\n  setUser = (user: User) => {\n    this.user = user;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n\n  clearUser = () => {\n    this.user = undefined;\n    localStorage.removeItem(\"user\");\n  };\n\n  setIsLoggedIn = (login: boolean) => {\n    this.isLoggedIn = login;\n  };\n\n  logout = () => {\n    this.setIsLoggedIn(false);\n    this.clearUser();\n  };\n\n  setShowLoginModal = (value: boolean) => {\n    this.showLoginModal = value;\n  };\n}\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\n\nexport interface IMenuStore {\n  selectedMenu: IndexPath;\n  setSelectedMenu: (selectedMenu: IndexPath) => void;\n}\n\nexport class MenuStore implements IMenuStore {\n  selectedMenu: IndexPath = new IndexPath(0);\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setSelectedMenu(selectedMenu) {\n    this.selectedMenu = selectedMenu;\n  }\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore/lite\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSf7gL4yjWCsRc7kMPoTOL-KdhChePQwU\",\n  authDomain: \"interview-questions-1f508.firebaseapp.com\",\n  projectId: \"interview-questions-1f508\",\n  storageBucket: \"interview-questions-1f508.appspot.com\",\n  messagingSenderId: \"74654787266\",\n  appId: \"1:74654787266:web:967b9f0e46c9d6627c7d5b\",\n  measurementId: \"G-CJ8FCNS2Y8\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\nconst auth = getAuth(app);\n\nconst googleAuthProvider = new GoogleAuthProvider();\n\nexport const signInWithGoogle = () => signInWithPopup(auth, googleAuthProvider);\n","import {\n  addDoc,\n  collection,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  getDoc,\n} from \"firebase/firestore/lite\";\nimport { User } from \"../data-contracts\";\nimport { db, signInWithGoogle } from \"../firebase-config\";\n\nexport const URLS = {\n  js: \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/js-v1.json\",\n  react:\n    \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/react-v1.json\",\n};\n\nexport const apiGetQuestions = async (url: string = URLS.js) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const apiLogInWithGoogle = async () => {\n  try {\n    const result = await signInWithGoogle();\n    return result;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get a list of cities from your database\nexport const apiGetJavascriptQuestions = async () => {\n  const jsCol = collection(db, \"javascript\");\n  const jsSnapshot = await getDocs(jsCol);\n  const jsList = jsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  return jsList;\n};\n\n// Add a question\nexport const apiAddJavascriptQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  console.log(response);\n};\n\n// Add a question\nexport const apiAddReactQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  return response;\n};\n\n// Add user\nexport const apiAddUser = async (payload: User) => {\n  const user = doc(db, \"users\", payload.id);\n  try {\n    const response = await setDoc(user, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Update User\nexport const apiUpdateUser = async (payload: any) => {\n  const userRef = doc(db, \"users\", payload.id);\n\n  try {\n    const response = await updateDoc(userRef, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get user data\nexport const apiGetUserData = async (userId) => {\n  try {\n    // Get This user from databse\n    const userRef = doc(db, \"users\", userId);\n    const userSnap = await getDoc(userRef);\n    return userSnap;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { apiGetQuestions, URLS, apiUpdateUser, apiGetUserData } from \"../apis\";\nimport {\n  Favorites,\n  getCategoryKey,\n  Question,\n  questionCategoriesList,\n  QuestionMap,\n  SidebarItem,\n} from \"../data-contracts\";\n\ninterface IQModel {\n  data: Question[];\n  fav: Question[];\n}\n\nexport interface IQuestionStore {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  javascript: IQModel;\n  // javascript: Question[];\n  setJavascript: (questions: IQModel) => void;\n  // javascriptFavorites: Question[];\n  // setJavascriptFavorites: (questions: Question[]) => void;\n  react: IQModel;\n  setReact: (data: IQModel) => void;\n  filteredList: Question[];\n  setFilteredList: (questions: Question[]) => void;\n  allFavorites: Question[];\n  setAllFavorites: (questions: Question[]) => void;\n  getQuestions: (type: SidebarItem, userId?: string) => void;\n  toggleFavorite: (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => void;\n  searchQuestion: (text: string, category?: string) => void;\n  clearFilter: (selectedCategory) => void;\n  questions?: {\n    js: IQModel;\n    react: IQModel;\n  };\n  userFavs: Favorites[];\n  setUserFavs: (data: Favorites[], category: SidebarItem) => void;\n  questionsMap: any;\n}\n\nexport class QuestionStore implements IQuestionStore {\n  isLoading: boolean = false;\n  filteredList: Question[] = [];\n  allFavorites: Question[] = [];\n  javascript: IQModel = {\n    data: [],\n    fav: [],\n  };\n\n  questionsMap = {};\n\n  react: IQModel = {\n    data: [],\n    fav: [],\n  };\n  userFavs: Favorites[] = [];\n\n  // This is when user loads the page\n  setUserFavs = (favList: Favorites[], category?: SidebarItem) => {\n    // Add user bookmarked list\n    this.userFavs = favList;\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    // Filter bookmarked items by category\n\n    const favs = (favList ?? [])\n      .map((item) => {\n        console.log(category, item.type);\n        if (item.type === category) {\n          return { ...this.questionsMap[item.id], bookmarked: true };\n        }\n      })\n      .filter((item) => item);\n    console.log(favs);\n\n    const currentListIncludingFav = this.includeFavorites(\n      this[getMenuKey].data,\n      favs\n    );\n\n    this[setMenuKey]({\n      fav: favs,\n      data: currentListIncludingFav,\n    });\n    this.setFilteredList(currentListIncludingFav);\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  includeFavorites = (data: Question[], favs: Question[]) => {\n    favs.forEach((fav) => {\n      const founded = data.findIndex((item) => item.id === fav.id);\n      data.splice(founded, 1);\n    });\n\n    return [...favs, ...data];\n  };\n\n  getQuestions = async (category: SidebarItem, userId?: string) => {\n    try {\n      console.log(\"made fresh api call\");\n      this.setIsLoading(true);\n      let data = [];\n\n      switch (category) {\n        case SidebarItem.JAVASCRIPT:\n          // Get js questions and set to store\n          data = await apiGetQuestions(URLS.js);\n          this.setJavascript({\n            ...this.javascript,\n            data,\n          });\n\n          // Add data to questionMap\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          // If user is loged in get bookmarked Item\n          // Otherwise there is no bookmared\n\n          if (userId) {\n            const userSnap = await apiGetUserData(userId);\n            this.setUserFavs(userSnap.data().favs, category);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        case SidebarItem.REACT:\n          data = await apiGetQuestions(URLS.react);\n\n          this.setReact({\n            ...this.react,\n            data,\n          });\n\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          if (this.userFavs) {\n            this.setUserFavs(this.userFavs, category);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        default:\n          console.log(\"Made no call\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoading(false);\n    }\n  };\n\n  setJavascript = (data: IQModel) => {\n    this.javascript = data;\n  };\n\n  setReact = (data: IQModel) => {\n    this.react = data;\n  };\n\n  setFilteredList = (data: Question[]) => {\n    this.filteredList = data;\n  };\n\n  setAllFavorites = (data: Question[]) => {\n    this.allFavorites = data;\n  };\n\n  setIsLoading = (isLoading: boolean) => {\n    this.isLoading = isLoading;\n  };\n\n  searchQuestion = (text: string, category: SidebarItem) => {\n    let filtered = [];\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        filtered = this[getMenuKey].data.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        filtered = this.allFavorites.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      default:\n        filtered = this[getMenuKey].fav?.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLocaleLowerCase());\n        });\n    }\n\n    this.setFilteredList(filtered);\n  };\n\n  clearFilter = (category: SidebarItem) => {\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(this[getMenuKey].data);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(this.allFavorites);\n        break;\n      default:\n        this.setFilteredList(this[getMenuKey].fav);\n    }\n  };\n\n  toggleFavorite = (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => {\n    // If item is present in fav list remove it\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    const foundedIndex = this[getMenuKey].fav.findIndex(\n      (fav) => fav.id === item.id\n    );\n\n    let foundedEle = this[getMenuKey].fav[foundedIndex];\n    let newList = [];\n    let newFavList = [];\n\n    if (foundedIndex >= 0) {\n      // Remove from fav\n\n      newList = this[getMenuKey].data.map((ele) => {\n        if (ele.id === foundedEle.id) {\n          return {\n            ...ele,\n            bookmarked: false,\n          };\n        }\n        return ele;\n      });\n\n      newFavList = this[getMenuKey].fav.filter(\n        (item) => item.id !== foundedEle.id\n      );\n\n      this[setMenuKey]({ data: newList, fav: newFavList });\n    } else {\n      // Add to fav\n      newList = this[getMenuKey].data.map((question) => {\n        if (question.id === item.id) {\n          return {\n            ...item,\n            bookmarked: true,\n          };\n        }\n        return question;\n      });\n\n      newFavList = [{ ...item, bookmarked: true }, ...this[getMenuKey].fav];\n\n      this[setMenuKey]({ data: newList, fav: newFavList });\n    }\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(newList);\n        break;\n      default:\n        this.setFilteredList(newFavList);\n    }\n    this.setAllFavorites([...this.javascript.fav, ...this.react.fav]);\n    console.log(\"userId\", userId);\n\n    apiUpdateUser({\n      id: userId,\n      favs: this.allFavorites.map((item) => {\n        return {\n          type: item.type,\n          id: item.id,\n        };\n      }),\n    });\n\n    // localStorage.setItem(getMenuKey, JSON.stringify(newFavList));\n  };\n}\n","import { AuthStore, IAuthStore } from \"./authStore\";\nimport { IMenuStore, MenuStore } from \"./menuStore\";\nimport { IQuestionStore, QuestionStore } from \"./questionsStore\";\n\nexport interface IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n}\n\nexport class Store implements IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n\n  constructor() {\n    this.menuStore = new MenuStore();\n    this.questionStore = new QuestionStore();\n    this.authStore = new AuthStore();\n  }\n}\n","import React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Button, Card, Icon, Modal, Text } from \"@ui-kitten/components\";\nimport { doc, getDoc } from \"firebase/firestore/lite\";\nimport { db } from \"../firebase-config\";\nimport {\n  apiAddUser,\n  apiGetUserData,\n  apiLogInWithGoogle,\n  apiUpdateUser,\n} from \"../apis\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\nimport { getCategory } from \"../data-contracts\";\n\ninterface Props {\n  store: IStore;\n}\n\nconst LoginModal = ({\n  store: { menuStore, authStore, questionStore },\n}: Props) => {\n  const {\n    user,\n    setUser,\n    isLoggedIn,\n    setIsLoggedIn,\n    showLoginModal,\n    setShowLoginModal,\n  } = authStore;\n  const { setUserFavs } = questionStore;\n  const { selectedMenu } = menuStore;\n\n  const { width } = useWindowDimensions();\n\n  const onLogin = async () => {\n    try {\n      // Authenticate using Google\n      const res = await apiLogInWithGoogle();\n      const newUser = {\n        id: res.user.uid,\n        displayName: res.user.displayName,\n        email: res.user.email,\n      };\n\n      // Update state\n      setUser(newUser);\n      setIsLoggedIn(true);\n\n      const userSnap = await apiGetUserData(newUser.id);\n\n      // Check if this user exist\n      if (userSnap.exists()) {\n        // TODO: Can we use to reload page\n        setUserFavs(userSnap?.data()?.favs, getCategory(selectedMenu));\n      } else {\n        // Add this user to database\n        await apiAddUser(newUser);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setShowLoginModal(false);\n    }\n  };\n\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n  const CloseIcon = (props) => <Icon {...props} name=\"close\" />;\n\n  const Header = (props) => (\n    <View\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        paddingTop: 12,\n        paddingBottom: 12,\n        paddingLeft: 24,\n        paddingRight: 24,\n        alignItems: \"center\",\n      }}\n    >\n      <Text category=\"h5\">Login</Text>\n      <Button\n        onPress={() => setShowLoginModal(false)}\n        size=\"large\"\n        appearance=\"ghost\"\n        accessoryLeft={CloseIcon}\n      />\n    </View>\n  );\n\n  if (!showLoginModal) {\n    return <View />;\n  }\n\n  return (\n    <View\n      style={{\n        minHeight: 220,\n        position: \"absolute\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        style={{\n          maxWidth: width,\n          width: 420,\n        }}\n        disabled={true}\n        header={Header}\n      >\n        <View\n          style={{\n            paddingTop: 32,\n            paddingBottom: 32,\n          }}\n        >\n          <Button size=\"giant\" accessoryLeft={GoogleIcon} onPress={onLogin}>\n            Login with Google\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n};\n\nexport default observer(LoginModal);\n","import React from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport {\n  ApplicationProvider,\n  Divider,\n  Layout,\n  IconRegistry,\n  Card,\n} from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"./src/components/Sidebar\";\nimport { QuestionContainer } from \"./src/components/QuestionContainer\";\nimport { useState } from \"react\";\nimport { AppTheme } from \"./src/data-contracts\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport Header from \"./src/components/Header\";\nimport { useEffect } from \"react\";\nimport { Store } from \"./src/stores\";\nimport LoginModal from \"./src/components/LoginModal\";\n\nconst store = new Store();\n\nexport default () => {\n  const { width: screenWidth } = useWindowDimensions();\n  const userTheme = localStorage.getItem(\"theme\");\n  const [theme, setTheme] = useState<AppTheme>(\n    (userTheme as AppTheme) ?? AppTheme.LIGHT\n  );\n\n  console.log(store);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <>\n      <IconRegistry icons={EvaIconsPack} />\n      <ApplicationProvider\n        {...eva}\n        theme={theme === AppTheme.LIGHT ? eva.light : eva.dark}\n      >\n        <Header store={store} theme={theme} setTheme={setTheme} />\n        <Divider />\n        <Layout style={styles.container} level=\"3\">\n          <View\n            style={{\n              width: \"280px\",\n            }}\n          >\n            <Sidebar store={store} />\n          </View>\n          <View\n            style={{\n              width: `${screenWidth - 280}px`,\n            }}\n          >\n            <QuestionContainer store={store} />\n          </View>\n        </Layout>\n        <LoginModal store={store} />\n      </ApplicationProvider>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n"],"sourceRoot":""}