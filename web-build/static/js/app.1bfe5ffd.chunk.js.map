{"version":3,"sources":["src/data-contracts/index.tsx","src/components/Sidebar.tsx","src/components/Loader.tsx","src/components/QuestionDetail.tsx","src/components/QuestionItem.tsx","src/components/QuestionItemWeb.tsx","src/components/QuestionList.tsx","src/components/QuestionContainer.tsx","src/components/Header.tsx","src/stores/authStore.ts","src/stores/menuStore.ts","src/firebase-config.js","src/apis/index.ts","src/stores/questionsStore.ts","src/stores/index.ts","src/components/LoginModal.tsx","App.tsx"],"names":["SidebarItem","AppTheme","getCategory","indexPath","row","section","JAVASCRIPT_FAVORITE","undefined","REACT","REACT_FAVORITE","ALL_FAVORITES","JAVASCRIPT","getCategoryKey","category","getMenuKey","setMenuKey","Sidebar","observer","store","menuStore","questionStore","javascript","react","userFavs","theme","useTheme","StarIcon","props","style","width","height","name","FavCount","data","length","View","backgroundColor","display","alignItems","justifyContent","borderRadius","fontSize","appearance","status","BookOpen","selectedIndex","selectedMenu","onSelect","index","setSelectedMenu","clearFilter","favs","title","accessoryLeft","accessoryRight","paddingRight","Loader","screenHeight","useWindowDimensions","styles","loaderContainer","size","StyleSheet","create","paddingBottom","memo","selected","screenWidth","content","join","contentWidth","source","html","baseStyle","letterSpacing","lineHeight","tagsStyles","body","color","img","maxWidth","pre","padding","position","left","top","transform","translateX","translateY","accordionItem","borderWidth","borderColor","marginBottom","item","useState","setSlected","toggleFavorite","selectedItem","bookmarked","paddingLeft","onPress","id","searchTimer","listData","setSelectedQuestion","selectedQuestion","ItemSeparatorComponent","Divider","renderItem","Platform","OS","borderLeftWidth","borderRightWidth","QuestionContainer","authStore","user","setShowLoginModal","isLoading","getQuestions","searchQuestion","filteredList","setFilteredList","value","setValue","useEffect","a","async","onFavToggle","selectedCategory","console","log","onSearch","clearTimeout","setTimeout","panel","panelLeft","placeholder","onChangeText","panelRight","nextValue","flexDirection","overflow","setTheme","isLoggedIn","visible","setVisible","onItemSelect","onLogin","onLogout","logout","ToggleIcon","LIGHT","Ellipsis","GoogleIcon","renderToggleButton","DARK","icon","marginLeft","anchor","onBackdropPress","displayName","disabled","AuthStore","showLoginModal","setUser","localStorage","setItem","JSON","stringify","clearUser","removeItem","setIsLoggedIn","login","window","location","reload","makeAutoObservable","this","getItem","parse","MenuStore","IndexPath","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","googleAuthProvider","GoogleAuthProvider","URLS","apiGetQuestions","url","fetch","res","json","apiLogInWithGoogle","signInWithPopup","result","Error","apiAddUser","payload","doc","setDoc","response","apiGetUserData","userId","userRef","getDoc","userSnap","QuestionStore","allFavorites","questionsMap","setJavascript","setReact","setAllFavorites","setIsLoading","setUserFavs","updateFavs","favList","showBookmarkedOnTop","map","type","filter","dataWithFavsOnTop","includeFavorites","setFavsForAllCategories","excludeCurrentCategory","forEach","fav","founded","findIndex","splice","text","filtered","q","toLocaleLowerCase","includes","toLowerCase","foundedIndex","foundedEle","newList","newFavList","ele","question","allFavs","updateDoc","apiUpdateUser","Store","isMakingCall","setIsMakingCall","CloseIcon","minHeight","header","paddingTop","newUser","uid","email","exists","userTheme","icons","EvaIconsPack","eva","container","level"],"mappings":"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","file":"static/js/app.1bfe5ffd.chunk.js","sourcesContent":["import { IndexPath } from \"@ui-kitten/components\";\n\nexport interface Question {\n  id?: string;\n  title: string;\n  content: string[];\n  bookmarked?: boolean;\n  type?: string;\n}\nexport interface User {\n  id: string;\n  displayName?: string;\n  email?: string;\n}\n\nexport interface Favorites {\n  id: string;\n  type: string;\n}\n\nexport interface QuestionMap {\n  id: string;\n  question: Question;\n}\n\nexport const questionCategoriesList = [\"javascript\", \"react\"];\n\nexport enum SidebarItem {\n  JAVASCRIPT = \"JAVASCRIPT\",\n  JAVASCRIPT_FAVORITE = \"JAVASCRIPT_FAVORITE\",\n  REACT = \"REACT\",\n  REACT_FAVORITE = \"REACT_FAVORITE\",\n  ALL_FAVORITES = \"ALL_FAVORITES\",\n}\n\nexport const getCategory = (indexPath: IndexPath) => {\n  if (indexPath.row === 1 && indexPath.section === 0) {\n    return SidebarItem.JAVASCRIPT_FAVORITE;\n  } else if (\n    indexPath.row === 0 &&\n    (indexPath.section === 0 || indexPath.section === undefined)\n  ) {\n    return SidebarItem.JAVASCRIPT;\n  } else if (\n    (indexPath.row === 1 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 1)\n  ) {\n    return SidebarItem.REACT;\n  } else if (indexPath.row === 1 && indexPath.section === 1) {\n    return SidebarItem.REACT_FAVORITE;\n  } else if (indexPath.row === 2 && indexPath.section === undefined) {\n    return SidebarItem.ALL_FAVORITES;\n  }\n};\n\nexport const getCategoryKey = (category: SidebarItem) => {\n  // If item is present in fav list remove it\n  let getMenuKey = \"javascript\";\n  let setMenuKey = \"setJavascript\";\n\n  if (\n    category === SidebarItem.REACT ||\n    category === SidebarItem.REACT_FAVORITE\n  ) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n\n  return { getMenuKey, setMenuKey };\n};\n\nexport enum AppTheme {\n  LIGHT = \"LIGHT\",\n  DARK = \"DARK\",\n}\n","import {\n  Menu,\n  MenuGroup,\n  MenuItem,\n  Icon,\n  Text,\n  useTheme,\n} from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { View } from \"react-native\";\nimport { getCategory } from \"../data-contracts\";\nimport { IStore } from \"../stores\";\n\ninterface Props {\n  store: IStore;\n}\n\nexport const Sidebar = observer(\n  ({ store: { menuStore, questionStore } }: Props) => {\n    const { javascript, react, userFavs } = questionStore;\n    const theme = useTheme();\n\n    const StarIcon = (props) => (\n      <Icon {...props} style={{ width: 16, height: 16 }} name=\"star-outline\" />\n    );\n\n    const FavCount = (data) => {\n      if (data?.length) {\n        return (\n          <View>\n            <Text\n              style={{\n                backgroundColor: theme[\"color-primary-transparent-200\"],\n                width: 40,\n                height: 20,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: 20,\n                fontSize: 10,\n              }}\n              category=\"label\"\n              appearance=\"hint\"\n              status=\"primary\"\n            >\n              {data?.length}\n            </Text>\n          </View>\n        );\n      }\n\n      return null;\n    };\n\n    const BookOpen = (props) => (\n      <Icon\n        {...props}\n        style={{ width: 16, height: 16 }}\n        name=\"book-open-outline\"\n      />\n    );\n\n    return (\n      <Menu\n        selectedIndex={menuStore.selectedMenu}\n        onSelect={(index) => {\n          menuStore.setSelectedMenu(index);\n          questionStore.clearFilter(getCategory(index));\n        }}\n      >\n        {javascript?.favs?.length ? (\n          <MenuGroup title=\"Javascript\">\n            <MenuItem\n              title=\"All\"\n              accessoryLeft={BookOpen}\n              accessoryRight={FavCount(javascript.data)}\n              style={{\n                paddingRight: 24,\n              }}\n            />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(javascript.favs)}\n              style={{\n                paddingRight: 24,\n              }}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem\n            title=\"Javascript\"\n            accessoryRight={FavCount(javascript.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        )}\n\n        {react?.favs?.length ? (\n          <MenuGroup title=\"React\">\n            <MenuItem\n              title=\"All\"\n              accessoryLeft={BookOpen}\n              accessoryRight={FavCount(react.data)}\n              style={{\n                paddingRight: 24,\n              }}\n            />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(react.favs)}\n              style={{\n                paddingRight: 24,\n              }}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem\n            title=\"React\"\n            accessoryRight={FavCount(react.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        )}\n\n        <MenuItem\n          title=\"All Favorites\"\n          accessoryRight={FavCount(userFavs)}\n          style={{\n            paddingRight: 24,\n          }}\n        ></MenuItem>\n        {/* <MenuItem title=\"CSS\"></MenuItem>\n        <MenuItem title=\"Accessibility\"></MenuItem> */}\n      </Menu>\n    );\n  }\n);\n","import { Spinner } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\n\nexport default function Loader() {\n  const { height: screenHeight } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        styles.loaderContainer,\n        {\n          height: `${screenHeight - 90}px`,\n        },\n      ]}\n    >\n      <Spinner size=\"giant\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loaderContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingRight: 200,\n    paddingBottom: 100,\n  },\n});\n","import React, { memo } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport RenderHTML from \"react-native-render-html\";\nimport { useTheme, Text } from \"@ui-kitten/components\";\nimport { Question } from \"../data-contracts\";\nimport { Editor } from \"./Editor\";\n\ninterface QuestionDetailProps {\n  selected: Question | undefined;\n}\n\nconst QuestionDetail = ({ selected }: QuestionDetailProps) => {\n  const theme = useTheme();\n  const { width: screenWidth } = useWindowDimensions();\n  const content = selected?.content?.join(\"\");\n\n  if (selected) {\n    return (\n      <RenderHTML\n        contentWidth={screenWidth / 2}\n        source={{\n          html: content,\n        }}\n        baseStyle={{\n          fontSize: 18,\n          letterSpacing: 1,\n          lineHeight: 24,\n        }}\n        tagsStyles={{\n          body: {\n            color: theme[\"text-basic-color\"],\n          },\n          img: {\n            maxWidth: \"100\",\n          },\n          pre: {\n            backgroundColor: theme[\"color-basic-transparent-200\"],\n            padding: 16,\n          },\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: [\n          {\n            translateX: -60,\n            translateY: -20,\n          },\n        ],\n      }}\n    >\n      {/* <Editor /> */}\n      <Text>Select a Question</Text>\n    </View>\n  );\n};\n\nexport default memo(QuestionDetail);\n","import React, { memo } from \"react\";\nimport { useState } from \"react\";\nimport { Question } from \"../data-contracts\";\nimport { StyleSheet, useWindowDimensions } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\nimport RenderHTML from \"react-native-render-html\";\n\ninterface QuestionItemProps {\n  item: Question;\n}\n\nconst QuestionItem = ({ item }: QuestionItemProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const { title, content } = item;\n  const wrappedContent = `<div>${content}</div>`;\n  const { width } = useWindowDimensions();\n\n  return <Text>{item.title}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  accordionItem: {\n    borderWidth: 1,\n    borderColor: \"rgba(0,0,0,0.1)\",\n    borderRadius: 2,\n    marginBottom: 8,\n  },\n});\n\nexport default memo(QuestionItem);\n","import React, { memo } from \"react\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { Button, Icon, IndexPath, ListItem, Text } from \"@ui-kitten/components\";\n\ninterface QuestionItemWebProps {\n  item: Question;\n  selectedItem: Question;\n  index: number;\n  setSlected: (item: Question) => void;\n  toggleFavorite: (item: Question, category: SidebarItem) => void;\n  selectedMenu: IndexPath;\n}\n\nconst QuestionItemWeb = ({\n  item,\n  setSlected,\n  index,\n  toggleFavorite,\n  selectedItem,\n  selectedMenu,\n}: QuestionItemWebProps) => {\n  const onItemClick = () => {\n    setSlected(item);\n  };\n\n  const StarIcon = (props) => (\n    <Icon {...props} name={item?.bookmarked ? \"star\" : \"star-outline\"} />\n  );\n\n  const favButton = () => {\n    return (\n      <Button\n        size=\"tiny\"\n        appearance=\"ghost\"\n        onPress={() => toggleFavorite(item, getCategory(selectedMenu))}\n        status={item?.bookmarked ? \"danger\" : \"basic\"}\n        accessoryLeft={StarIcon}\n      />\n    );\n  };\n\n  const Title = () => {\n    return (\n      <Text\n        category=\"s1\"\n        style={{\n          fontSize: 16,\n          paddingLeft: 8,\n        }}\n      >{`${index + 1}. ${item?.title}`}</Text>\n    );\n  };\n\n  return (\n    <ListItem\n      title={Title}\n      onPress={onItemClick}\n      accessoryRight={favButton}\n      style={{\n        backgroundColor:\n          item?.id === selectedItem?.id ? \"rgba(51, 102, 255, 0.08)\" : null,\n      }}\n    />\n  );\n};\n\nexport default memo(QuestionItemWeb);\n","import { Divider, List } from \"@ui-kitten/components\";\nimport React, { memo } from \"react\";\nimport { Platform } from \"react-native\";\nimport QuestionItem from \"./QuestionItem\";\nimport QuestionItemWeb from \"./QuestionItemWeb\";\n\nfunction QuestionList({\n  listData,\n  toggleFavorite,\n  setSelectedQuestion,\n  selectedQuestion,\n  selectedMenu,\n}) {\n  const renderQuestion = ({ item, index }) => {\n    if (Platform.OS === \"web\") {\n      return (\n        <QuestionItemWeb\n          key={item?.id}\n          item={item}\n          index={index}\n          setSlected={setSelectedQuestion}\n          selectedItem={selectedQuestion}\n          toggleFavorite={toggleFavorite}\n          selectedMenu={selectedMenu}\n        />\n      );\n    }\n    return <QuestionItem key={item?.title} item={item} />;\n  };\n\n  return (\n    <List\n      data={listData}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderQuestion}\n      style={{\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: \"rgba(0,0,0,0.1)\",\n      }}\n    />\n  );\n}\n\nexport default memo(QuestionList);\n","import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Platform, useWindowDimensions } from \"react-native\";\nimport Loader from \"./Loader\";\nimport { Input } from \"@ui-kitten/components\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { observer } from \"mobx-react-lite\";\nimport { IStore } from \"../stores\";\nimport QuestionList from \"./QuestionList\";\nimport { apiGetUserData } from \"../apis\";\n\ninterface Props {\n  store: IStore;\n}\n\nlet searchTimer;\n\nexport const QuestionContainer = observer(({ store }: Props) => {\n  const {\n    menuStore: { selectedMenu },\n    authStore: { user, setShowLoginModal },\n    questionStore: {\n      isLoading,\n      getQuestions,\n      toggleFavorite,\n      searchQuestion,\n      filteredList,\n      setFilteredList,\n      react,\n      javascript,\n    },\n  } = store;\n\n  const [selectedQuestion, setSelectedQuestion] = useState<Question>();\n  const { height: screenHeight } = useWindowDimensions();\n\n  const [value, setValue] = useState(\"\");\n\n  // On Load\n  useEffect(() => {\n    (async () => {\n      getQuestions(SidebarItem.JAVASCRIPT, user?.id);\n    })();\n  }, []);\n\n  const onFavToggle = (item: Question, category: SidebarItem) => {\n    // Allow fav only if user is loggedIn\n    if (user) {\n      toggleFavorite(item, category, user?.id);\n      // Otherwise show login modal\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  // On Menu change\n  useEffect(() => {\n    // set list data based on menu selection\n    const selectedCategory = getCategory(selectedMenu);\n    console.log(\"selectedCategory => \", selectedCategory);\n    if (selectedCategory === SidebarItem.JAVASCRIPT) {\n      setFilteredList(javascript.data);\n    } else if (selectedCategory === SidebarItem.JAVASCRIPT_FAVORITE) {\n      setFilteredList(javascript.favs);\n    } else if (selectedCategory === SidebarItem.REACT) {\n      if (react.data.length) {\n        setFilteredList(react.data);\n      } else {\n        getQuestions(SidebarItem.REACT);\n      }\n    } else if (selectedCategory === SidebarItem.REACT_FAVORITE) {\n      setFilteredList(react.favs);\n    }\n  }, [selectedMenu]);\n\n  const onSearch = (value: string) => {\n    setValue(value);\n\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      searchQuestion(value, getCategory(selectedMenu));\n    }, 300);\n  };\n\n  const renderList = () => {\n    if (Platform.OS === \"web\") {\n      return (\n        <>\n          {isLoading && <Loader />}\n          <View style={styles.panel}>\n            <View\n              style={[\n                styles.panelLeft,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Search\"\n                size=\"small\"\n                value={value}\n                onChangeText={onSearch}\n              />\n\n              <QuestionList\n                listData={filteredList}\n                toggleFavorite={onFavToggle}\n                selectedQuestion={selectedQuestion}\n                setSelectedQuestion={setSelectedQuestion}\n                selectedMenu={selectedMenu}\n              />\n            </View>\n            <View\n              style={[\n                styles.panelRight,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <QuestionDetail selected={selectedQuestion} />\n            </View>\n          </View>\n        </>\n      );\n    }\n\n    // Work For mobile here\n    return (\n      <>\n        {isLoading && <Loader />}\n        <Input\n          placeholder=\"Search\"\n          value={value}\n          onChangeText={(nextValue) => setValue(nextValue)}\n        />\n        <QuestionList\n          listData={filteredList}\n          toggleFavorite={toggleFavorite}\n          selectedQuestion={selectedQuestion}\n          setSelectedQuestion={setSelectedQuestion}\n          selectedMenu={selectedMenu}\n        />\n      </>\n    );\n  };\n\n  return renderList();\n});\n\nconst styles = StyleSheet.create({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  panelLeft: {\n    width: `40%`,\n    overflow: \"scroll\",\n  },\n  panelRight: {\n    width: `60%`,\n    overflow: \"scroll\",\n    padding: 16,\n    paddingRight: 32,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n  OverflowMenu,\n  MenuItem,\n  Text,\n} from \"@ui-kitten/components\";\nimport { AppTheme } from \"../data-contracts\";\nimport { View } from \"react-native\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface Props {\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  store: IStore;\n}\n\nfunction Header({\n  theme,\n  setTheme,\n  store: { authStore, questionStore },\n}: Props) {\n  const { user, isLoggedIn, setShowLoginModal } = authStore;\n  const [visible, setVisible] = useState(false);\n\n  const onItemSelect = () => {\n    setVisible(false);\n  };\n\n  const onLogin = () => {\n    setShowLoginModal(true);\n  };\n\n  const onLogout = () => {\n    authStore.logout();\n  };\n\n  const ToggleIcon = (props) => (\n    <Icon {...props} name={theme === AppTheme.LIGHT ? \"moon\" : \"sun\"} />\n  );\n\n  const Ellipsis = (props) => <Icon {...props} name=\"more-vertical-outline\" />;\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n\n  const renderToggleButton = () => (\n    <Button\n      onPress={() => setVisible(true)}\n      appearance=\"ghost\"\n      size=\"small\"\n      accessoryLeft={Ellipsis}\n    />\n  );\n\n  const renderOverflowMenu = () => {\n    return (\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}\n      >\n        {isLoggedIn && <MenuItem title={user?.displayName} disabled={true} />}\n\n        {isLoggedIn && (\n          <MenuItem\n            onPress={onLogout}\n            title=\"Logout\"\n            accessoryLeft={GoogleIcon}\n          />\n        )}\n\n        {!isLoggedIn && (\n          <MenuItem\n            onPress={onLogin}\n            title=\"Login\"\n            accessoryLeft={GoogleIcon}\n          />\n        )}\n      </OverflowMenu>\n    );\n  };\n\n  const renderRightNav = () => {\n    return (\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <TopNavigationAction\n          onPress={() => {\n            setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n          }}\n          icon={ToggleIcon}\n          style={{\n            marginLeft: 16,\n          }}\n        />\n        {!isLoggedIn && (\n          <Button\n            appearance=\"outline\"\n            status=\"primary\"\n            accessoryLeft={GoogleIcon}\n            onPress={onLogin}\n            size=\"tiny\"\n            style={{\n              marginLeft: 16,\n            }}\n          >\n            Login\n          </Button>\n        )}\n        {isLoggedIn && renderOverflowMenu()}\n      </View>\n    );\n  };\n\n  return (\n    <TopNavigation\n      style={{\n        paddingLeft: 16,\n        paddingRight: 16,\n      }}\n      title={\"Interview Questions\"}\n      accessoryRight={renderRightNav}\n    ></TopNavigation>\n  );\n}\n\nexport default observer(Header);\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { User } from \"../data-contracts\";\n\nexport interface IAuthStore {\n  isLoggedIn: boolean;\n  setIsLoggedIn: (login: boolean) => void;\n  user: User;\n  setUser: (user: User) => void;\n  logout: () => void;\n  clearUser: () => void;\n  showLoginModal: boolean;\n  setShowLoginModal: (value: boolean) => void;\n}\n\nexport class AuthStore implements IAuthStore {\n  isLoggedIn: boolean = false;\n  user: User = undefined;\n  showLoginModal: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    // If user is already logged in\n    // For now use localstorage later can be change with cookies\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      this.setUser(JSON.parse(user));\n      this.setIsLoggedIn(true);\n    }\n  }\n\n  setUser = (user: User) => {\n    this.user = user;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n\n  clearUser = () => {\n    this.user = undefined;\n    localStorage.removeItem(\"user\");\n  };\n\n  setIsLoggedIn = (login: boolean) => {\n    this.isLoggedIn = login;\n  };\n\n  logout = () => {\n    this.setIsLoggedIn(false);\n    this.clearUser();\n    window.location.reload();\n  };\n\n  setShowLoginModal = (value: boolean) => {\n    this.showLoginModal = value;\n  };\n}\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\n\nexport interface IMenuStore {\n  selectedMenu: IndexPath;\n  setSelectedMenu: (selectedMenu: IndexPath) => void;\n}\n\nexport class MenuStore implements IMenuStore {\n  selectedMenu: IndexPath = new IndexPath(0);\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setSelectedMenu(selectedMenu) {\n    this.selectedMenu = selectedMenu;\n  }\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore/lite\"\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"\n\nimport {\n  FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGIN_SENDER_ID,\n  FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID,\n} from \"@env\"\n\n// console.log(FIREBASE_API_KEY);\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: FIREBASE_API_KEY,\n  authDomain: FIREBASE_AUTH_DOMAIN,\n  projectId: FIREBASE_PROJECT_ID,\n  storageBucket: FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: FIREBASE_MESSAGIN_SENDER_ID,\n  appId: FIREBASE_APP_ID,\n  measurementId: FIREBASE_MEASUREMENT_ID,\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig)\nexport const db = getFirestore(app)\n\nconst auth = getAuth(app)\n\nconst googleAuthProvider = new GoogleAuthProvider()\n\nexport const signInWithGoogle = () => signInWithPopup(auth, googleAuthProvider)\n","import {\n  addDoc,\n  collection,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  getDoc,\n} from \"firebase/firestore/lite\";\nimport { User } from \"../data-contracts\";\nimport { db, signInWithGoogle } from \"../firebase-config\";\n\nexport const URLS = {\n  js: \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/js-v1.json\",\n  react:\n    \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/react-v1.json\",\n};\n\nexport const apiGetQuestions = async (url: string = URLS.js) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const apiLogInWithGoogle = async () => {\n  try {\n    const result = await signInWithGoogle();\n    return result;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get a list of cities from your database\nexport const apiGetJavascriptQuestions = async () => {\n  const jsCol = collection(db, \"javascript\");\n  const jsSnapshot = await getDocs(jsCol);\n  const jsList = jsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  return jsList;\n};\n\n// Add a question\nexport const apiAddJavascriptQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  console.log(response);\n};\n\n// Add a question\nexport const apiAddReactQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  return response;\n};\n\n// Add user\nexport const apiAddUser = async (payload: User) => {\n  const user = doc(db, \"users\", payload.id);\n  try {\n    const response = await setDoc(user, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Update User\nexport const apiUpdateUser = async (payload: any) => {\n  const userRef = doc(db, \"users\", payload.id);\n\n  try {\n    const response = await updateDoc(userRef, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get user data\nexport const apiGetUserData = async (userId) => {\n  try {\n    // Get This user from databse\n    const userRef = doc(db, \"users\", userId);\n    const userSnap = await getDoc(userRef);\n    return userSnap;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { apiGetQuestions, URLS, apiUpdateUser, apiGetUserData } from \"../apis\";\nimport { getCategoryKey, Question, SidebarItem } from \"../data-contracts\";\n\ninterface IQModel {\n  data: Question[];\n  favs: Question[];\n}\n\nexport interface IQuestionStore {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  javascript: IQModel;\n  // javascript: Question[];\n  setJavascript: (questions: IQModel) => void;\n  // javascriptFavorites: Question[];\n  // setJavascriptFavorites: (questions: Question[]) => void;\n  react: IQModel;\n  setReact: (data: IQModel) => void;\n  filteredList: Question[];\n  setFilteredList: (questions: Question[]) => void;\n  allFavorites: Question[];\n  setAllFavorites: (questions: Question[]) => void;\n  getQuestions: (type: SidebarItem, userId?: string) => void;\n  toggleFavorite: (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => void;\n  searchQuestion: (text: string, category?: string) => void;\n  clearFilter: (selectedCategory) => void;\n  questions?: {\n    js: IQModel;\n    react: IQModel;\n  };\n  userFavs: Question[];\n  setUserFavs: (data: Question[]) => void;\n  questionsMap: any;\n}\n\nexport class QuestionStore implements IQuestionStore {\n  isLoading: boolean = false;\n  filteredList: Question[] = [];\n  allFavorites: Question[] = [];\n  userFavs: Question[] = [];\n  javascript: IQModel = {\n    data: [],\n    favs: [],\n  };\n  react: IQModel = {\n    data: [],\n    favs: [],\n  };\n\n  questionsMap = {};\n\n  setJavascript = (data: IQModel) => {\n    this.javascript = data;\n  };\n\n  setReact = (data: IQModel) => {\n    this.react = data;\n  };\n\n  setFilteredList = (data: Question[]) => {\n    this.filteredList = data;\n  };\n\n  setAllFavorites = (data: Question[]) => {\n    this.allFavorites = data;\n  };\n\n  setIsLoading = (isLoading: boolean) => {\n    this.isLoading = isLoading;\n  };\n\n  setUserFavs = (data: Question[]) => {\n    this.userFavs = data;\n  };\n\n  // This is when user loads the page\n  updateFavs = (\n    favList: Question[],\n    category?: SidebarItem,\n    showBookmarkedOnTop?: boolean\n  ) => {\n    // Add user bookmarked list\n    this.userFavs = favList;\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    // Filter bookmarked items by category\n    const favs = (favList ?? [])\n      .map((item) => {\n        if (item.type === category) {\n          return { ...item, bookmarked: true };\n        }\n      })\n      .filter((item) => item);\n\n    const dataWithFavsOnTop = this.includeFavorites(\n      this[getMenuKey].data,\n      favs\n    );\n\n    const data = showBookmarkedOnTop\n      ? dataWithFavsOnTop\n      : this[getMenuKey].data;\n\n    this[setMenuKey]({\n      favs,\n      data,\n    });\n    this.setFilteredList(data);\n    this.setFavsForAllCategories(favList, category);\n\n    // Set Favs for all categories\n  };\n\n  setFavsForAllCategories = (favList, excludeCurrentCategory) => {\n    const categories = [SidebarItem.JAVASCRIPT, SidebarItem.REACT].filter(\n      (item) => item !== excludeCurrentCategory\n    );\n\n    categories.forEach((category) => {\n      const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n      this[setMenuKey]({\n        data: this[getMenuKey].data,\n        favs: favList\n          ?.map((item) => {\n            if (item.type === category) {\n              return item;\n            }\n          })\n          .filter((item) => item),\n      });\n    });\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  includeFavorites = (data: Question[], favs: Question[]) => {\n    favs.forEach((fav) => {\n      const founded = data.findIndex((item) => item.id === fav.id);\n      data.splice(founded, 1);\n    });\n\n    return [...favs, ...data];\n  };\n\n  getQuestions = async (category: SidebarItem, userId?: string) => {\n    try {\n      console.log(\"made fresh api call\");\n      this.setIsLoading(true);\n      let data = [];\n\n      switch (category) {\n        case SidebarItem.JAVASCRIPT:\n          // Get js questions and set to store\n          data = await apiGetQuestions(URLS.js);\n          this.setJavascript({\n            ...this.javascript,\n            data,\n          });\n\n          // Add data to questionMap\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          // If user is loged in get bookmarked Item\n          // Otherwise there is no bookmared\n\n          if (userId) {\n            const userSnap = await apiGetUserData(userId);\n            this.updateFavs(userSnap.data().favs, category, true);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        case SidebarItem.REACT:\n          data = await apiGetQuestions(URLS.react);\n\n          this.setReact({\n            ...this.react,\n            data,\n          });\n\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          if (this.userFavs?.length) {\n            this.updateFavs(this.userFavs, category, true);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        default:\n          console.log(\"Made no call\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoading(false);\n    }\n  };\n\n  searchQuestion = (text: string, category: SidebarItem) => {\n    let filtered = [];\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        filtered = this[getMenuKey].data.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        filtered = this.userFavs.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      default:\n        filtered = this[getMenuKey].favs?.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLocaleLowerCase());\n        });\n    }\n\n    this.setFilteredList(filtered);\n  };\n\n  clearFilter = (category: SidebarItem) => {\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(this[getMenuKey].data);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(this.userFavs);\n        break;\n      default:\n        this.setFilteredList(this[getMenuKey].favs);\n    }\n  };\n\n  toggleFavorite = (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => {\n    // If item is present in fav list remove it\n\n    const { getMenuKey, setMenuKey } = getCategoryKey(item.type as SidebarItem);\n\n    const foundedIndex = this[getMenuKey].favs?.findIndex(\n      (fav) => fav.id === item.id\n    );\n\n    let foundedEle = this[getMenuKey].favs[foundedIndex];\n    let newList = [];\n    let newFavList = [];\n\n    // debugger;\n    if (foundedIndex >= 0) {\n      // Remove from fav\n\n      newList = this[getMenuKey].data.map((ele) => {\n        if (ele.id === foundedEle.id) {\n          return {\n            ...ele,\n            bookmarked: false,\n          };\n        }\n        return ele;\n      });\n\n      newFavList = this[getMenuKey].favs.filter(\n        (item) => item.id !== foundedEle.id\n      );\n\n      this[setMenuKey]({ data: newList, favs: newFavList });\n    } else {\n      // Add to fav\n      newList = this[getMenuKey].data.map((question) => {\n        if (question.id === item.id) {\n          return {\n            ...item,\n            bookmarked: true,\n          };\n        }\n        return question;\n      });\n\n      newFavList = [{ ...item, bookmarked: true }, ...this[getMenuKey].favs];\n\n      this[setMenuKey]({ data: newList, favs: newFavList });\n    }\n\n    const allFavs = [...this.javascript.favs, ...this.react.favs];\n    this.setUserFavs(allFavs);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(newList);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(allFavs);\n        break;\n      default:\n        this.setFilteredList(newFavList);\n    }\n\n    apiUpdateUser({\n      id: userId,\n      favs: allFavs,\n    });\n  };\n}\n","import { AuthStore, IAuthStore } from \"./authStore\";\nimport { IMenuStore, MenuStore } from \"./menuStore\";\nimport { IQuestionStore, QuestionStore } from \"./questionsStore\";\n\nexport interface IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n}\n\nexport class Store implements IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n\n  constructor() {\n    this.menuStore = new MenuStore();\n    this.questionStore = new QuestionStore();\n    this.authStore = new AuthStore();\n  }\n}\n","import React, { useState } from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport {\n  Button,\n  Card,\n  Icon,\n  Modal,\n  Spinner,\n  Text,\n} from \"@ui-kitten/components\";\nimport { doc, getDoc } from \"firebase/firestore/lite\";\nimport { db } from \"../firebase-config\";\nimport {\n  apiAddUser,\n  apiGetUserData,\n  apiLogInWithGoogle,\n  apiUpdateUser,\n} from \"../apis\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\nimport { getCategory } from \"../data-contracts\";\n\ninterface Props {\n  store: IStore;\n}\n\nconst LoginModal = ({\n  store: { menuStore, authStore, questionStore },\n}: Props) => {\n  const {\n    user,\n    setUser,\n    isLoggedIn,\n    setIsLoggedIn,\n    showLoginModal,\n    setShowLoginModal,\n  } = authStore;\n  const { setUserFavs } = questionStore;\n  const { selectedMenu } = menuStore;\n  const { width } = useWindowDimensions();\n  const [isMakingCall, setIsMakingCall] = useState(false);\n\n  const onLogin = async () => {\n    try {\n      setIsMakingCall(true);\n      // Authenticate using Google\n      const res = await apiLogInWithGoogle();\n      const newUser = {\n        id: res.user.uid,\n        displayName: res.user.displayName,\n        email: res.user.email,\n      };\n\n      // Update state\n      setUser(newUser);\n      setIsLoggedIn(true);\n\n      const userSnap = await apiGetUserData(newUser.id);\n\n      // Check if this user exist\n      if (userSnap.exists()) {\n        // TODO: Can we use to reload page\n        // setUserFavs(userSnap?.data()?.favs, getCategory(selectedMenu));\n        window.location.reload();\n      } else {\n        // Add this user to database\n        await apiAddUser(newUser);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsMakingCall(false);\n      setShowLoginModal(false);\n    }\n  };\n\n  const LoadingIndicator = (props) => (\n    <View>\n      <Spinner size=\"small\" />\n    </View>\n  );\n\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n  const CloseIcon = (props) => <Icon {...props} name=\"close\" />;\n\n  const Header = (props) => (\n    <View\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        paddingTop: 12,\n        paddingBottom: 12,\n        paddingLeft: 24,\n        paddingRight: 24,\n        alignItems: \"center\",\n      }}\n    >\n      <Text category=\"h5\">Login</Text>\n      <Button\n        onPress={() => setShowLoginModal(false)}\n        size=\"large\"\n        appearance=\"ghost\"\n        accessoryLeft={CloseIcon}\n      />\n    </View>\n  );\n\n  if (!showLoginModal) {\n    return <View />;\n  }\n\n  return (\n    <View\n      style={{\n        minHeight: 220,\n        position: \"absolute\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        style={{\n          maxWidth: width,\n          width: 420,\n        }}\n        disabled={true}\n        header={Header}\n      >\n        <View\n          style={{\n            paddingTop: 32,\n            paddingBottom: 32,\n          }}\n        >\n          <Button\n            disabled={isMakingCall}\n            size=\"giant\"\n            accessoryLeft={isMakingCall ? LoadingIndicator : GoogleIcon}\n            onPress={onLogin}\n          >\n            Login with Google\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n};\n\nexport default observer(LoginModal);\n","import React from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport {\n  ApplicationProvider,\n  Divider,\n  Layout,\n  IconRegistry,\n  Card,\n} from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"./src/components/Sidebar\";\nimport { QuestionContainer } from \"./src/components/QuestionContainer\";\nimport { useState } from \"react\";\nimport { AppTheme } from \"./src/data-contracts\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport Header from \"./src/components/Header\";\nimport { useEffect } from \"react\";\nimport { Store } from \"./src/stores\";\nimport LoginModal from \"./src/components/LoginModal\";\n\nconst store = new Store();\n\nexport default () => {\n  const { width: screenWidth } = useWindowDimensions();\n  const userTheme = localStorage.getItem(\"theme\");\n  const [theme, setTheme] = useState<AppTheme>(\n    (userTheme as AppTheme) ?? AppTheme.LIGHT\n  );\n\n  console.log(store);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <>\n      <IconRegistry icons={EvaIconsPack} />\n      <ApplicationProvider\n        {...eva}\n        theme={theme === AppTheme.LIGHT ? eva.light : eva.dark}\n      >\n        <Header store={store} theme={theme} setTheme={setTheme} />\n        <Divider />\n        <Layout style={styles.container} level=\"3\">\n          <View\n            style={{\n              width: \"280px\",\n            }}\n          >\n            <Sidebar store={store} />\n          </View>\n          <View\n            style={{\n              width: `${screenWidth - 280}px`,\n            }}\n          >\n            <QuestionContainer store={store} />\n          </View>\n        </Layout>\n        <LoginModal store={store} />\n      </ApplicationProvider>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n"],"sourceRoot":""}