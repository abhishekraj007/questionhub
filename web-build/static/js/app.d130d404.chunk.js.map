{"version":3,"sources":["src/data-contracts/contracts.tsx","src/stores/authStore.ts","src/stores/menuStore.ts","src/stores/notesStore.ts","src/firebase-config.js","src/apis/index.ts","src/stores/questionsStore.ts","src/stores/index.ts","src/components/Icons/Icons.tsx","src/components/Sidebar.tsx","src/utils.ts","src/components/Loader.tsx","src/components/QuestionDetail.tsx","src/components/QuestionItem.tsx","src/components/QuestionList.tsx","src/components/QuestionContainer.tsx","src/components/Header.tsx","src/components/modals/LoginModal.tsx","src/components/modals/CreateNoteModal.tsx","src/screens/Dashboard.tsx","src/Main.tsx","App.tsx"],"names":["SidebarItem","AuthStore","isLoggedIn","user","undefined","showLoginModal","checkUserLoggedInStatus","a","async","AsyncStorage","getItem","setUser","JSON","parse","setIsLoggedIn","console","log","setItem","stringify","clearUser","removeItem","login","logout","window","location","reload","setShowLoginModal","value","makeAutoObservable","this","AppTheme","getCategory","indexPath","row","section","JAVASCRIPT_FAVORITE","REACT","REACT_FAVORITE","NOTES","NOTES_FAVORITE","ALL_FAVORITES","JAVASCRIPT","getCategoryKey","category","getMenuKey","setMenuKey","MenuStore","selectedMenu","IndexPath","showSidebar","theme","LIGHT","loadTheme","userTheme","setTheme","setSelectedMenu","setShowSidebar","NotesStore","showNoteModal","setShowNoteModal","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","googleAuthProvider","GoogleAuthProvider","URLS","apiGetQuestions","url","fetch","res","json","data","apiLogInWithGoogle","signInWithPopup","result","Error","apiAddUser","payload","doc","id","setDoc","response","apiUpdateUser","userId","userRef","updateDoc","apiGetUserData","getDoc","userSnap","QuestionStore","isLoading","filteredList","allFavorites","userFavs","javascript","favs","react","notes","questionsMap","setJavascript","setReact","setNotes","setFilteredList","setAllFavorites","setIsLoading","setUserFavs","updateFavs","favList","showBookmarkedOnTop","map","item","type","bookmarked","filter","dataWithFavsOnTop","includeFavorites","setFavsForAllCategories","excludeCurrentCategory","forEach","fav","founded","findIndex","splice","getQuestions","length","searchQuestion","text","filtered","q","title","toLocaleLowerCase","includes","toLowerCase","clearFilter","toggleFavorite","foundedIndex","foundedEle","newList","newFavList","ele","question","allFavs","Store","menuStore","questionStore","authStore","notesStore","iconColor","fill","DARK","BookOpen","props","name","StarIcon","CloseIcon","GoogleIcon","style","width","height","NoteIcon","LoadingIndicator","size","Sidebar","observer","store","useContext","StoreContext","useTheme","selectedIndex","onSelect","index","accessoryLeft","accessoryRight","FavCount","paddingRight","View","backgroundColor","display","alignItems","justifyContent","borderRadius","fontSize","appearance","status","isItMobile","Dimensions","get","Loader","screenHeight","useWindowDimensions","styles","loaderContainer","StyleSheet","create","paddingBottom","memo","selected","screenWidth","content","join","contentWidth","source","html","baseStyle","letterSpacing","lineHeight","tagsStyles","body","color","padding","img","maxWidth","pre","position","left","top","transform","translateX","translateY","setSlected","selectedItem","useState","showDetail","setShowDetail","useEffect","paddingLeft","onPress","searchTimer","listData","setSelectedQuestion","selectedQuestion","ItemSeparatorComponent","Divider","renderItem","borderLeftWidth","borderRightWidth","borderColor","QuestionContainer","setValue","onFavToggle","selectedCategory","onSearch","clearTimeout","setTimeout","panel","panelLeft","placeholder","onChangeText","panelRight","flexDirection","overflow","showLoginMenu","setShowLoginMenu","onItemSelect","onLogin","onLogout","ToggleIcon","renderLoginMenu","icon","marginLeft","anchor","visible","onBackdropPress","displayName","disabled","isMakingCall","setIsMakingCall","minHeight","header","paddingTop","newUser","uid","email","exists","CreateNoteModal","setTitle","description","setDescription","nextValue","marginBottom","multiline","textStyle","uuid","newNotes","Dashboard","questionContainerWidth","container","level","zIndex","eva","createContext","Provider","icons","EvaIconsPack"],"mappings":"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","file":"static/js/app.d130d404.chunk.js","sourcesContent":["import { IndexPath } from \"@ui-kitten/components\";\n\nexport interface Question {\n  id?: string;\n  title: string;\n  content: string[];\n  bookmarked?: boolean;\n  type?: string;\n}\nexport interface User {\n  id: string;\n  displayName?: string;\n  email?: string;\n}\n\nexport interface Favorites {\n  id: string;\n  type: string;\n}\n\nexport interface QuestionMap {\n  id: string;\n  question: Question;\n}\n\nexport const questionCategoriesList = [\"javascript\", \"react\", \"notes\"];\n\nexport enum SidebarItem {\n  JAVASCRIPT = \"JAVASCRIPT\",\n  JAVASCRIPT_FAVORITE = \"JAVASCRIPT_FAVORITE\",\n  REACT = \"REACT\",\n  REACT_FAVORITE = \"REACT_FAVORITE\",\n  NOTES = \"NOTES\",\n  NOTES_FAVORITE = \"NOTES_FAVORITE\",\n  ALL_FAVORITES = \"ALL_FAVORITES\",\n}\n\nexport const getCategory = (indexPath: IndexPath) => {\n  if (indexPath.row === 1 && indexPath.section === 0) {\n    return SidebarItem.JAVASCRIPT_FAVORITE;\n  } else if (\n    indexPath.row === 0 &&\n    (indexPath.section === 0 || indexPath.section === undefined)\n  ) {\n    return SidebarItem.JAVASCRIPT;\n  } else if (\n    (indexPath.row === 1 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 1)\n  ) {\n    return SidebarItem.REACT;\n  } else if (indexPath.row === 1 && indexPath.section === 1) {\n    return SidebarItem.REACT_FAVORITE;\n  } else if (\n    (indexPath.row === 2 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 2)\n  ) {\n    return SidebarItem.NOTES;\n  } else if (indexPath.row === 1 && indexPath.section === 2) {\n    return SidebarItem.NOTES_FAVORITE;\n  } else if (indexPath.row === 3 && indexPath.section === undefined) {\n    return SidebarItem.ALL_FAVORITES;\n  }\n};\n\nexport const getCategoryKey = (category: SidebarItem) => {\n  // If item is present in fav list remove it\n  let getMenuKey = \"javascript\";\n  let setMenuKey = \"setJavascript\";\n\n  if (\n    category === SidebarItem.REACT ||\n    category === SidebarItem.REACT_FAVORITE\n  ) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n  if (\n    category === SidebarItem.NOTES ||\n    category === SidebarItem.NOTES_FAVORITE\n  ) {\n    getMenuKey = \"notes\";\n    setMenuKey = \"setNotes\";\n  }\n\n  return { getMenuKey, setMenuKey };\n};\n\nexport enum AppTheme {\n  LIGHT = \"LIGHT\",\n  DARK = \"DARK\",\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { User } from \"../data-contracts/contracts\";\n\nexport interface IAuthStore {\n  isLoggedIn: boolean;\n  setIsLoggedIn: (login: boolean) => void;\n  user: User;\n  setUser: (user: User) => void;\n  logout: () => void;\n  clearUser: () => void;\n  showLoginModal: boolean;\n  setShowLoginModal: (value: boolean) => void;\n  checkUserLoggedInStatus: () => void;\n}\n\nexport class AuthStore implements IAuthStore {\n  isLoggedIn: boolean = false;\n  user: User = undefined;\n  showLoginModal: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  checkUserLoggedInStatus = async () => {\n    try {\n      const user = await AsyncStorage.getItem(\"user\");\n      if (user) {\n        this.setUser(JSON.parse(user));\n        this.setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setUser = async (user: User) => {\n    this.user = user;\n    try {\n      await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  clearUser = async () => {\n    this.user = undefined;\n    try {\n      await AsyncStorage.removeItem(\"user\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setIsLoggedIn = (login: boolean) => {\n    this.isLoggedIn = login;\n  };\n\n  logout = () => {\n    this.setIsLoggedIn(false);\n    this.clearUser();\n    window.location.reload();\n  };\n\n  setShowLoginModal = (value: boolean) => {\n    this.showLoginModal = value;\n  };\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { AppTheme } from \"../data-contracts/contracts\";\n\nexport interface IMenuStore {\n  selectedMenu: IndexPath;\n  setSelectedMenu: (selectedMenu: IndexPath) => void;\n  showSidebar: boolean;\n  setShowSidebar: (show: boolean) => void;\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  loadTheme: () => void;\n}\n\nexport class MenuStore implements IMenuStore {\n  selectedMenu: IndexPath = new IndexPath(0);\n  showSidebar: boolean = false;\n  theme: AppTheme = AppTheme.LIGHT;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  loadTheme = async () => {\n    try {\n      const userTheme = await AsyncStorage?.getItem(\"theme\");\n      if (userTheme) {\n        this.setTheme(userTheme as AppTheme);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setSelectedMenu = (selectedMenu) => {\n    this.selectedMenu = selectedMenu;\n  };\n\n  setShowSidebar = (value: boolean) => {\n    this.showSidebar = value;\n  };\n\n  setTheme = async (value: AppTheme) => {\n    this.theme = value;\n    try {\n      await AsyncStorage.setItem(\"theme\", value);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\nexport interface INotesStore {\n  showNoteModal: boolean;\n  setShowNoteModal: (value: boolean) => void;\n}\n\nexport class NotesStore implements INotesStore {\n  showNoteModal: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setShowNoteModal = (value: boolean) => {\n    this.showNoteModal = value;\n  };\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore/lite\"\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"\n\nimport {\n  FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGIN_SENDER_ID,\n  FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID,\n} from \"@env\"\n\n// console.log(FIREBASE_API_KEY);\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: FIREBASE_API_KEY,\n  authDomain: FIREBASE_AUTH_DOMAIN,\n  projectId: FIREBASE_PROJECT_ID,\n  storageBucket: FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: FIREBASE_MESSAGIN_SENDER_ID,\n  appId: FIREBASE_APP_ID,\n  measurementId: FIREBASE_MEASUREMENT_ID,\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig)\nexport const db = getFirestore(app)\n\nconst auth = getAuth(app)\n\nconst googleAuthProvider = new GoogleAuthProvider()\n\nexport const signInWithGoogle = () => signInWithPopup(auth, googleAuthProvider)\n","import {\n  addDoc,\n  collection,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  getDoc,\n} from \"firebase/firestore/lite\";\nimport { User } from \"../data-contracts/contracts\";\nimport { db, signInWithGoogle } from \"../firebase-config\";\n\nexport const URLS = {\n  js: \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/js-v1.json\",\n  react:\n    \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/react-v1.json\",\n};\n\nexport const apiGetQuestions = async (url: string = URLS.js) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const apiLogInWithGoogle = async () => {\n  try {\n    const result = await signInWithGoogle();\n    return result;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get a list of cities from your database\nexport const apiGetJavascriptQuestions = async () => {\n  const jsCol = collection(db, \"javascript\");\n  const jsSnapshot = await getDocs(jsCol);\n  const jsList = jsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  return jsList;\n};\n\n// Add a question\nexport const apiAddJavascriptQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  console.log(response);\n};\n\n// Add a question\nexport const apiAddReactQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  return response;\n};\n\n// Add user\nexport const apiAddUser = async (payload: User) => {\n  const user = doc(db, \"users\", payload.id);\n  try {\n    const response = await setDoc(user, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Update User\nexport const apiUpdateUser = async (userId: string, payload: any) => {\n  const userRef = doc(db, \"users\", userId);\n\n  try {\n    const response = await updateDoc(userRef, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get user data\nexport const apiGetUserData = async (userId) => {\n  try {\n    // Get This user from databse\n    const userRef = doc(db, \"users\", userId);\n    const userSnap = await getDoc(userRef);\n    return userSnap;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { apiGetQuestions, URLS, apiUpdateUser, apiGetUserData } from \"../apis\";\nimport {\n  getCategoryKey,\n  Question,\n  SidebarItem,\n} from \"../data-contracts/contracts\";\n\ninterface IQModel {\n  data: Question[];\n  favs: Question[];\n}\n\nexport interface IQuestionStore {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  javascript: IQModel;\n  setJavascript: (questions: IQModel) => void;\n  react: IQModel;\n  setReact: (data: IQModel) => void;\n  notes: IQModel;\n  setNotes: (data: IQModel) => void;\n  filteredList: Question[];\n  setFilteredList: (questions: Question[]) => void;\n  allFavorites: Question[];\n  setAllFavorites: (questions: Question[]) => void;\n  getQuestions: (type: SidebarItem, userId?: string) => void;\n  toggleFavorite: (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => void;\n  searchQuestion: (text: string, category?: string) => void;\n  clearFilter: (selectedCategory) => void;\n  questions?: {\n    js: IQModel;\n    react: IQModel;\n  };\n  userFavs: Question[];\n  setUserFavs: (data: Question[]) => void;\n  questionsMap: any;\n}\n\nexport class QuestionStore implements IQuestionStore {\n  isLoading: boolean = false;\n  filteredList: Question[] = [];\n  allFavorites: Question[] = [];\n  userFavs: Question[] = [];\n  javascript: IQModel = {\n    data: [],\n    favs: [],\n  };\n  react: IQModel = {\n    data: [],\n    favs: [],\n  };\n  notes: IQModel = {\n    data: [],\n    favs: [],\n  };\n\n  questionsMap = {};\n\n  setJavascript = (data: IQModel) => {\n    this.javascript = data;\n  };\n\n  setReact = (data: IQModel) => {\n    this.react = data;\n  };\n\n  setNotes = (data: IQModel) => {\n    this.notes = data;\n  };\n\n  setFilteredList = (data: Question[]) => {\n    this.filteredList = data;\n  };\n\n  setAllFavorites = (data: Question[]) => {\n    this.allFavorites = data;\n  };\n\n  setIsLoading = (isLoading: boolean) => {\n    this.isLoading = isLoading;\n  };\n\n  setUserFavs = (data: Question[]) => {\n    this.userFavs = data;\n  };\n\n  // This is when user loads the page\n  updateFavs = (\n    favList: Question[],\n    category?: SidebarItem,\n    showBookmarkedOnTop?: boolean\n  ) => {\n    // Add user bookmarked list\n    this.userFavs = favList;\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    // Filter bookmarked items by category\n    const favs = (favList ?? [])\n      .map((item) => {\n        if (item.type === category) {\n          return { ...item, bookmarked: true };\n        }\n      })\n      .filter((item) => item);\n\n    const dataWithFavsOnTop = this.includeFavorites(\n      this[getMenuKey].data,\n      favs\n    );\n\n    const data = showBookmarkedOnTop\n      ? dataWithFavsOnTop\n      : this[getMenuKey].data;\n\n    this[setMenuKey]({\n      favs,\n      data,\n    });\n    this.setFilteredList(data);\n    this.setFavsForAllCategories(favList, category);\n\n    // Set Favs for all categories\n  };\n\n  setFavsForAllCategories = (favList, excludeCurrentCategory) => {\n    const categories = [\n      SidebarItem.JAVASCRIPT,\n      SidebarItem.REACT,\n      SidebarItem.NOTES,\n    ].filter((item) => item !== excludeCurrentCategory);\n\n    categories.forEach((category) => {\n      const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n      this[setMenuKey]({\n        data: this[getMenuKey].data,\n        favs: favList\n          ?.map((item) => {\n            if (item.type === category) {\n              return item;\n            }\n          })\n          .filter((item) => item),\n      });\n    });\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  includeFavorites = (data: Question[], favs: Question[]) => {\n    favs.forEach((fav) => {\n      const founded = data.findIndex((item) => item.id === fav.id);\n      data.splice(founded, 1);\n    });\n\n    return [...favs, ...data];\n  };\n\n  getQuestions = async (category: SidebarItem, userId?: string) => {\n    try {\n      console.log(\"made fresh api call\");\n      this.setIsLoading(true);\n      let data = [];\n\n      switch (category) {\n        case SidebarItem.JAVASCRIPT:\n          // Get js questions and set to store\n          data = await apiGetQuestions(URLS.js);\n          this.setJavascript({\n            ...this.javascript,\n            data,\n          });\n\n          // Add data to questionMap\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          // If user is loged in get bookmarked Item\n          // Otherwise there is no bookmared\n\n          if (userId) {\n            const userSnap = await apiGetUserData(userId);\n            console.log(userSnap.data());\n            // Notes is only for logged in users\n            this.setNotes({ ...this.notes, data: userSnap.data().notes });\n            this.updateFavs(userSnap.data().favs, category, true);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        case SidebarItem.REACT:\n          data = await apiGetQuestions(URLS.react);\n\n          this.setReact({\n            ...this.react,\n            data,\n          });\n\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          if (this.userFavs?.length) {\n            this.updateFavs(this.userFavs, category, true);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        default:\n          console.log(\"Made no call\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoading(false);\n    }\n  };\n\n  searchQuestion = (text: string, category: SidebarItem) => {\n    let filtered = [];\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n      case SidebarItem.NOTES:\n        filtered = this[getMenuKey].data.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        filtered = this.userFavs.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      default:\n        filtered = this[getMenuKey].favs?.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLocaleLowerCase());\n        });\n    }\n\n    this.setFilteredList(filtered);\n  };\n\n  clearFilter = (category: SidebarItem) => {\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n      case SidebarItem.NOTES:\n        this.setFilteredList(this[getMenuKey].data);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(this.userFavs);\n        break;\n      default:\n        this.setFilteredList(this[getMenuKey].favs);\n    }\n  };\n\n  toggleFavorite = (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => {\n    // If item is present in fav list remove it\n\n    const { getMenuKey, setMenuKey } = getCategoryKey(item.type as SidebarItem);\n\n    const foundedIndex = this[getMenuKey].favs?.findIndex(\n      (fav) => fav.id === item.id\n    );\n\n    let foundedEle = this[getMenuKey].favs[foundedIndex];\n    let newList = [];\n    let newFavList = [];\n\n    // debugger;\n    if (foundedIndex >= 0) {\n      // Remove from fav\n\n      newList = this[getMenuKey].data.map((ele) => {\n        if (ele.id === foundedEle.id) {\n          return {\n            ...ele,\n            bookmarked: false,\n          };\n        }\n        return ele;\n      });\n\n      newFavList = this[getMenuKey].favs.filter(\n        (item) => item.id !== foundedEle.id\n      );\n\n      this[setMenuKey]({ data: newList, favs: newFavList });\n    } else {\n      // Add to fav\n      newList = this[getMenuKey].data.map((question) => {\n        if (question.id === item.id) {\n          return {\n            ...item,\n            bookmarked: true,\n          };\n        }\n        return question;\n      });\n\n      newFavList = [{ ...item, bookmarked: true }, ...this[getMenuKey].favs];\n\n      this[setMenuKey]({ data: newList, favs: newFavList });\n    }\n\n    const allFavs = [...this.javascript.favs, ...this.react.favs];\n    this.setUserFavs(allFavs);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n      case SidebarItem.NOTES:\n        this.setFilteredList(newList);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(allFavs);\n        break;\n      default:\n        this.setFilteredList(newFavList);\n    }\n\n    apiUpdateUser(userId, {\n      favs: allFavs,\n    });\n  };\n}\n","import { AuthStore, IAuthStore } from \"./authStore\";\nimport { IMenuStore, MenuStore } from \"./menuStore\";\nimport { INotesStore, NotesStore } from \"./notesStore\";\nimport { IQuestionStore, QuestionStore } from \"./questionsStore\";\n\nexport interface IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n  notesStore: INotesStore;\n}\n\nexport class Store implements IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n  notesStore: INotesStore;\n\n  constructor() {\n    this.menuStore = new MenuStore();\n    this.questionStore = new QuestionStore();\n    this.authStore = new AuthStore();\n    this.notesStore = new NotesStore();\n  }\n}\n","import { Icon, Spinner } from \"@ui-kitten/components\";\nimport { AppTheme } from \"../../data-contracts/contracts\";\n\nexport const iconColor = (theme) => ({\n  fill: theme === AppTheme.DARK ? \"#ffffff\" : \"#222b45\",\n});\n\nexport const BookOpen = (props) => <Icon {...props} name=\"book-open-outline\" />;\n\nexport const StarIcon = (props) => <Icon {...props} name=\"star-outline\" />;\n\nexport const HamBurgerIcon = (props) => (\n  <Icon {...props} style={{ width: 28, height: 28 }} name=\"menu-2-outline\" />\n);\n\nexport const CloseIcon = (props) => <Icon {...props} name=\"close-outline\" />;\n\nexport const Ellipsis = (props) => (\n  <Icon\n    {...props}\n    name=\"more-vertical-outline\"\n    style={{ width: 24, height: 24 }}\n  />\n);\n\nexport const GoogleIcon = (props) => (\n  <Icon {...props} name=\"google\" style={{ width: 16, height: 16 }} />\n);\n\nexport const NoteIcon = (props) => <Icon {...props} name=\"plus-outline\" />;\n\nexport const LoadingIndicator = () => <Spinner size=\"small\" />;\n","import {\n  Menu,\n  MenuGroup,\n  MenuItem,\n  Text,\n  useTheme,\n} from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { StoreContext } from \"../../App\";\nimport { getCategory } from \"../data-contracts/contracts\";\nimport { BookOpen, StarIcon } from \"./Icons/Icons\";\n\nexport const Sidebar = observer(() => {\n  const store = useContext(StoreContext);\n  const { questionStore, menuStore } = store;\n  const { selectedMenu, setSelectedMenu } = menuStore;\n\n  const { javascript, react, notes, userFavs } = questionStore;\n  const theme = useTheme();\n\n  return (\n    <Menu\n      selectedIndex={selectedMenu}\n      onSelect={(index) => {\n        setSelectedMenu(index);\n        questionStore.clearFilter(getCategory(index));\n      }}\n    >\n      {javascript?.favs?.length ? (\n        <MenuGroup title=\"Javascript\">\n          <MenuItem\n            title=\"All\"\n            accessoryLeft={BookOpen}\n            accessoryRight={FavCount(theme, javascript.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n          <MenuItem\n            title=\"Favorites\"\n            accessoryLeft={StarIcon}\n            accessoryRight={FavCount(theme, javascript.favs)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        </MenuGroup>\n      ) : (\n        <MenuItem\n          title=\"Javascript\"\n          accessoryRight={FavCount(theme, javascript.data)}\n          style={{\n            paddingRight: 24,\n          }}\n        />\n      )}\n\n      {react?.favs?.length ? (\n        <MenuGroup title=\"React\">\n          <MenuItem\n            title=\"All\"\n            accessoryLeft={BookOpen}\n            accessoryRight={FavCount(theme, react.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n          <MenuItem\n            title=\"Favorites\"\n            accessoryLeft={StarIcon}\n            accessoryRight={FavCount(theme, react.favs)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        </MenuGroup>\n      ) : (\n        <MenuItem\n          title=\"React\"\n          accessoryRight={FavCount(theme, react.data)}\n          style={{\n            paddingRight: 24,\n          }}\n        />\n      )}\n\n      {notes?.favs?.length ? (\n        <MenuGroup title=\"My Notes\">\n          <MenuItem\n            title=\"All\"\n            accessoryLeft={BookOpen}\n            accessoryRight={FavCount(theme, notes.data)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n          <MenuItem\n            title=\"Favorites\"\n            accessoryLeft={StarIcon}\n            accessoryRight={FavCount(theme, notes.favs)}\n            style={{\n              paddingRight: 24,\n            }}\n          />\n        </MenuGroup>\n      ) : (\n        <MenuItem\n          title=\"My Notes\"\n          accessoryRight={FavCount(theme, notes.data)}\n          style={{\n            paddingRight: 24,\n          }}\n        />\n      )}\n\n      <MenuItem\n        title=\"All Favorites\"\n        accessoryRight={FavCount(theme, userFavs)}\n        style={{\n          paddingRight: 24,\n        }}\n      ></MenuItem>\n    </Menu>\n  );\n});\n\nconst FavCount = (theme, data) => {\n  if (data?.length) {\n    return (\n      <View>\n        <Text\n          style={{\n            backgroundColor: theme[\"color-primary-transparent-200\"],\n            width: 40,\n            height: 20,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: 20,\n            fontSize: 10,\n          }}\n          category=\"label\"\n          appearance=\"hint\"\n          status=\"primary\"\n        >\n          {data?.length}\n        </Text>\n      </View>\n    );\n  }\n\n  return null;\n};\n","import { Dimensions } from \"react-native\";\n\nconst { width } = Dimensions.get(\"window\");\n\nexport const isItMobile = width < 769;\n","import { Spinner } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { isItMobile } from \"../utils\";\n\nexport default function Loader() {\n  const { height: screenHeight } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        styles.loaderContainer,\n        {\n          height: `${screenHeight - 90}px`,\n        },\n      ]}\n    >\n      <Spinner size=\"giant\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loaderContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingRight: `${isItMobile ? \"0\" : \"200\"}px`,\n    paddingBottom: `${isItMobile ? \"0\" : \"100\"}px`,\n  },\n});\n","import React, { memo } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport RenderHTML from \"react-native-render-html\";\nimport { useTheme, Text } from \"@ui-kitten/components\";\nimport { Question } from \"../data-contracts/contracts\";\nimport { Editor } from \"./Editor\";\nimport { isItMobile } from \"../utils\";\n\ninterface QuestionDetailProps {\n  selected: Question | undefined;\n}\n\nconst QuestionDetail = ({ selected }: QuestionDetailProps) => {\n  const theme = useTheme();\n  const { width: screenWidth } = useWindowDimensions();\n  const content = selected?.content?.join(\"\");\n\n  if (selected) {\n    return (\n      <RenderHTML\n        contentWidth={screenWidth / 2}\n        source={{\n          html: content,\n        }}\n        baseStyle={{\n          fontSize: isItMobile ? 14 : 18,\n          letterSpacing: 1,\n          lineHeight: 24,\n        }}\n        tagsStyles={{\n          body: {\n            color: theme[\"text-basic-color\"],\n            padding: 16,\n          },\n          img: {\n            maxWidth: \"100\",\n          },\n          pre: {\n            backgroundColor: theme[\"color-basic-transparent-200\"],\n            padding: 16,\n          },\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: [\n          {\n            translateX: -60,\n            translateY: -20,\n          },\n        ],\n      }}\n    >\n      {/* <Editor /> */}\n      <Text>Select a Question</Text>\n    </View>\n  );\n};\n\nexport default memo(QuestionDetail);\n","import React, { memo, useEffect, useState } from \"react\";\nimport {\n  getCategory,\n  Question,\n  SidebarItem,\n} from \"../data-contracts/contracts\";\nimport { Button, Icon, IndexPath, ListItem, Text } from \"@ui-kitten/components\";\nimport { View } from \"react-native\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { isItMobile } from \"../utils\";\n\ninterface QuestionItemProps {\n  item: Question;\n  selectedItem: Question;\n  index: number;\n  setSlected: (item: Question) => void;\n  toggleFavorite: (item: Question, category: SidebarItem) => void;\n  selectedMenu: IndexPath;\n}\n\nconst QuestionItem = ({\n  item,\n  setSlected,\n  index,\n  toggleFavorite,\n  selectedItem,\n  selectedMenu,\n}: QuestionItemProps) => {\n  const [showDetail, setShowDetail] = useState(\n    item?.id === selectedItem?.id || false\n  );\n\n  useEffect(() => {\n    if (item?.id === selectedItem?.id && !showDetail) {\n      setShowDetail(true);\n    } else {\n      setShowDetail(false);\n    }\n  }, [item, selectedItem]);\n\n  const onItemClick = () => {\n    setSlected(item);\n  };\n\n  const StarIcon = (props) => (\n    <Icon {...props} name={item?.bookmarked ? \"star\" : \"star-outline\"} />\n  );\n\n  const favButton = () => {\n    return (\n      <Button\n        size=\"tiny\"\n        appearance=\"ghost\"\n        onPress={() => toggleFavorite(item, getCategory(selectedMenu))}\n        status={item?.bookmarked ? \"danger\" : \"basic\"}\n        accessoryLeft={StarIcon}\n      />\n    );\n  };\n\n  const Title = () => {\n    return (\n      <Text\n        category=\"s1\"\n        style={{\n          fontSize: isItMobile ? 14 : 16,\n          paddingLeft: 8,\n        }}\n      >{`${index + 1}. ${item?.title}`}</Text>\n    );\n  };\n\n  return (\n    <View>\n      <ListItem\n        title={Title}\n        onPress={onItemClick}\n        accessoryRight={favButton}\n        style={{\n          backgroundColor:\n            item?.id === selectedItem?.id ? \"rgba(51, 102, 255, 0.08)\" : null,\n        }}\n      />\n\n      {showDetail && isItMobile && <QuestionDetail selected={selectedItem} />}\n    </View>\n  );\n};\n\nexport default memo(QuestionItem);\n","import { Divider, List } from \"@ui-kitten/components\";\nimport React, { memo } from \"react\";\nimport QuestionItem from \"./QuestionItem\";\n\nfunction QuestionList({\n  listData,\n  toggleFavorite,\n  setSelectedQuestion,\n  selectedQuestion,\n  selectedMenu,\n}) {\n  const renderQuestion = ({ item, index }) => {\n    return (\n      <QuestionItem\n        key={item?.id}\n        item={item}\n        index={index}\n        setSlected={setSelectedQuestion}\n        selectedItem={selectedQuestion}\n        toggleFavorite={toggleFavorite}\n        selectedMenu={selectedMenu}\n      />\n    );\n  };\n\n  return (\n    <List\n      data={listData}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderQuestion}\n      style={{\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: \"rgba(0,0,0,0.1)\",\n      }}\n    />\n  );\n}\n\nexport default memo(QuestionList);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { View, StyleSheet, useWindowDimensions } from \"react-native\";\nimport Loader from \"./Loader\";\nimport { Input } from \"@ui-kitten/components\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport {\n  getCategory,\n  Question,\n  SidebarItem,\n} from \"../data-contracts/contracts\";\nimport { observer } from \"mobx-react-lite\";\nimport QuestionList from \"./QuestionList\";\nimport { isItMobile } from \"../utils\";\nimport { StoreContext } from \"../../App\";\n\nlet searchTimer;\n\nexport const QuestionContainer = observer(() => {\n  const store = useContext(StoreContext);\n\n  const {\n    menuStore: { selectedMenu },\n    authStore: { user, setShowLoginModal },\n    questionStore: {\n      isLoading,\n      getQuestions,\n      toggleFavorite,\n      searchQuestion,\n      filteredList,\n      setFilteredList,\n      react,\n      javascript,\n    },\n  } = store;\n\n  const [selectedQuestion, setSelectedQuestion] = useState<Question>();\n  const { height: screenHeight, width } = useWindowDimensions();\n\n  const [value, setValue] = useState(\"\");\n\n  // On Load\n  useEffect(() => {\n    (async () => {\n      getQuestions(SidebarItem.JAVASCRIPT, user?.id);\n    })();\n  }, [user?.id]);\n\n  const onFavToggle = (item: Question, category: SidebarItem) => {\n    // Allow fav only if user is loggedIn\n    if (user) {\n      toggleFavorite(item, category, user?.id);\n      // Otherwise show login modal\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  // On Menu change\n  useEffect(() => {\n    // set list data based on menu selection\n    const selectedCategory = getCategory(selectedMenu);\n    if (selectedCategory === SidebarItem.JAVASCRIPT) {\n      setFilteredList(javascript.data);\n    } else if (selectedCategory === SidebarItem.JAVASCRIPT_FAVORITE) {\n      setFilteredList(javascript.favs);\n    } else if (selectedCategory === SidebarItem.REACT) {\n      if (react.data.length) {\n        setFilteredList(react.data);\n      } else {\n        getQuestions(SidebarItem.REACT);\n      }\n    } else if (selectedCategory === SidebarItem.REACT_FAVORITE) {\n      setFilteredList(react.favs);\n    }\n  }, [selectedMenu]);\n\n  const onSearch = (value: string) => {\n    setValue(value);\n\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      searchQuestion(value, getCategory(selectedMenu));\n    }, 500);\n  };\n\n  const renderList = () => {\n    return (\n      <>\n        {isLoading && <Loader />}\n        <View style={styles.panel}>\n          <View\n            style={[\n              styles.panelLeft,\n              {\n                height: `${screenHeight - 90}px`,\n              },\n            ]}\n          >\n            <Input\n              placeholder=\"Search\"\n              size=\"small\"\n              value={value}\n              onChangeText={onSearch}\n            />\n\n            <QuestionList\n              listData={filteredList}\n              toggleFavorite={onFavToggle}\n              selectedQuestion={selectedQuestion}\n              setSelectedQuestion={setSelectedQuestion}\n              selectedMenu={selectedMenu}\n            />\n          </View>\n          {!isItMobile && (\n            <View\n              style={[\n                styles.panelRight,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <QuestionDetail selected={selectedQuestion} />\n            </View>\n          )}\n        </View>\n      </>\n    );\n  };\n\n  return renderList();\n});\n\nconst styles = StyleSheet.create({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  panelLeft: {\n    width: `${isItMobile ? \"100%\" : \"40%\"}`,\n    overflow: \"scroll\",\n  },\n  panelRight: {\n    width: `60%`,\n    overflow: \"scroll\",\n    padding: 16,\n    paddingRight: 32,\n  },\n});\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n  OverflowMenu,\n  MenuItem,\n  Text,\n} from \"@ui-kitten/components\";\nimport { AppTheme } from \"../data-contracts/contracts\";\nimport { View } from \"react-native\";\nimport { observer } from \"mobx-react-lite\";\nimport { StoreContext } from \"../../App\";\nimport { isItMobile } from \"../utils\";\nimport {\n  CloseIcon,\n  Ellipsis,\n  GoogleIcon,\n  HamBurgerIcon,\n  iconColor,\n  NoteIcon,\n} from \"./Icons/Icons\";\n\nfunction Header() {\n  const { menuStore, authStore, notesStore } = useContext(StoreContext);\n\n  const { setShowSidebar, showSidebar, theme, setTheme } = menuStore;\n  const { user, isLoggedIn, setShowLoginModal } = authStore;\n  const { setShowNoteModal } = notesStore;\n\n  const [showLoginMenu, setShowLoginMenu] = useState(false);\n\n  const onItemSelect = () => {\n    setShowLoginMenu(false);\n  };\n\n  const onLogin = () => {\n    setShowLoginModal(true);\n  };\n\n  const onLogout = () => {\n    authStore.logout();\n  };\n\n  const ToggleIcon = (props) => (\n    <Icon {...props} name={theme === AppTheme.LIGHT ? \"moon\" : \"sun\"} />\n  );\n\n  const renderLoginMenu = () => (\n    <TopNavigationAction\n      onPress={() => setShowLoginMenu(true)}\n      icon={() => Ellipsis(iconColor(theme))}\n    />\n  );\n\n  const renderOverflowMenu = () => {\n    return (\n      <OverflowMenu\n        anchor={renderLoginMenu}\n        visible={showLoginMenu}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setShowLoginMenu(false)}\n      >\n        {isLoggedIn && <MenuItem title={user?.displayName} disabled={true} />}\n\n        {isLoggedIn && (\n          <MenuItem\n            onPress={onLogout}\n            title=\"Logout\"\n            accessoryLeft={() => GoogleIcon(iconColor(theme))}\n          />\n        )}\n\n        {!isLoggedIn && (\n          <MenuItem\n            onPress={onLogin}\n            title=\"Login\"\n            accessoryLeft={() => GoogleIcon(iconColor(theme))}\n          />\n        )}\n      </OverflowMenu>\n    );\n  };\n\n  const renderHamburger = () => {\n    if (isItMobile) {\n      return (\n        <TopNavigationAction\n          onPress={() => setShowSidebar(!showSidebar)}\n          icon={() =>\n            showSidebar\n              ? CloseIcon({\n                  ...iconColor(theme),\n                  style: { width: 28, height: 28 },\n                })\n              : HamBurgerIcon(iconColor(theme))\n          }\n          style={{\n            marginLeft: 16,\n          }}\n        />\n      );\n    }\n    return null;\n  };\n\n  const renderRightNav = () => {\n    return (\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        {isLoggedIn && !isItMobile && (\n          <Button\n            appearance=\"outline\"\n            status=\"primary\"\n            onPress={() => setShowNoteModal(true)}\n            size=\"small\"\n            style={{\n              marginLeft: 16,\n            }}\n            accessoryLeft={NoteIcon}\n          >\n            Create Note\n          </Button>\n        )}\n        {isLoggedIn && isItMobile && (\n          <TopNavigationAction\n            onPress={() => setShowNoteModal(true)}\n            icon={NoteIcon}\n            style={{\n              marginLeft: 16,\n            }}\n          />\n        )}\n        <TopNavigationAction\n          onPress={() => {\n            setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n          }}\n          icon={ToggleIcon}\n          style={{\n            marginLeft: 16,\n          }}\n        />\n        {!isLoggedIn && (\n          <Button\n            appearance=\"outline\"\n            status=\"primary\"\n            // status=\"success\"\n            onPress={onLogin}\n            size=\"tiny\"\n            style={{\n              marginLeft: 16,\n            }}\n          >\n            Login\n          </Button>\n        )}\n        {isLoggedIn && renderOverflowMenu()}\n      </View>\n    );\n  };\n\n  return (\n    <TopNavigation\n      style={{\n        paddingLeft: 16,\n        paddingRight: 16,\n      }}\n      title={\"Interview Questions\"}\n      accessoryLeft={renderHamburger}\n      accessoryRight={renderRightNav}\n    ></TopNavigation>\n  );\n}\n\nexport default observer(Header);\n","import React, { useContext, useState } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport { Button, Card, Icon, Spinner, Text } from \"@ui-kitten/components\";\nimport { apiAddUser, apiGetUserData, apiLogInWithGoogle } from \"../../apis\";\nimport { observer } from \"mobx-react-lite\";\nimport { StoreContext } from \"../../../App\";\nimport { CloseIcon, GoogleIcon, LoadingIndicator } from \"../Icons/Icons\";\n\nconst LoginModal = () => {\n  const { authStore, menuStore, questionStore } = useContext(StoreContext);\n\n  const { setUser, setIsLoggedIn, showLoginModal, setShowLoginModal } =\n    authStore;\n  const { width } = useWindowDimensions();\n  const [isMakingCall, setIsMakingCall] = useState(false);\n\n  const onLogin = async () => {\n    try {\n      setIsMakingCall(true);\n      // Authenticate using Google\n      const res = await apiLogInWithGoogle();\n      const newUser = {\n        id: res.user.uid,\n        displayName: res.user.displayName,\n        email: res.user.email,\n      };\n\n      // Update state\n      setUser(newUser);\n      setIsLoggedIn(true);\n\n      const userSnap = await apiGetUserData(newUser.id);\n\n      // Check if this user exist\n      if (userSnap.exists()) {\n        // TODO: Can we use to reload page\n        // setUserFavs(userSnap?.data()?.favs, getCategory(selectedMenu));\n        window.location.reload();\n      } else {\n        // Add this user to database\n        await apiAddUser(newUser);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsMakingCall(false);\n      setShowLoginModal(false);\n    }\n  };\n\n  const Header = (props) => (\n    <View\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        paddingLeft: 24,\n        alignItems: \"center\",\n      }}\n    >\n      <Text category=\"h6\">Login</Text>\n      <Button\n        onPress={() => setShowLoginModal(false)}\n        size=\"large\"\n        appearance=\"ghost\"\n        accessoryLeft={CloseIcon}\n      />\n    </View>\n  );\n\n  if (!showLoginModal) {\n    return <View />;\n  }\n\n  return (\n    <View\n      style={{\n        minHeight: 220,\n        position: \"absolute\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        style={{\n          maxWidth: width,\n          width: 420,\n        }}\n        disabled={true}\n        header={Header}\n      >\n        <View\n          style={{\n            paddingTop: 32,\n            paddingBottom: 32,\n          }}\n        >\n          <Button\n            disabled={isMakingCall}\n            size=\"giant\"\n            accessoryLeft={isMakingCall ? LoadingIndicator : GoogleIcon}\n            onPress={onLogin}\n          >\n            Login with Google\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n};\n\nexport default observer(LoginModal);\n","import React, { useContext, useState } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport { Button, Card, Icon, Input, Text } from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { StoreContext } from \"../../../App\";\nimport { isItMobile } from \"../../utils\";\nimport { CloseIcon, LoadingIndicator } from \"../Icons/Icons\";\nimport { v4 as uuid } from \"uuid\";\nimport { apiUpdateUser } from \"../../apis\";\nimport { Question } from \"../../data-contracts/contracts\";\n\nconst CreateNoteModal = observer(() => {\n  const {\n    notesStore,\n    authStore: { user },\n    questionStore,\n  } = useContext(StoreContext);\n\n  const { showNoteModal, setShowNoteModal } = notesStore;\n  const { setNotes, notes } = questionStore;\n  const { width } = useWindowDimensions();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isMakingCall, setIsMakingCall] = useState(false);\n\n  const onAddNote = async () => {\n    const item: Question = {\n      bookmarked: false,\n      title,\n      content: [description],\n      id: uuid(),\n      type: \"NOTES\",\n    };\n\n    const { data = [] } = notes;\n\n    const newNotes = [item, ...data];\n\n    try {\n      setIsMakingCall(true);\n      await apiUpdateUser(user.id, { notes: newNotes });\n      setNotes({\n        ...notes,\n        data: newNotes,\n      });\n      setShowNoteModal(false);\n      setTitle(\"\");\n      setDescription(\"\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsMakingCall(false);\n    }\n  };\n\n  const Header = (props) => (\n    <View\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        paddingLeft: 24,\n        alignItems: \"center\",\n      }}\n    >\n      <Text category=\"h6\">Create New Note</Text>\n      <Button\n        onPress={() => setShowNoteModal(false)}\n        size=\"medium\"\n        appearance=\"ghost\"\n        accessoryLeft={CloseIcon}\n      />\n    </View>\n  );\n\n  if (!showNoteModal) {\n    return <View />;\n  }\n\n  return (\n    <View\n      style={{\n        minHeight: 220,\n        position: \"absolute\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        style={{\n          maxWidth: width,\n          width: isItMobile ? 320 : 620,\n        }}\n        disabled={true}\n        header={Header}\n      >\n        <View\n          style={{\n            paddingTop: 32,\n            paddingBottom: 32,\n          }}\n        >\n          <Input\n            placeholder=\"Title\"\n            value={title}\n            onChangeText={(nextValue) => setTitle(nextValue)}\n            style={{\n              marginBottom: 16,\n            }}\n          />\n          <Input\n            multiline={true}\n            textStyle={{ minHeight: 120 }}\n            placeholder=\"Description\"\n            value={description}\n            onChangeText={(nextValue) => setDescription(nextValue)}\n            style={{\n              marginBottom: 16,\n            }}\n          />\n          <Button\n            onPress={onAddNote}\n            disabled={isMakingCall}\n            accessoryLeft={isMakingCall ? LoadingIndicator : null}\n          >\n            Submit\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n});\n\nexport default CreateNoteModal;\n","import React, { useContext, useEffect } from \"react\";\nimport { Divider, Layout } from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { QuestionContainer } from \"../components/QuestionContainer\";\nimport Header from \"../components/Header\";\nimport LoginModal from \"../components/modals/LoginModal\";\nimport CreateNoteModal from \"../components/modals/CreateNoteModal\";\nimport { StoreContext } from \"../../App\";\nimport { isItMobile } from \"../utils\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const Dashboard = observer(() => {\n  const store = useContext(StoreContext);\n  console.log(store);\n  const { menuStore, authStore } = store;\n\n  const { showSidebar } = menuStore;\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  useEffect(() => {\n    authStore.checkUserLoggedInStatus();\n    menuStore.loadTheme();\n  }, []);\n\n  const renderSidebar = () => {\n    if (!isItMobile) {\n      return (\n        <View\n          style={{\n            width: \"280px\",\n          }}\n        >\n          <Sidebar />\n        </View>\n      );\n    }\n\n    if (showSidebar) {\n      return (\n        <View\n          style={{\n            width: \"280px\",\n            position: \"absolute\",\n            zIndex: 11,\n            height: \"100%\",\n          }}\n        >\n          <Sidebar />\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const questionContainerWidth = isItMobile ? \"100%\" : `${screenWidth - 280}px`;\n\n  return (\n    <View>\n      <Header />\n      <Divider />\n      <Layout style={styles.container} level=\"3\">\n        {renderSidebar()}\n\n        <View\n          style={{\n            width: questionContainerWidth,\n          }}\n        >\n          <QuestionContainer />\n        </View>\n      </Layout>\n      <LoginModal />\n      <CreateNoteModal />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n","import React, { useContext } from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport { ApplicationProvider } from \"@ui-kitten/components\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { Dashboard } from \"./screens/Dashboard\";\nimport { StoreContext } from \"../App\";\nimport { AppTheme } from \"./data-contracts/contracts\";\nimport { observer } from \"mobx-react-lite\";\n\nfunction Main() {\n  const {\n    menuStore: { theme },\n  } = useContext(StoreContext);\n\n  return (\n    <ApplicationProvider\n      {...eva}\n      theme={theme === AppTheme.LIGHT ? eva.light : eva.dark}\n    >\n      <SafeAreaProvider>\n        <Dashboard />\n      </SafeAreaProvider>\n    </ApplicationProvider>\n  );\n}\n\nexport default observer(Main);\n","import React, { createContext, useContext } from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport {\n  ApplicationProvider,\n  Divider,\n  Layout,\n  IconRegistry,\n  Card,\n} from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"./src/components/Sidebar\";\nimport { QuestionContainer } from \"./src/components/QuestionContainer\";\nimport { useState } from \"react\";\nimport { AppTheme } from \"./src/data-contracts/contracts\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport Header from \"./src/components/Header\";\nimport { useEffect } from \"react\";\nimport { IStore, Store } from \"./src/stores\";\nimport LoginModal from \"./src/components/modals/LoginModal\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport Home from \"./src/screens/Dashboard\";\nimport { AppNavigator } from \"./src/components/navigation/AppNavigator\";\nimport Main from \"./src/Main\";\n\nconst store = new Store();\n\nexport const StoreContext = createContext<IStore>(undefined);\n\nexport default () => {\n  return (\n    <StoreContext.Provider value={store}>\n      <IconRegistry icons={EvaIconsPack} />\n      <Main />\n    </StoreContext.Provider>\n  );\n};\n"],"sourceRoot":""}