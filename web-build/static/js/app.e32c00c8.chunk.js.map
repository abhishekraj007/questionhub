{"version":3,"sources":["src/data-contracts/index.tsx","src/components/Sidebar.tsx","src/components/Loader.tsx","src/components/QuestionDetail.tsx","src/components/QuestionItem.tsx","src/components/QuestionItemWeb.tsx","src/components/QuestionList.tsx","src/components/QuestionContainer.tsx","src/components/Header.tsx","src/stores/authStore.ts","src/stores/menuStore.ts","src/firebase-config.js","src/apis/index.ts","src/stores/questionsStore.ts","src/stores/index.ts","src/components/LoginModal.tsx","App.tsx"],"names":["SidebarItem","AppTheme","getCategory","indexPath","row","section","JAVASCRIPT_FAVORITE","undefined","REACT","REACT_FAVORITE","ALL_FAVORITES","JAVASCRIPT","getCategoryKey","category","getMenuKey","setMenuKey","Sidebar","observer","store","menuStore","questionStore","javascript","react","theme","useTheme","StarIcon","props","style","width","height","name","FavCount","data","length","View","backgroundColor","marginRight","display","alignItems","justifyContent","borderRadius","fontSize","appearance","status","BookOpen","selectedIndex","selectedMenu","onSelect","index","console","log","setSelectedMenu","clearFilter","fav","title","accessoryLeft","accessoryRight","paddingRight","StyleSheet","create","menuItem","Loader","screenHeight","useWindowDimensions","styles","loaderContainer","size","paddingBottom","memo","selected","screenWidth","content","join","contentWidth","source","html","baseStyle","letterSpacing","lineHeight","tagsStyles","body","color","img","maxWidth","pre","padding","position","left","top","transform","translateX","translateY","accordionItem","borderWidth","borderColor","marginBottom","item","useState","setSlected","toggleFavorite","selectedItem","bookmarked","paddingLeft","onPress","id","searchTimer","listData","setSelectedQuestion","selectedQuestion","ItemSeparatorComponent","Divider","renderItem","Platform","OS","borderLeftWidth","borderRightWidth","QuestionContainer","authStore","user","setShowLoginModal","isLoading","getQuestions","searchQuestion","filteredList","setFilteredList","setUserFavs","value","setValue","useEffect","a","async","onFavToggle","selectedCategory","onSearch","clearTimeout","setTimeout","panel","panelLeft","placeholder","onChangeText","panelRight","nextValue","flexDirection","overflow","setTheme","isLoggedIn","visible","setVisible","onItemSelect","onLogin","onLogout","logout","ToggleIcon","LIGHT","Ellipsis","GoogleIcon","renderToggleButton","DARK","icon","marginLeft","anchor","onBackdropPress","displayName","disabled","AuthStore","showLoginModal","setUser","localStorage","setItem","JSON","stringify","clearUser","removeItem","setIsLoggedIn","login","window","location","reload","makeAutoObservable","this","getItem","parse","MenuStore","IndexPath","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","googleAuthProvider","GoogleAuthProvider","URLS","apiGetQuestions","url","fetch","res","json","apiLogInWithGoogle","signInWithPopup","result","Error","apiAddUser","payload","doc","setDoc","response","apiGetUserData","userId","userRef","getDoc","userSnap","QuestionStore","allFavorites","questionsMap","userFavs","favList","favs","map","type","filter","currentListIncludingFav","includeFavorites","setFavsForAllCategories","excludeCurrentCategory","forEach","founded","findIndex","splice","setIsLoading","setJavascript","setReact","setAllFavorites","text","filtered","q","toLocaleLowerCase","includes","toLowerCase","foundedIndex","foundedEle","newList","newFavList","ele","question","allFavs","updateDoc","apiUpdateUser","Store","isMakingCall","setIsMakingCall","CloseIcon","minHeight","header","paddingTop","newUser","uid","email","exists","userTheme","icons","EvaIconsPack","eva","container","level"],"mappings":"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","file":"static/js/app.e32c00c8.chunk.js","sourcesContent":["import { IndexPath } from \"@ui-kitten/components\";\n\nexport interface Question {\n  id?: string;\n  title: string;\n  content: string[];\n  bookmarked?: boolean;\n  type?: string;\n}\nexport interface User {\n  id: string;\n  displayName?: string;\n  email?: string;\n}\n\nexport interface Favorites {\n  id: string;\n  type: string;\n}\n\nexport interface QuestionMap {\n  id: string;\n  question: Question;\n}\n\nexport const questionCategoriesList = [\"javascript\", \"react\"];\n\nexport enum SidebarItem {\n  JAVASCRIPT = \"JAVASCRIPT\",\n  JAVASCRIPT_FAVORITE = \"JAVASCRIPT_FAVORITE\",\n  REACT = \"REACT\",\n  REACT_FAVORITE = \"REACT_FAVORITE\",\n  ALL_FAVORITES = \"ALL_FAVORITES\",\n}\n\nexport const getCategory = (indexPath: IndexPath) => {\n  if (indexPath.row === 1 && indexPath.section === 0) {\n    return SidebarItem.JAVASCRIPT_FAVORITE;\n  } else if (\n    indexPath.row === 0 &&\n    (indexPath.section === 0 || indexPath.section === undefined)\n  ) {\n    return SidebarItem.JAVASCRIPT;\n  } else if (\n    (indexPath.row === 1 &&\n      (indexPath.section === 0 || indexPath.section === undefined)) ||\n    (indexPath.row === 0 && indexPath.section === 1)\n  ) {\n    return SidebarItem.REACT;\n  } else if (indexPath.row === 1 && indexPath.section === 1) {\n    return SidebarItem.REACT_FAVORITE;\n  } else if (indexPath.row === 2 && indexPath.section === undefined) {\n    return SidebarItem.ALL_FAVORITES;\n  }\n};\n\nexport const getCategoryKey = (category: SidebarItem) => {\n  // If item is present in fav list remove it\n  let getMenuKey = \"javascript\";\n  let setMenuKey = \"setJavascript\";\n\n  if (category === SidebarItem.JAVASCRIPT_FAVORITE) {\n    getMenuKey = \"javascript\";\n    setMenuKey = \"setJavascript\";\n  }\n\n  if (category === SidebarItem.REACT) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n  if (category === SidebarItem.REACT_FAVORITE) {\n    getMenuKey = \"react\";\n    setMenuKey = \"setReact\";\n  }\n\n  return { getMenuKey, setMenuKey };\n};\n\nexport enum AppTheme {\n  LIGHT = \"LIGHT\",\n  DARK = \"DARK\",\n}\n","import {\n  Menu,\n  MenuGroup,\n  MenuItem,\n  Icon,\n  Text,\n  useTheme,\n} from \"@ui-kitten/components\";\nimport { observer } from \"mobx-react-lite\";\nimport { View, StyleSheet } from \"react-native\";\nimport { getCategory } from \"../data-contracts\";\nimport { IStore } from \"../stores\";\n\ninterface Props {\n  store: IStore;\n}\n\nexport const Sidebar = observer(\n  ({ store: { menuStore, questionStore } }: Props) => {\n    const { javascript, react } = questionStore;\n    const theme = useTheme();\n\n    const StarIcon = (props) => (\n      <Icon {...props} style={{ width: 16, height: 16 }} name=\"star-outline\" />\n    );\n\n    const FavCount = (data) => {\n      if (data?.length) {\n        return (\n          <View>\n            <Text\n              style={{\n                backgroundColor: theme[\"color-primary-transparent-200\"],\n                marginRight: 40,\n                width: 40,\n                height: 20,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: 20,\n                fontSize: 10,\n              }}\n              category=\"label\"\n              appearance=\"hint\"\n              status=\"primary\"\n            >\n              {data?.length}\n            </Text>\n          </View>\n        );\n      }\n\n      return null;\n    };\n\n    const BookOpen = (props) => (\n      <Icon\n        {...props}\n        style={{ width: 16, height: 16 }}\n        name=\"book-open-outline\"\n      />\n    );\n\n    return (\n      <Menu\n        selectedIndex={menuStore.selectedMenu}\n        onSelect={(index) => {\n          console.log(index);\n          menuStore.setSelectedMenu(index);\n          questionStore.clearFilter(getCategory(index));\n        }}\n      >\n        {javascript?.fav?.length ? (\n          <MenuGroup title=\"Javascript\">\n            <MenuItem\n              title=\"All\"\n              accessoryLeft={BookOpen}\n              accessoryRight={FavCount(javascript.data)}\n              style={{\n                paddingRight: 40,\n              }}\n            />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(javascript.fav)}\n              style={{\n                paddingRight: 40,\n              }}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem\n            title=\"Javascript\"\n            accessoryRight={FavCount(react.fav)}\n            style={{\n              paddingRight: 40,\n            }}\n          />\n        )}\n\n        {react?.fav?.length ? (\n          <MenuGroup title=\"React\">\n            <MenuItem\n              title=\"All\"\n              accessoryLeft={BookOpen}\n              accessoryRight={FavCount(react.data)}\n              style={{\n                paddingRight: 40,\n              }}\n            />\n            <MenuItem\n              title=\"Favorites\"\n              accessoryLeft={StarIcon}\n              accessoryRight={FavCount(react.fav)}\n              style={{\n                paddingRight: 40,\n              }}\n            />\n          </MenuGroup>\n        ) : (\n          <MenuItem\n            title=\"React\"\n            accessoryRight={FavCount(react.data)}\n            style={{\n              paddingRight: 40,\n            }}\n          />\n        )}\n\n        <MenuItem title=\"HTML\"></MenuItem>\n        <MenuItem title=\"CSS\"></MenuItem>\n        <MenuItem title=\"Accessibility\"></MenuItem>\n      </Menu>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  menuItem: {\n    paddingRight: 40,\n  },\n});\n","import { Spinner } from \"@ui-kitten/components\";\nimport React from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\n\nexport default function Loader() {\n  const { height: screenHeight } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        styles.loaderContainer,\n        {\n          height: `${screenHeight - 90}px`,\n        },\n      ]}\n    >\n      <Spinner size=\"giant\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loaderContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingRight: 200,\n    paddingBottom: 100,\n  },\n});\n","import React, { memo } from \"react\";\nimport { useWindowDimensions, View } from \"react-native\";\nimport RenderHTML from \"react-native-render-html\";\nimport { useTheme, Text } from \"@ui-kitten/components\";\nimport { Question } from \"../data-contracts\";\nimport { Editor } from \"./Editor\";\n\ninterface QuestionDetailProps {\n  selected: Question | undefined;\n}\n\nconst QuestionDetail = ({ selected }: QuestionDetailProps) => {\n  const theme = useTheme();\n  const { width: screenWidth } = useWindowDimensions();\n  const content = selected?.content?.join(\"\");\n\n  if (selected) {\n    return (\n      <RenderHTML\n        contentWidth={screenWidth / 2}\n        source={{\n          html: content,\n        }}\n        baseStyle={{\n          fontSize: 18,\n          letterSpacing: 1,\n          lineHeight: 24,\n        }}\n        tagsStyles={{\n          body: {\n            color: theme[\"text-basic-color\"],\n          },\n          img: {\n            maxWidth: \"100\",\n          },\n          pre: {\n            backgroundColor: theme[\"color-basic-transparent-200\"],\n            padding: 16,\n          },\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: [\n          {\n            translateX: -60,\n            translateY: -20,\n          },\n        ],\n      }}\n    >\n      {/* <Editor /> */}\n      <Text>Select a Question</Text>\n    </View>\n  );\n};\n\nexport default memo(QuestionDetail);\n","import React, { memo } from \"react\";\nimport { useState } from \"react\";\nimport { Question } from \"../data-contracts\";\nimport { StyleSheet, useWindowDimensions } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\nimport RenderHTML from \"react-native-render-html\";\n\ninterface QuestionItemProps {\n  item: Question;\n}\n\nconst QuestionItem = ({ item }: QuestionItemProps) => {\n  const [expanded, setExpanded] = useState(false);\n  const { title, content } = item;\n  const wrappedContent = `<div>${content}</div>`;\n  const { width } = useWindowDimensions();\n\n  return <Text>{item.title}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  accordionItem: {\n    borderWidth: 1,\n    borderColor: \"rgba(0,0,0,0.1)\",\n    borderRadius: 2,\n    marginBottom: 8,\n  },\n});\n\nexport default memo(QuestionItem);\n","import React, { memo } from \"react\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { Button, Icon, IndexPath, ListItem, Text } from \"@ui-kitten/components\";\n\ninterface QuestionItemWebProps {\n  item: Question;\n  selectedItem: Question;\n  index: number;\n  setSlected: (item: Question) => void;\n  toggleFavorite: (item: Question, category: SidebarItem) => void;\n  selectedMenu: IndexPath;\n}\n\nconst QuestionItemWeb = ({\n  item,\n  setSlected,\n  index,\n  toggleFavorite,\n  selectedItem,\n  selectedMenu,\n}: QuestionItemWebProps) => {\n  const onItemClick = () => {\n    setSlected(item);\n  };\n\n  const StarIcon = (props) => (\n    <Icon {...props} name={item?.bookmarked ? \"star\" : \"star-outline\"} />\n  );\n\n  const favButton = () => {\n    return (\n      <Button\n        size=\"tiny\"\n        appearance=\"ghost\"\n        onPress={() => toggleFavorite(item, getCategory(selectedMenu))}\n        status={item?.bookmarked ? \"danger\" : \"basic\"}\n        accessoryLeft={StarIcon}\n      />\n    );\n  };\n\n  const Title = () => {\n    return (\n      <Text\n        category=\"s1\"\n        style={{\n          fontSize: 16,\n          paddingLeft: 8,\n        }}\n      >{`${index + 1}. ${item?.title}`}</Text>\n    );\n  };\n\n  return (\n    <ListItem\n      title={Title}\n      onPress={onItemClick}\n      accessoryRight={favButton}\n      style={{\n        backgroundColor:\n          item?.id === selectedItem?.id ? \"rgba(51, 102, 255, 0.08)\" : null,\n      }}\n    />\n  );\n};\n\nexport default memo(QuestionItemWeb);\n","import { Divider, List } from \"@ui-kitten/components\";\nimport React, { memo } from \"react\";\nimport { Platform } from \"react-native\";\nimport QuestionItem from \"./QuestionItem\";\nimport QuestionItemWeb from \"./QuestionItemWeb\";\n\nfunction QuestionList({\n  listData,\n  toggleFavorite,\n  setSelectedQuestion,\n  selectedQuestion,\n  selectedMenu,\n}) {\n  const renderQuestion = ({ item, index }) => {\n    if (Platform.OS === \"web\") {\n      return (\n        <QuestionItemWeb\n          key={item?.id}\n          item={item}\n          index={index}\n          setSlected={setSelectedQuestion}\n          selectedItem={selectedQuestion}\n          toggleFavorite={toggleFavorite}\n          selectedMenu={selectedMenu}\n        />\n      );\n    }\n    return <QuestionItem key={item?.title} item={item} />;\n  };\n\n  return (\n    <List\n      data={listData}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderQuestion}\n      style={{\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: \"rgba(0,0,0,0.1)\",\n      }}\n    />\n  );\n}\n\nexport default memo(QuestionList);\n","import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Platform, useWindowDimensions } from \"react-native\";\nimport Loader from \"./Loader\";\nimport { Input } from \"@ui-kitten/components\";\nimport QuestionDetail from \"./QuestionDetail\";\nimport { getCategory, Question, SidebarItem } from \"../data-contracts\";\nimport { observer } from \"mobx-react-lite\";\nimport { IStore } from \"../stores\";\nimport QuestionList from \"./QuestionList\";\nimport { apiGetUserData } from \"../apis\";\n\ninterface Props {\n  store: IStore;\n}\n\nlet searchTimer;\n\nexport const QuestionContainer = observer(({ store }: Props) => {\n  const {\n    menuStore: { selectedMenu },\n    authStore: { user, setShowLoginModal },\n    questionStore: {\n      isLoading,\n      getQuestions,\n      toggleFavorite,\n      searchQuestion,\n      filteredList,\n      setFilteredList,\n      react,\n      javascript,\n      setUserFavs,\n    },\n  } = store;\n\n  const [selectedQuestion, setSelectedQuestion] = useState<Question>();\n  const { height: screenHeight } = useWindowDimensions();\n\n  const [value, setValue] = useState(\"\");\n\n  // On Load\n  useEffect(() => {\n    (async () => {\n      getQuestions(SidebarItem.JAVASCRIPT, user?.id);\n    })();\n  }, []);\n\n  const onFavToggle = (item: Question, category: SidebarItem) => {\n    // Allow fav only if user is loggedIn\n    if (user) {\n      toggleFavorite(item, category, user?.id);\n      // Otherwise show login modal\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  // On Menu change\n  useEffect(() => {\n    // set list data based on menu selection\n    const selectedCategory = getCategory(selectedMenu);\n    if (selectedCategory === SidebarItem.JAVASCRIPT) {\n      setFilteredList(javascript.data);\n    } else if (selectedCategory === SidebarItem.JAVASCRIPT_FAVORITE) {\n      setFilteredList(javascript.fav);\n    } else if (selectedCategory === SidebarItem.REACT) {\n      if (react.data.length) {\n        setFilteredList(react.data);\n      } else {\n        getQuestions(SidebarItem.REACT);\n      }\n    } else if (selectedCategory === SidebarItem.REACT_FAVORITE) {\n      setFilteredList(react.fav);\n    }\n  }, [selectedMenu]);\n\n  const onSearch = (value: string) => {\n    setValue(value);\n\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      searchQuestion(value, getCategory(selectedMenu));\n    }, 300);\n  };\n\n  const renderList = () => {\n    if (Platform.OS === \"web\") {\n      return (\n        <>\n          {isLoading && <Loader />}\n          <View style={styles.panel}>\n            <View\n              style={[\n                styles.panelLeft,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Search\"\n                size=\"small\"\n                value={value}\n                onChangeText={onSearch}\n              />\n\n              <QuestionList\n                listData={filteredList}\n                toggleFavorite={onFavToggle}\n                selectedQuestion={selectedQuestion}\n                setSelectedQuestion={setSelectedQuestion}\n                selectedMenu={selectedMenu}\n              />\n            </View>\n            <View\n              style={[\n                styles.panelRight,\n                {\n                  height: `${screenHeight - 90}px`,\n                },\n              ]}\n            >\n              <QuestionDetail selected={selectedQuestion} />\n            </View>\n          </View>\n        </>\n      );\n    }\n\n    // Work For mobile here\n    return (\n      <>\n        {isLoading && <Loader />}\n        <Input\n          placeholder=\"Search\"\n          value={value}\n          onChangeText={(nextValue) => setValue(nextValue)}\n        />\n        <QuestionList\n          listData={filteredList}\n          toggleFavorite={toggleFavorite}\n          selectedQuestion={selectedQuestion}\n          setSelectedQuestion={setSelectedQuestion}\n          selectedMenu={selectedMenu}\n        />\n      </>\n    );\n  };\n\n  return renderList();\n});\n\nconst styles = StyleSheet.create({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  panelLeft: {\n    width: `40%`,\n    overflow: \"scroll\",\n  },\n  panelRight: {\n    width: `60%`,\n    overflow: \"scroll\",\n    padding: 16,\n    paddingRight: 32,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n  OverflowMenu,\n  MenuItem,\n  Text,\n} from \"@ui-kitten/components\";\nimport { AppTheme } from \"../data-contracts\";\nimport { View } from \"react-native\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface Props {\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  store: IStore;\n}\n\nfunction Header({\n  theme,\n  setTheme,\n  store: { authStore, questionStore },\n}: Props) {\n  const { user, isLoggedIn, setShowLoginModal } = authStore;\n  const [visible, setVisible] = useState(false);\n\n  const onItemSelect = () => {\n    setVisible(false);\n  };\n\n  const onLogin = () => {\n    setShowLoginModal(true);\n  };\n\n  const onLogout = () => {\n    authStore.logout();\n  };\n\n  const ToggleIcon = (props) => (\n    <Icon {...props} name={theme === AppTheme.LIGHT ? \"moon\" : \"sun\"} />\n  );\n\n  const Ellipsis = (props) => <Icon {...props} name=\"more-vertical-outline\" />;\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n\n  const renderToggleButton = () => (\n    <Button\n      onPress={() => setVisible(true)}\n      appearance=\"ghost\"\n      size=\"small\"\n      accessoryLeft={Ellipsis}\n    />\n  );\n\n  const renderOverflowMenu = () => {\n    return (\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}\n      >\n        {isLoggedIn && <MenuItem title={user?.displayName} disabled={true} />}\n\n        {isLoggedIn && (\n          <MenuItem\n            onPress={onLogout}\n            title=\"Logout\"\n            accessoryLeft={GoogleIcon}\n          />\n        )}\n\n        {!isLoggedIn && (\n          <MenuItem\n            onPress={onLogin}\n            title=\"Login\"\n            accessoryLeft={GoogleIcon}\n          />\n        )}\n      </OverflowMenu>\n    );\n  };\n\n  const renderRightNav = () => {\n    return (\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n        }}\n      >\n        <TopNavigationAction\n          onPress={() => {\n            setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n          }}\n          icon={ToggleIcon}\n          style={{\n            marginLeft: 16,\n          }}\n        />\n        {!isLoggedIn && (\n          <Button\n            appearance=\"outline\"\n            status=\"primary\"\n            accessoryLeft={GoogleIcon}\n            onPress={onLogin}\n            size=\"tiny\"\n            style={{\n              marginLeft: 16,\n            }}\n          >\n            Login\n          </Button>\n        )}\n        {isLoggedIn && renderOverflowMenu()}\n      </View>\n    );\n  };\n\n  return (\n    <TopNavigation\n      style={{\n        paddingLeft: 16,\n        paddingRight: 16,\n      }}\n      title={\"Interview Questions\"}\n      accessoryRight={renderRightNav}\n    ></TopNavigation>\n  );\n}\n\nexport default observer(Header);\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\nimport { User } from \"../data-contracts\";\n\nexport interface IAuthStore {\n  isLoggedIn: boolean;\n  setIsLoggedIn: (login: boolean) => void;\n  user: User;\n  setUser: (user: User) => void;\n  logout: () => void;\n  clearUser: () => void;\n  showLoginModal: boolean;\n  setShowLoginModal: (value: boolean) => void;\n}\n\nexport class AuthStore implements IAuthStore {\n  isLoggedIn: boolean = false;\n  user: User = undefined;\n  showLoginModal: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    // If user is already logged in\n    // For now use localstorage later can be change with cookies\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      this.setUser(JSON.parse(user));\n      this.setIsLoggedIn(true);\n    }\n  }\n\n  setUser = (user: User) => {\n    this.user = user;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n\n  clearUser = () => {\n    this.user = undefined;\n    localStorage.removeItem(\"user\");\n  };\n\n  setIsLoggedIn = (login: boolean) => {\n    this.isLoggedIn = login;\n  };\n\n  logout = () => {\n    this.setIsLoggedIn(false);\n    this.clearUser();\n    window.location.reload();\n  };\n\n  setShowLoginModal = (value: boolean) => {\n    this.showLoginModal = value;\n  };\n}\n","import { IndexPath } from \"@ui-kitten/components\";\nimport { makeAutoObservable } from \"mobx\";\n\nexport interface IMenuStore {\n  selectedMenu: IndexPath;\n  setSelectedMenu: (selectedMenu: IndexPath) => void;\n}\n\nexport class MenuStore implements IMenuStore {\n  selectedMenu: IndexPath = new IndexPath(0);\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setSelectedMenu(selectedMenu) {\n    this.selectedMenu = selectedMenu;\n  }\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore/lite\"\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"\n\nimport {\n  FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGIN_SENDER_ID,\n  FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID,\n} from \"@env\"\n\n// console.log(FIREBASE_API_KEY);\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: FIREBASE_API_KEY,\n  authDomain: FIREBASE_AUTH_DOMAIN,\n  projectId: FIREBASE_PROJECT_ID,\n  storageBucket: FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: FIREBASE_MESSAGIN_SENDER_ID,\n  appId: FIREBASE_APP_ID,\n  measurementId: FIREBASE_MEASUREMENT_ID,\n}\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig)\nexport const db = getFirestore(app)\n\nconst auth = getAuth(app)\n\nconst googleAuthProvider = new GoogleAuthProvider()\n\nexport const signInWithGoogle = () => signInWithPopup(auth, googleAuthProvider)\n","import {\n  addDoc,\n  collection,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  getDoc,\n} from \"firebase/firestore/lite\";\nimport { User } from \"../data-contracts\";\nimport { db, signInWithGoogle } from \"../firebase-config\";\n\nexport const URLS = {\n  js: \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/js-v1.json\",\n  react:\n    \"https://raw.githubusercontent.com/abhishekraj007/md2json/main/api/react-v1.json\",\n};\n\nexport const apiGetQuestions = async (url: string = URLS.js) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const apiLogInWithGoogle = async () => {\n  try {\n    const result = await signInWithGoogle();\n    return result;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get a list of cities from your database\nexport const apiGetJavascriptQuestions = async () => {\n  const jsCol = collection(db, \"javascript\");\n  const jsSnapshot = await getDocs(jsCol);\n  const jsList = jsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  return jsList;\n};\n\n// Add a question\nexport const apiAddJavascriptQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  console.log(response);\n};\n\n// Add a question\nexport const apiAddReactQuestion = async (payload) => {\n  const jsCol = collection(db, \"javascript\");\n  const response = await addDoc(jsCol, payload);\n  return response;\n};\n\n// Add user\nexport const apiAddUser = async (payload: User) => {\n  const user = doc(db, \"users\", payload.id);\n  try {\n    const response = await setDoc(user, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Update User\nexport const apiUpdateUser = async (payload: any) => {\n  const userRef = doc(db, \"users\", payload.id);\n\n  try {\n    const response = await updateDoc(userRef, payload);\n    return response;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// Get user data\nexport const apiGetUserData = async (userId) => {\n  try {\n    // Get This user from databse\n    const userRef = doc(db, \"users\", userId);\n    const userSnap = await getDoc(userRef);\n    return userSnap;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { apiGetQuestions, URLS, apiUpdateUser, apiGetUserData } from \"../apis\";\nimport { getCategoryKey, Question, SidebarItem } from \"../data-contracts\";\n\ninterface IQModel {\n  data: Question[];\n  fav: Question[];\n}\n\nexport interface IQuestionStore {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  javascript: IQModel;\n  // javascript: Question[];\n  setJavascript: (questions: IQModel) => void;\n  // javascriptFavorites: Question[];\n  // setJavascriptFavorites: (questions: Question[]) => void;\n  react: IQModel;\n  setReact: (data: IQModel) => void;\n  filteredList: Question[];\n  setFilteredList: (questions: Question[]) => void;\n  allFavorites: Question[];\n  setAllFavorites: (questions: Question[]) => void;\n  getQuestions: (type: SidebarItem, userId?: string) => void;\n  toggleFavorite: (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => void;\n  searchQuestion: (text: string, category?: string) => void;\n  clearFilter: (selectedCategory) => void;\n  questions?: {\n    js: IQModel;\n    react: IQModel;\n  };\n  userFavs: Question[];\n  setUserFavs: (data: Question[], category: SidebarItem) => void;\n  questionsMap: any;\n}\n\nexport class QuestionStore implements IQuestionStore {\n  isLoading: boolean = false;\n  filteredList: Question[] = [];\n  allFavorites: Question[] = [];\n  javascript: IQModel = {\n    data: [],\n    fav: [],\n  };\n\n  questionsMap = {};\n\n  react: IQModel = {\n    data: [],\n    fav: [],\n  };\n  userFavs: Question[] = [];\n\n  // This is when user loads the page\n  setUserFavs = (favList: Question[], category?: SidebarItem) => {\n    // Add user bookmarked list\n    this.userFavs = favList;\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    // Filter bookmarked items by category\n    const favs = (favList ?? [])\n      .map((item) => {\n        if (item.type === category) {\n          return { ...item, bookmarked: true };\n        }\n      })\n      .filter((item) => item);\n\n    const currentListIncludingFav = this.includeFavorites(\n      this[getMenuKey].data,\n      favs\n    );\n\n    this[setMenuKey]({\n      fav: favs,\n      data: currentListIncludingFav,\n    });\n    this.setFilteredList(currentListIncludingFav);\n    this.setFavsForAllCategories(favList, category);\n\n    // Set Favs for all categories\n  };\n\n  setFavsForAllCategories = (favList, excludeCurrentCategory) => {\n    const categories = [SidebarItem.JAVASCRIPT, SidebarItem.REACT].filter(\n      (item) => item !== excludeCurrentCategory\n    );\n\n    categories.forEach((category) => {\n      const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n      this[setMenuKey]({\n        data: this[getMenuKey].data,\n        fav: favList\n          ?.map((item) => {\n            if (item.type === category) {\n              return item;\n            }\n          })\n          .filter((item) => item),\n      });\n    });\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  includeFavorites = (data: Question[], favs: Question[]) => {\n    favs.forEach((fav) => {\n      const founded = data.findIndex((item) => item.id === fav.id);\n      data.splice(founded, 1);\n    });\n\n    return [...favs, ...data];\n  };\n\n  getQuestions = async (category: SidebarItem, userId?: string) => {\n    try {\n      console.log(\"made fresh api call\");\n      this.setIsLoading(true);\n      let data = [];\n\n      switch (category) {\n        case SidebarItem.JAVASCRIPT:\n          // Get js questions and set to store\n          data = await apiGetQuestions(URLS.js);\n          this.setJavascript({\n            ...this.javascript,\n            data,\n          });\n\n          // Add data to questionMap\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          // If user is loged in get bookmarked Item\n          // Otherwise there is no bookmared\n\n          if (userId) {\n            const userSnap = await apiGetUserData(userId);\n            this.setUserFavs(userSnap.data().favs, category);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        case SidebarItem.REACT:\n          data = await apiGetQuestions(URLS.react);\n\n          this.setReact({\n            ...this.react,\n            data,\n          });\n\n          data.forEach((item) => {\n            this.questionsMap[item?.id] = item;\n          });\n\n          if (this.userFavs?.length) {\n            this.setUserFavs(this.userFavs, category);\n          } else {\n            this.setFilteredList(data);\n          }\n\n          break;\n        default:\n          console.log(\"Made no call\");\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoading(false);\n    }\n  };\n\n  setJavascript = (data: IQModel) => {\n    this.javascript = data;\n  };\n\n  setReact = (data: IQModel) => {\n    this.react = data;\n  };\n\n  setFilteredList = (data: Question[]) => {\n    this.filteredList = data;\n  };\n\n  setAllFavorites = (data: Question[]) => {\n    this.allFavorites = data;\n  };\n\n  setIsLoading = (isLoading: boolean) => {\n    this.isLoading = isLoading;\n  };\n\n  searchQuestion = (text: string, category: SidebarItem) => {\n    let filtered = [];\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        filtered = this[getMenuKey].data.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        filtered = this.allFavorites.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLowerCase());\n        });\n        break;\n      default:\n        filtered = this[getMenuKey].fav?.filter((q) => {\n          return q.title.toLocaleLowerCase().includes(text.toLocaleLowerCase());\n        });\n    }\n\n    this.setFilteredList(filtered);\n  };\n\n  clearFilter = (category: SidebarItem) => {\n    const { getMenuKey } = getCategoryKey(category);\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(this[getMenuKey].data);\n        break;\n      case SidebarItem.ALL_FAVORITES:\n        this.setFilteredList(this.allFavorites);\n        break;\n      default:\n        this.setFilteredList(this[getMenuKey].fav);\n    }\n  };\n\n  toggleFavorite = (\n    item: Question,\n    category?: SidebarItem,\n    userId?: string\n  ) => {\n    // If item is present in fav list remove it\n    const { getMenuKey, setMenuKey } = getCategoryKey(category);\n\n    const foundedIndex = this[getMenuKey].fav.findIndex(\n      (fav) => fav.id === item.id\n    );\n\n    let foundedEle = this[getMenuKey].fav[foundedIndex];\n    let newList = [];\n    let newFavList = [];\n\n    if (foundedIndex >= 0) {\n      // Remove from fav\n\n      newList = this[getMenuKey].data.map((ele) => {\n        if (ele.id === foundedEle.id) {\n          return {\n            ...ele,\n            bookmarked: false,\n          };\n        }\n        return ele;\n      });\n\n      newFavList = this[getMenuKey].fav.filter(\n        (item) => item.id !== foundedEle.id\n      );\n\n      this[setMenuKey]({ data: newList, fav: newFavList });\n    } else {\n      // Add to fav\n      newList = this[getMenuKey].data.map((question) => {\n        if (question.id === item.id) {\n          return {\n            ...item,\n            bookmarked: true,\n          };\n        }\n        return question;\n      });\n\n      newFavList = [{ ...item, bookmarked: true }, ...this[getMenuKey].fav];\n\n      this[setMenuKey]({ data: newList, fav: newFavList });\n    }\n\n    switch (category) {\n      case SidebarItem.JAVASCRIPT:\n      case SidebarItem.REACT:\n        this.setFilteredList(newList);\n        break;\n      default:\n        this.setFilteredList(newFavList);\n    }\n    const allFavs = [...this.javascript.fav, ...this.react.fav];\n\n    this.setAllFavorites(allFavs);\n\n    apiUpdateUser({\n      id: userId,\n      favs: allFavs,\n    });\n\n    // localStorage.setItem(getMenuKey, JSON.stringify(newFavList));\n  };\n}\n","import { AuthStore, IAuthStore } from \"./authStore\";\nimport { IMenuStore, MenuStore } from \"./menuStore\";\nimport { IQuestionStore, QuestionStore } from \"./questionsStore\";\n\nexport interface IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n}\n\nexport class Store implements IStore {\n  menuStore: IMenuStore;\n  questionStore: IQuestionStore;\n  authStore: IAuthStore;\n\n  constructor() {\n    this.menuStore = new MenuStore();\n    this.questionStore = new QuestionStore();\n    this.authStore = new AuthStore();\n  }\n}\n","import React, { useState } from \"react\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport {\n  Button,\n  Card,\n  Icon,\n  Modal,\n  Spinner,\n  Text,\n} from \"@ui-kitten/components\";\nimport { doc, getDoc } from \"firebase/firestore/lite\";\nimport { db } from \"../firebase-config\";\nimport {\n  apiAddUser,\n  apiGetUserData,\n  apiLogInWithGoogle,\n  apiUpdateUser,\n} from \"../apis\";\nimport { IStore } from \"../stores\";\nimport { observer } from \"mobx-react-lite\";\nimport { getCategory } from \"../data-contracts\";\n\ninterface Props {\n  store: IStore;\n}\n\nconst LoginModal = ({\n  store: { menuStore, authStore, questionStore },\n}: Props) => {\n  const {\n    user,\n    setUser,\n    isLoggedIn,\n    setIsLoggedIn,\n    showLoginModal,\n    setShowLoginModal,\n  } = authStore;\n  const { setUserFavs } = questionStore;\n  const { selectedMenu } = menuStore;\n  const { width } = useWindowDimensions();\n  const [isMakingCall, setIsMakingCall] = useState(false);\n\n  const onLogin = async () => {\n    try {\n      setIsMakingCall(true);\n      // Authenticate using Google\n      const res = await apiLogInWithGoogle();\n      const newUser = {\n        id: res.user.uid,\n        displayName: res.user.displayName,\n        email: res.user.email,\n      };\n\n      // Update state\n      setUser(newUser);\n      setIsLoggedIn(true);\n\n      const userSnap = await apiGetUserData(newUser.id);\n\n      // Check if this user exist\n      if (userSnap.exists()) {\n        // TODO: Can we use to reload page\n        // setUserFavs(userSnap?.data()?.favs, getCategory(selectedMenu));\n        window.location.reload();\n      } else {\n        // Add this user to database\n        await apiAddUser(newUser);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsMakingCall(false);\n      setShowLoginModal(false);\n    }\n  };\n\n  const LoadingIndicator = (props) => (\n    <View>\n      <Spinner size=\"small\" />\n    </View>\n  );\n\n  const GoogleIcon = (props) => <Icon {...props} name=\"google\" />;\n  const CloseIcon = (props) => <Icon {...props} name=\"close\" />;\n\n  const Header = (props) => (\n    <View\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        paddingTop: 12,\n        paddingBottom: 12,\n        paddingLeft: 24,\n        paddingRight: 24,\n        alignItems: \"center\",\n      }}\n    >\n      <Text category=\"h5\">Login</Text>\n      <Button\n        onPress={() => setShowLoginModal(false)}\n        size=\"large\"\n        appearance=\"ghost\"\n        accessoryLeft={CloseIcon}\n      />\n    </View>\n  );\n\n  if (!showLoginModal) {\n    return <View />;\n  }\n\n  return (\n    <View\n      style={{\n        minHeight: 220,\n        position: \"absolute\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        style={{\n          maxWidth: width,\n          width: 420,\n        }}\n        disabled={true}\n        header={Header}\n      >\n        <View\n          style={{\n            paddingTop: 32,\n            paddingBottom: 32,\n          }}\n        >\n          <Button\n            disabled={isMakingCall}\n            size=\"giant\"\n            accessoryLeft={isMakingCall ? LoadingIndicator : GoogleIcon}\n            onPress={onLogin}\n          >\n            Login with Google\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n};\n\nexport default observer(LoginModal);\n","import React from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport {\n  ApplicationProvider,\n  Divider,\n  Layout,\n  IconRegistry,\n  Card,\n} from \"@ui-kitten/components\";\nimport { StyleSheet, useWindowDimensions, View } from \"react-native\";\nimport { Sidebar } from \"./src/components/Sidebar\";\nimport { QuestionContainer } from \"./src/components/QuestionContainer\";\nimport { useState } from \"react\";\nimport { AppTheme } from \"./src/data-contracts\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport Header from \"./src/components/Header\";\nimport { useEffect } from \"react\";\nimport { Store } from \"./src/stores\";\nimport LoginModal from \"./src/components/LoginModal\";\n\nconst store = new Store();\n\nexport default () => {\n  const { width: screenWidth } = useWindowDimensions();\n  const userTheme = localStorage.getItem(\"theme\");\n  const [theme, setTheme] = useState<AppTheme>(\n    (userTheme as AppTheme) ?? AppTheme.LIGHT\n  );\n\n  console.log(store);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <>\n      <IconRegistry icons={EvaIconsPack} />\n      <ApplicationProvider\n        {...eva}\n        theme={theme === AppTheme.LIGHT ? eva.light : eva.dark}\n      >\n        <Header store={store} theme={theme} setTheme={setTheme} />\n        <Divider />\n        <Layout style={styles.container} level=\"3\">\n          <View\n            style={{\n              width: \"280px\",\n            }}\n          >\n            <Sidebar store={store} />\n          </View>\n          <View\n            style={{\n              width: `${screenWidth - 280}px`,\n            }}\n          >\n            <QuestionContainer store={store} />\n          </View>\n        </Layout>\n        <LoginModal store={store} />\n      </ApplicationProvider>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n"],"sourceRoot":""}